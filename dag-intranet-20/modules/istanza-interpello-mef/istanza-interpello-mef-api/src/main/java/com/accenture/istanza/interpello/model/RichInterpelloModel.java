/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.accenture.istanza.interpello.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the RichInterpello service. Represents a row in the &quot;MEFINTERPELLO_RichInterpello&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.accenture.istanza.interpello.model.impl.RichInterpelloModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.accenture.istanza.interpello.model.impl.RichInterpelloImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RichInterpello
 * @see com.accenture.istanza.interpello.model.impl.RichInterpelloImpl
 * @see com.accenture.istanza.interpello.model.impl.RichInterpelloModelImpl
 * @generated
 */
@ProviderType
public interface RichInterpelloModel extends BaseModel<RichInterpello> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a rich interpello model instance should use the {@link RichInterpello} interface instead.
	 */

	/**
	 * Returns the primary key of this rich interpello.
	 *
	 * @return the primary key of this rich interpello
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this rich interpello.
	 *
	 * @param primaryKey the primary key of this rich interpello
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this rich interpello.
	 *
	 * @return the ID of this rich interpello
	 */
	public long getId();

	/**
	 * Sets the ID of this rich interpello.
	 *
	 * @param id the ID of this rich interpello
	 */
	public void setId(long id);

	/**
	 * Returns the id_richiesta of this rich interpello.
	 *
	 * @return the id_richiesta of this rich interpello
	 */
	public long getId_richiesta();

	/**
	 * Sets the id_richiesta of this rich interpello.
	 *
	 * @param id_richiesta the id_richiesta of this rich interpello
	 */
	public void setId_richiesta(long id_richiesta);

	/**
	 * Returns the cognome of this rich interpello.
	 *
	 * @return the cognome of this rich interpello
	 */
	@AutoEscape
	public String getCognome();

	/**
	 * Sets the cognome of this rich interpello.
	 *
	 * @param cognome the cognome of this rich interpello
	 */
	public void setCognome(String cognome);

	/**
	 * Returns the nome of this rich interpello.
	 *
	 * @return the nome of this rich interpello
	 */
	@AutoEscape
	public String getNome();

	/**
	 * Sets the nome of this rich interpello.
	 *
	 * @param nome the nome of this rich interpello
	 */
	public void setNome(String nome);

	/**
	 * Returns the dipartimento of this rich interpello.
	 *
	 * @return the dipartimento of this rich interpello
	 */
	public long getDipartimento();

	/**
	 * Sets the dipartimento of this rich interpello.
	 *
	 * @param dipartimento the dipartimento of this rich interpello
	 */
	public void setDipartimento(long dipartimento);

	/**
	 * Returns the direzione of this rich interpello.
	 *
	 * @return the direzione of this rich interpello
	 */
	public long getDirezione();

	/**
	 * Sets the direzione of this rich interpello.
	 *
	 * @param direzione the direzione of this rich interpello
	 */
	public void setDirezione(long direzione);

	/**
	 * Returns the ufficio of this rich interpello.
	 *
	 * @return the ufficio of this rich interpello
	 */
	public long getUfficio();

	/**
	 * Sets the ufficio of this rich interpello.
	 *
	 * @param ufficio the ufficio of this rich interpello
	 */
	public void setUfficio(long ufficio);

	/**
	 * Returns the screename of this rich interpello.
	 *
	 * @return the screename of this rich interpello
	 */
	@AutoEscape
	public String getScreename();

	/**
	 * Sets the screename of this rich interpello.
	 *
	 * @param screename the screename of this rich interpello
	 */
	public void setScreename(String screename);

	/**
	 * Returns the json_richiedente of this rich interpello.
	 *
	 * @return the json_richiedente of this rich interpello
	 */
	@AutoEscape
	public String getJson_richiedente();

	/**
	 * Sets the json_richiedente of this rich interpello.
	 *
	 * @param json_richiedente the json_richiedente of this rich interpello
	 */
	public void setJson_richiedente(String json_richiedente);

	/**
	 * Returns the json_richiesta of this rich interpello.
	 *
	 * @return the json_richiesta of this rich interpello
	 */
	@AutoEscape
	public String getJson_richiesta();

	/**
	 * Sets the json_richiesta of this rich interpello.
	 *
	 * @param json_richiesta the json_richiesta of this rich interpello
	 */
	public void setJson_richiesta(String json_richiesta);

	/**
	 * Returns the bando of this rich interpello.
	 *
	 * @return the bando of this rich interpello
	 */
	@AutoEscape
	public String getBando();

	/**
	 * Sets the bando of this rich interpello.
	 *
	 * @param bando the bando of this rich interpello
	 */
	public void setBando(String bando);

	/**
	 * Returns the data_richiesta of this rich interpello.
	 *
	 * @return the data_richiesta of this rich interpello
	 */
	public Date getData_richiesta();

	/**
	 * Sets the data_richiesta of this rich interpello.
	 *
	 * @param data_richiesta the data_richiesta of this rich interpello
	 */
	public void setData_richiesta(Date data_richiesta);

	/**
	 * Returns the allegato of this rich interpello.
	 *
	 * @return the allegato of this rich interpello
	 */
	@AutoEscape
	public String getAllegato();

	/**
	 * Sets the allegato of this rich interpello.
	 *
	 * @param allegato the allegato of this rich interpello
	 */
	public void setAllegato(String allegato);

	/**
	 * Returns the pdf of this rich interpello.
	 *
	 * @return the pdf of this rich interpello
	 */
	@AutoEscape
	public String getPdf();

	/**
	 * Sets the pdf of this rich interpello.
	 *
	 * @param pdf the pdf of this rich interpello
	 */
	public void setPdf(String pdf);

	/**
	 * Returns the note of this rich interpello.
	 *
	 * @return the note of this rich interpello
	 */
	@AutoEscape
	public String getNote();

	/**
	 * Sets the note of this rich interpello.
	 *
	 * @param note the note of this rich interpello
	 */
	public void setNote(String note);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(RichInterpello richInterpello);

	@Override
	public int hashCode();

	@Override
	public CacheModel<RichInterpello> toCacheModel();

	@Override
	public RichInterpello toEscapedModel();

	@Override
	public RichInterpello toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}