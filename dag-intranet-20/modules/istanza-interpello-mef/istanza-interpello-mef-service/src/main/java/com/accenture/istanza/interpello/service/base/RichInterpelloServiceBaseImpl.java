/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.accenture.istanza.interpello.service.base;

import com.accenture.istanza.interpello.model.RichInterpello;
import com.accenture.istanza.interpello.service.RichInterpelloService;
import com.accenture.istanza.interpello.service.persistence.EmailPersistence;
import com.accenture.istanza.interpello.service.persistence.RichInterpelloFinder;
import com.accenture.istanza.interpello.service.persistence.RichInterpelloPersistence;
import com.accenture.istanza.interpello.service.persistence.TextRichPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the rich interpello remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.accenture.istanza.interpello.service.impl.RichInterpelloServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.accenture.istanza.interpello.service.impl.RichInterpelloServiceImpl
 * @see com.accenture.istanza.interpello.service.RichInterpelloServiceUtil
 * @generated
 */
public abstract class RichInterpelloServiceBaseImpl extends BaseServiceImpl
	implements RichInterpelloService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.accenture.istanza.interpello.service.RichInterpelloServiceUtil} to access the rich interpello remote service.
	 */

	/**
	 * Returns the email local service.
	 *
	 * @return the email local service
	 */
	public com.accenture.istanza.interpello.service.EmailLocalService getEmailLocalService() {
		return emailLocalService;
	}

	/**
	 * Sets the email local service.
	 *
	 * @param emailLocalService the email local service
	 */
	public void setEmailLocalService(
		com.accenture.istanza.interpello.service.EmailLocalService emailLocalService) {
		this.emailLocalService = emailLocalService;
	}

	/**
	 * Returns the email remote service.
	 *
	 * @return the email remote service
	 */
	public com.accenture.istanza.interpello.service.EmailService getEmailService() {
		return emailService;
	}

	/**
	 * Sets the email remote service.
	 *
	 * @param emailService the email remote service
	 */
	public void setEmailService(
		com.accenture.istanza.interpello.service.EmailService emailService) {
		this.emailService = emailService;
	}

	/**
	 * Returns the email persistence.
	 *
	 * @return the email persistence
	 */
	public EmailPersistence getEmailPersistence() {
		return emailPersistence;
	}

	/**
	 * Sets the email persistence.
	 *
	 * @param emailPersistence the email persistence
	 */
	public void setEmailPersistence(EmailPersistence emailPersistence) {
		this.emailPersistence = emailPersistence;
	}

	/**
	 * Returns the rich interpello local service.
	 *
	 * @return the rich interpello local service
	 */
	public com.accenture.istanza.interpello.service.RichInterpelloLocalService getRichInterpelloLocalService() {
		return richInterpelloLocalService;
	}

	/**
	 * Sets the rich interpello local service.
	 *
	 * @param richInterpelloLocalService the rich interpello local service
	 */
	public void setRichInterpelloLocalService(
		com.accenture.istanza.interpello.service.RichInterpelloLocalService richInterpelloLocalService) {
		this.richInterpelloLocalService = richInterpelloLocalService;
	}

	/**
	 * Returns the rich interpello remote service.
	 *
	 * @return the rich interpello remote service
	 */
	public RichInterpelloService getRichInterpelloService() {
		return richInterpelloService;
	}

	/**
	 * Sets the rich interpello remote service.
	 *
	 * @param richInterpelloService the rich interpello remote service
	 */
	public void setRichInterpelloService(
		RichInterpelloService richInterpelloService) {
		this.richInterpelloService = richInterpelloService;
	}

	/**
	 * Returns the rich interpello persistence.
	 *
	 * @return the rich interpello persistence
	 */
	public RichInterpelloPersistence getRichInterpelloPersistence() {
		return richInterpelloPersistence;
	}

	/**
	 * Sets the rich interpello persistence.
	 *
	 * @param richInterpelloPersistence the rich interpello persistence
	 */
	public void setRichInterpelloPersistence(
		RichInterpelloPersistence richInterpelloPersistence) {
		this.richInterpelloPersistence = richInterpelloPersistence;
	}

	/**
	 * Returns the rich interpello finder.
	 *
	 * @return the rich interpello finder
	 */
	public RichInterpelloFinder getRichInterpelloFinder() {
		return richInterpelloFinder;
	}

	/**
	 * Sets the rich interpello finder.
	 *
	 * @param richInterpelloFinder the rich interpello finder
	 */
	public void setRichInterpelloFinder(
		RichInterpelloFinder richInterpelloFinder) {
		this.richInterpelloFinder = richInterpelloFinder;
	}

	/**
	 * Returns the text rich local service.
	 *
	 * @return the text rich local service
	 */
	public com.accenture.istanza.interpello.service.TextRichLocalService getTextRichLocalService() {
		return textRichLocalService;
	}

	/**
	 * Sets the text rich local service.
	 *
	 * @param textRichLocalService the text rich local service
	 */
	public void setTextRichLocalService(
		com.accenture.istanza.interpello.service.TextRichLocalService textRichLocalService) {
		this.textRichLocalService = textRichLocalService;
	}

	/**
	 * Returns the text rich remote service.
	 *
	 * @return the text rich remote service
	 */
	public com.accenture.istanza.interpello.service.TextRichService getTextRichService() {
		return textRichService;
	}

	/**
	 * Sets the text rich remote service.
	 *
	 * @param textRichService the text rich remote service
	 */
	public void setTextRichService(
		com.accenture.istanza.interpello.service.TextRichService textRichService) {
		this.textRichService = textRichService;
	}

	/**
	 * Returns the text rich persistence.
	 *
	 * @return the text rich persistence
	 */
	public TextRichPersistence getTextRichPersistence() {
		return textRichPersistence;
	}

	/**
	 * Sets the text rich persistence.
	 *
	 * @param textRichPersistence the text rich persistence
	 */
	public void setTextRichPersistence(TextRichPersistence textRichPersistence) {
		this.textRichPersistence = textRichPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return RichInterpelloService.class.getName();
	}

	protected Class<?> getModelClass() {
		return RichInterpello.class;
	}

	protected String getModelClassName() {
		return RichInterpello.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = richInterpelloPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.accenture.istanza.interpello.service.EmailLocalService.class)
	protected com.accenture.istanza.interpello.service.EmailLocalService emailLocalService;
	@BeanReference(type = com.accenture.istanza.interpello.service.EmailService.class)
	protected com.accenture.istanza.interpello.service.EmailService emailService;
	@BeanReference(type = EmailPersistence.class)
	protected EmailPersistence emailPersistence;
	@BeanReference(type = com.accenture.istanza.interpello.service.RichInterpelloLocalService.class)
	protected com.accenture.istanza.interpello.service.RichInterpelloLocalService richInterpelloLocalService;
	@BeanReference(type = RichInterpelloService.class)
	protected RichInterpelloService richInterpelloService;
	@BeanReference(type = RichInterpelloPersistence.class)
	protected RichInterpelloPersistence richInterpelloPersistence;
	@BeanReference(type = RichInterpelloFinder.class)
	protected RichInterpelloFinder richInterpelloFinder;
	@BeanReference(type = com.accenture.istanza.interpello.service.TextRichLocalService.class)
	protected com.accenture.istanza.interpello.service.TextRichLocalService textRichLocalService;
	@BeanReference(type = com.accenture.istanza.interpello.service.TextRichService.class)
	protected com.accenture.istanza.interpello.service.TextRichService textRichService;
	@BeanReference(type = TextRichPersistence.class)
	protected TextRichPersistence textRichPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}