/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package mef.richieste.figli.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

import mef.richieste.figli.model.RICHIESTA_RIMBORSO;
import mef.richieste.figli.model.RICHIESTA_RIMBORSOModel;
import mef.richieste.figli.model.RICHIESTA_RIMBORSOSoap;

/**
 * The base model implementation for the RICHIESTA_RIMBORSO service. Represents a row in the &quot;MFORM_RICHIESTA_RIMBORSO&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>RICHIESTA_RIMBORSOModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RICHIESTA_RIMBORSOImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RICHIESTA_RIMBORSOImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RICHIESTA_RIMBORSOModelImpl
	extends BaseModelImpl<RICHIESTA_RIMBORSO>
	implements RICHIESTA_RIMBORSOModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a richiesta_rimborso model instance should use the <code>RICHIESTA_RIMBORSO</code> interface instead.
	 */
	public static final String TABLE_NAME = "MFORM_RICHIESTA_RIMBORSO";

	public static final Object[][] TABLE_COLUMNS = {
		{"Id", Types.BIGINT}, {"Nome_Richiedente", Types.VARCHAR},
		{"Cognome_Richiedente", Types.VARCHAR},
		{"Codice_Fiscale_Richiedente", Types.VARCHAR},
		{"Utente_Inserimento", Types.VARCHAR},
		{"Data_Inserimento", Types.VARCHAR}, {"Iban", Types.VARCHAR},
		{"Importo", Types.VARCHAR}, {"Figlio_Nome", Types.VARCHAR},
		{"Figlio_Cognome", Types.VARCHAR},
		{"Figlio_Data_Nascita", Types.VARCHAR},
		{"Figlio_Luogo_Nascita", Types.VARCHAR},
		{"Figlio_Codice_Fiscale", Types.VARCHAR}, {"Note", Types.VARCHAR},
		{"Flag_Inviato", Types.BOOLEAN}, {"Telefono", Types.VARCHAR},
		{"Allegato_UUID", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("Id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Nome_Richiedente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Cognome_Richiedente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Codice_Fiscale_Richiedente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Utente_Inserimento", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Data_Inserimento", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Iban", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Importo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Figlio_Nome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Figlio_Cognome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Figlio_Data_Nascita", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Figlio_Luogo_Nascita", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Figlio_Codice_Fiscale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Note", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Flag_Inviato", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("Telefono", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Allegato_UUID", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table MFORM_RICHIESTA_RIMBORSO (Id LONG not null primary key,Nome_Richiedente VARCHAR(75) null,Cognome_Richiedente VARCHAR(75) null,Codice_Fiscale_Richiedente VARCHAR(75) null,Utente_Inserimento VARCHAR(75) null,Data_Inserimento VARCHAR(75) null,Iban VARCHAR(75) null,Importo VARCHAR(75) null,Figlio_Nome VARCHAR(75) null,Figlio_Cognome VARCHAR(75) null,Figlio_Data_Nascita VARCHAR(75) null,Figlio_Luogo_Nascita VARCHAR(75) null,Figlio_Codice_Fiscale VARCHAR(75) null,Note VARCHAR(500) null,Flag_Inviato BOOLEAN,Telefono VARCHAR(75) null,Allegato_UUID VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table MFORM_RICHIESTA_RIMBORSO";

	public static final String ORDER_BY_JPQL =
		" ORDER BY richiesta_rimborso.Id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY MFORM_RICHIESTA_RIMBORSO.Id ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		mef.richieste.figli.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.mef.richieste.figli.model.RICHIESTA_RIMBORSO"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		mef.richieste.figli.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.mef.richieste.figli.model.RICHIESTA_RIMBORSO"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RICHIESTA_RIMBORSO toModel(RICHIESTA_RIMBORSOSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RICHIESTA_RIMBORSO model = new RICHIESTA_RIMBORSOImpl();

		model.setId(soapModel.getId());
		model.setNome_Richiedente(soapModel.getNome_Richiedente());
		model.setCognome_Richiedente(soapModel.getCognome_Richiedente());
		model.setCodice_Fiscale_Richiedente(
			soapModel.getCodice_Fiscale_Richiedente());
		model.setUtente_Inserimento(soapModel.getUtente_Inserimento());
		model.setData_Inserimento(soapModel.getData_Inserimento());
		model.setIban(soapModel.getIban());
		model.setImporto(soapModel.getImporto());
		model.setFiglio_Nome(soapModel.getFiglio_Nome());
		model.setFiglio_Cognome(soapModel.getFiglio_Cognome());
		model.setFiglio_Data_Nascita(soapModel.getFiglio_Data_Nascita());
		model.setFiglio_Luogo_Nascita(soapModel.getFiglio_Luogo_Nascita());
		model.setFiglio_Codice_Fiscale(soapModel.getFiglio_Codice_Fiscale());
		model.setNote(soapModel.getNote());
		model.setFlag_Inviato(soapModel.getFlag_Inviato());
		model.setTelefono(soapModel.getTelefono());
		model.setAllegato_UUID(soapModel.getAllegato_UUID());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RICHIESTA_RIMBORSO> toModels(
		RICHIESTA_RIMBORSOSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<RICHIESTA_RIMBORSO> models = new ArrayList<RICHIESTA_RIMBORSO>(
			soapModels.length);

		for (RICHIESTA_RIMBORSOSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		mef.richieste.figli.service.util.ServiceProps.get(
			"lock.expiration.time.mef.richieste.figli.model.RICHIESTA_RIMBORSO"));

	public RICHIESTA_RIMBORSOModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RICHIESTA_RIMBORSO.class;
	}

	@Override
	public String getModelClassName() {
		return RICHIESTA_RIMBORSO.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RICHIESTA_RIMBORSO, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RICHIESTA_RIMBORSO, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RICHIESTA_RIMBORSO, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RICHIESTA_RIMBORSO)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RICHIESTA_RIMBORSO, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RICHIESTA_RIMBORSO, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RICHIESTA_RIMBORSO)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RICHIESTA_RIMBORSO, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RICHIESTA_RIMBORSO, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, RICHIESTA_RIMBORSO>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			RICHIESTA_RIMBORSO.class.getClassLoader(), RICHIESTA_RIMBORSO.class,
			ModelWrapper.class);

		try {
			Constructor<RICHIESTA_RIMBORSO> constructor =
				(Constructor<RICHIESTA_RIMBORSO>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<RICHIESTA_RIMBORSO, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<RICHIESTA_RIMBORSO, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<RICHIESTA_RIMBORSO, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<RICHIESTA_RIMBORSO, Object>>();
		Map<String, BiConsumer<RICHIESTA_RIMBORSO, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<RICHIESTA_RIMBORSO, ?>>();

		attributeGetterFunctions.put(
			"Id",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getId();
				}

			});
		attributeSetterBiConsumers.put(
			"Id",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Id) {

					richiesta_rimborso.setId((Long)Id);
				}

			});
		attributeGetterFunctions.put(
			"Nome_Richiedente",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getNome_Richiedente();
				}

			});
		attributeSetterBiConsumers.put(
			"Nome_Richiedente",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Nome_Richiedente) {

					richiesta_rimborso.setNome_Richiedente(
						(String)Nome_Richiedente);
				}

			});
		attributeGetterFunctions.put(
			"Cognome_Richiedente",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getCognome_Richiedente();
				}

			});
		attributeSetterBiConsumers.put(
			"Cognome_Richiedente",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Cognome_Richiedente) {

					richiesta_rimborso.setCognome_Richiedente(
						(String)Cognome_Richiedente);
				}

			});
		attributeGetterFunctions.put(
			"Codice_Fiscale_Richiedente",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getCodice_Fiscale_Richiedente();
				}

			});
		attributeSetterBiConsumers.put(
			"Codice_Fiscale_Richiedente",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Codice_Fiscale_Richiedente) {

					richiesta_rimborso.setCodice_Fiscale_Richiedente(
						(String)Codice_Fiscale_Richiedente);
				}

			});
		attributeGetterFunctions.put(
			"Utente_Inserimento",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getUtente_Inserimento();
				}

			});
		attributeSetterBiConsumers.put(
			"Utente_Inserimento",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Utente_Inserimento) {

					richiesta_rimborso.setUtente_Inserimento(
						(String)Utente_Inserimento);
				}

			});
		attributeGetterFunctions.put(
			"Data_Inserimento",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getData_Inserimento();
				}

			});
		attributeSetterBiConsumers.put(
			"Data_Inserimento",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Data_Inserimento) {

					richiesta_rimborso.setData_Inserimento(
						(String)Data_Inserimento);
				}

			});
		attributeGetterFunctions.put(
			"Iban",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getIban();
				}

			});
		attributeSetterBiConsumers.put(
			"Iban",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Iban) {

					richiesta_rimborso.setIban((String)Iban);
				}

			});
		attributeGetterFunctions.put(
			"Importo",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getImporto();
				}

			});
		attributeSetterBiConsumers.put(
			"Importo",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Importo) {

					richiesta_rimborso.setImporto((String)Importo);
				}

			});
		attributeGetterFunctions.put(
			"Figlio_Nome",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFiglio_Nome();
				}

			});
		attributeSetterBiConsumers.put(
			"Figlio_Nome",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Figlio_Nome) {

					richiesta_rimborso.setFiglio_Nome((String)Figlio_Nome);
				}

			});
		attributeGetterFunctions.put(
			"Figlio_Cognome",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFiglio_Cognome();
				}

			});
		attributeSetterBiConsumers.put(
			"Figlio_Cognome",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Figlio_Cognome) {

					richiesta_rimborso.setFiglio_Cognome(
						(String)Figlio_Cognome);
				}

			});
		attributeGetterFunctions.put(
			"Figlio_Data_Nascita",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFiglio_Data_Nascita();
				}

			});
		attributeSetterBiConsumers.put(
			"Figlio_Data_Nascita",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Figlio_Data_Nascita) {

					richiesta_rimborso.setFiglio_Data_Nascita(
						(String)Figlio_Data_Nascita);
				}

			});
		attributeGetterFunctions.put(
			"Figlio_Luogo_Nascita",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFiglio_Luogo_Nascita();
				}

			});
		attributeSetterBiConsumers.put(
			"Figlio_Luogo_Nascita",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Figlio_Luogo_Nascita) {

					richiesta_rimborso.setFiglio_Luogo_Nascita(
						(String)Figlio_Luogo_Nascita);
				}

			});
		attributeGetterFunctions.put(
			"Figlio_Codice_Fiscale",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFiglio_Codice_Fiscale();
				}

			});
		attributeSetterBiConsumers.put(
			"Figlio_Codice_Fiscale",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Figlio_Codice_Fiscale) {

					richiesta_rimborso.setFiglio_Codice_Fiscale(
						(String)Figlio_Codice_Fiscale);
				}

			});
		attributeGetterFunctions.put(
			"Note",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getNote();
				}

			});
		attributeSetterBiConsumers.put(
			"Note",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Note) {

					richiesta_rimborso.setNote((String)Note);
				}

			});
		attributeGetterFunctions.put(
			"Flag_Inviato",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getFlag_Inviato();
				}

			});
		attributeSetterBiConsumers.put(
			"Flag_Inviato",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Flag_Inviato) {

					richiesta_rimborso.setFlag_Inviato((Boolean)Flag_Inviato);
				}

			});
		attributeGetterFunctions.put(
			"Telefono",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getTelefono();
				}

			});
		attributeSetterBiConsumers.put(
			"Telefono",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso, Object Telefono) {

					richiesta_rimborso.setTelefono((String)Telefono);
				}

			});
		attributeGetterFunctions.put(
			"Allegato_UUID",
			new Function<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public Object apply(RICHIESTA_RIMBORSO richiesta_rimborso) {
					return richiesta_rimborso.getAllegato_UUID();
				}

			});
		attributeSetterBiConsumers.put(
			"Allegato_UUID",
			new BiConsumer<RICHIESTA_RIMBORSO, Object>() {

				@Override
				public void accept(
					RICHIESTA_RIMBORSO richiesta_rimborso,
					Object Allegato_UUID) {

					richiesta_rimborso.setAllegato_UUID((String)Allegato_UUID);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getId() {
		return _Id;
	}

	@Override
	public void setId(long Id) {
		_Id = Id;
	}

	@JSON
	@Override
	public String getNome_Richiedente() {
		if (_Nome_Richiedente == null) {
			return "";
		}
		else {
			return _Nome_Richiedente;
		}
	}

	@Override
	public void setNome_Richiedente(String Nome_Richiedente) {
		_Nome_Richiedente = Nome_Richiedente;
	}

	@JSON
	@Override
	public String getCognome_Richiedente() {
		if (_Cognome_Richiedente == null) {
			return "";
		}
		else {
			return _Cognome_Richiedente;
		}
	}

	@Override
	public void setCognome_Richiedente(String Cognome_Richiedente) {
		_Cognome_Richiedente = Cognome_Richiedente;
	}

	@JSON
	@Override
	public String getCodice_Fiscale_Richiedente() {
		if (_Codice_Fiscale_Richiedente == null) {
			return "";
		}
		else {
			return _Codice_Fiscale_Richiedente;
		}
	}

	@Override
	public void setCodice_Fiscale_Richiedente(
		String Codice_Fiscale_Richiedente) {

		_Codice_Fiscale_Richiedente = Codice_Fiscale_Richiedente;
	}

	@JSON
	@Override
	public String getUtente_Inserimento() {
		if (_Utente_Inserimento == null) {
			return "";
		}
		else {
			return _Utente_Inserimento;
		}
	}

	@Override
	public void setUtente_Inserimento(String Utente_Inserimento) {
		_Utente_Inserimento = Utente_Inserimento;
	}

	@JSON
	@Override
	public String getData_Inserimento() {
		if (_Data_Inserimento == null) {
			return "";
		}
		else {
			return _Data_Inserimento;
		}
	}

	@Override
	public void setData_Inserimento(String Data_Inserimento) {
		_Data_Inserimento = Data_Inserimento;
	}

	@JSON
	@Override
	public String getIban() {
		if (_Iban == null) {
			return "";
		}
		else {
			return _Iban;
		}
	}

	@Override
	public void setIban(String Iban) {
		_Iban = Iban;
	}

	@JSON
	@Override
	public String getImporto() {
		if (_Importo == null) {
			return "";
		}
		else {
			return _Importo;
		}
	}

	@Override
	public void setImporto(String Importo) {
		_Importo = Importo;
	}

	@JSON
	@Override
	public String getFiglio_Nome() {
		if (_Figlio_Nome == null) {
			return "";
		}
		else {
			return _Figlio_Nome;
		}
	}

	@Override
	public void setFiglio_Nome(String Figlio_Nome) {
		_Figlio_Nome = Figlio_Nome;
	}

	@JSON
	@Override
	public String getFiglio_Cognome() {
		if (_Figlio_Cognome == null) {
			return "";
		}
		else {
			return _Figlio_Cognome;
		}
	}

	@Override
	public void setFiglio_Cognome(String Figlio_Cognome) {
		_Figlio_Cognome = Figlio_Cognome;
	}

	@JSON
	@Override
	public String getFiglio_Data_Nascita() {
		if (_Figlio_Data_Nascita == null) {
			return "";
		}
		else {
			return _Figlio_Data_Nascita;
		}
	}

	@Override
	public void setFiglio_Data_Nascita(String Figlio_Data_Nascita) {
		_Figlio_Data_Nascita = Figlio_Data_Nascita;
	}

	@JSON
	@Override
	public String getFiglio_Luogo_Nascita() {
		if (_Figlio_Luogo_Nascita == null) {
			return "";
		}
		else {
			return _Figlio_Luogo_Nascita;
		}
	}

	@Override
	public void setFiglio_Luogo_Nascita(String Figlio_Luogo_Nascita) {
		_Figlio_Luogo_Nascita = Figlio_Luogo_Nascita;
	}

	@JSON
	@Override
	public String getFiglio_Codice_Fiscale() {
		if (_Figlio_Codice_Fiscale == null) {
			return "";
		}
		else {
			return _Figlio_Codice_Fiscale;
		}
	}

	@Override
	public void setFiglio_Codice_Fiscale(String Figlio_Codice_Fiscale) {
		_Figlio_Codice_Fiscale = Figlio_Codice_Fiscale;
	}

	@JSON
	@Override
	public String getNote() {
		if (_Note == null) {
			return "";
		}
		else {
			return _Note;
		}
	}

	@Override
	public void setNote(String Note) {
		_Note = Note;
	}

	@JSON
	@Override
	public Boolean getFlag_Inviato() {
		return _Flag_Inviato;
	}

	@Override
	public void setFlag_Inviato(Boolean Flag_Inviato) {
		_Flag_Inviato = Flag_Inviato;
	}

	@JSON
	@Override
	public String getTelefono() {
		if (_Telefono == null) {
			return "";
		}
		else {
			return _Telefono;
		}
	}

	@Override
	public void setTelefono(String Telefono) {
		_Telefono = Telefono;
	}

	@JSON
	@Override
	public String getAllegato_UUID() {
		if (_Allegato_UUID == null) {
			return "";
		}
		else {
			return _Allegato_UUID;
		}
	}

	@Override
	public void setAllegato_UUID(String Allegato_UUID) {
		_Allegato_UUID = Allegato_UUID;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, RICHIESTA_RIMBORSO.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RICHIESTA_RIMBORSO toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = _escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RICHIESTA_RIMBORSOImpl richiesta_rimborsoImpl =
			new RICHIESTA_RIMBORSOImpl();

		richiesta_rimborsoImpl.setId(getId());
		richiesta_rimborsoImpl.setNome_Richiedente(getNome_Richiedente());
		richiesta_rimborsoImpl.setCognome_Richiedente(getCognome_Richiedente());
		richiesta_rimborsoImpl.setCodice_Fiscale_Richiedente(
			getCodice_Fiscale_Richiedente());
		richiesta_rimborsoImpl.setUtente_Inserimento(getUtente_Inserimento());
		richiesta_rimborsoImpl.setData_Inserimento(getData_Inserimento());
		richiesta_rimborsoImpl.setIban(getIban());
		richiesta_rimborsoImpl.setImporto(getImporto());
		richiesta_rimborsoImpl.setFiglio_Nome(getFiglio_Nome());
		richiesta_rimborsoImpl.setFiglio_Cognome(getFiglio_Cognome());
		richiesta_rimborsoImpl.setFiglio_Data_Nascita(getFiglio_Data_Nascita());
		richiesta_rimborsoImpl.setFiglio_Luogo_Nascita(
			getFiglio_Luogo_Nascita());
		richiesta_rimborsoImpl.setFiglio_Codice_Fiscale(
			getFiglio_Codice_Fiscale());
		richiesta_rimborsoImpl.setNote(getNote());
		richiesta_rimborsoImpl.setFlag_Inviato(getFlag_Inviato());
		richiesta_rimborsoImpl.setTelefono(getTelefono());
		richiesta_rimborsoImpl.setAllegato_UUID(getAllegato_UUID());

		richiesta_rimborsoImpl.resetOriginalValues();

		return richiesta_rimborsoImpl;
	}

	@Override
	public int compareTo(RICHIESTA_RIMBORSO richiesta_rimborso) {
		long primaryKey = richiesta_rimborso.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RICHIESTA_RIMBORSO)) {
			return false;
		}

		RICHIESTA_RIMBORSO richiesta_rimborso = (RICHIESTA_RIMBORSO)obj;

		long primaryKey = richiesta_rimborso.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RICHIESTA_RIMBORSO> toCacheModel() {
		RICHIESTA_RIMBORSOCacheModel richiesta_rimborsoCacheModel =
			new RICHIESTA_RIMBORSOCacheModel();

		richiesta_rimborsoCacheModel.Id = getId();

		richiesta_rimborsoCacheModel.Nome_Richiedente = getNome_Richiedente();

		String Nome_Richiedente = richiesta_rimborsoCacheModel.Nome_Richiedente;

		if ((Nome_Richiedente != null) && (Nome_Richiedente.length() == 0)) {
			richiesta_rimborsoCacheModel.Nome_Richiedente = null;
		}

		richiesta_rimborsoCacheModel.Cognome_Richiedente =
			getCognome_Richiedente();

		String Cognome_Richiedente =
			richiesta_rimborsoCacheModel.Cognome_Richiedente;

		if ((Cognome_Richiedente != null) &&
			(Cognome_Richiedente.length() == 0)) {

			richiesta_rimborsoCacheModel.Cognome_Richiedente = null;
		}

		richiesta_rimborsoCacheModel.Codice_Fiscale_Richiedente =
			getCodice_Fiscale_Richiedente();

		String Codice_Fiscale_Richiedente =
			richiesta_rimborsoCacheModel.Codice_Fiscale_Richiedente;

		if ((Codice_Fiscale_Richiedente != null) &&
			(Codice_Fiscale_Richiedente.length() == 0)) {

			richiesta_rimborsoCacheModel.Codice_Fiscale_Richiedente = null;
		}

		richiesta_rimborsoCacheModel.Utente_Inserimento =
			getUtente_Inserimento();

		String Utente_Inserimento =
			richiesta_rimborsoCacheModel.Utente_Inserimento;

		if ((Utente_Inserimento != null) &&
			(Utente_Inserimento.length() == 0)) {

			richiesta_rimborsoCacheModel.Utente_Inserimento = null;
		}

		richiesta_rimborsoCacheModel.Data_Inserimento = getData_Inserimento();

		String Data_Inserimento = richiesta_rimborsoCacheModel.Data_Inserimento;

		if ((Data_Inserimento != null) && (Data_Inserimento.length() == 0)) {
			richiesta_rimborsoCacheModel.Data_Inserimento = null;
		}

		richiesta_rimborsoCacheModel.Iban = getIban();

		String Iban = richiesta_rimborsoCacheModel.Iban;

		if ((Iban != null) && (Iban.length() == 0)) {
			richiesta_rimborsoCacheModel.Iban = null;
		}

		richiesta_rimborsoCacheModel.Importo = getImporto();

		String Importo = richiesta_rimborsoCacheModel.Importo;

		if ((Importo != null) && (Importo.length() == 0)) {
			richiesta_rimborsoCacheModel.Importo = null;
		}

		richiesta_rimborsoCacheModel.Figlio_Nome = getFiglio_Nome();

		String Figlio_Nome = richiesta_rimborsoCacheModel.Figlio_Nome;

		if ((Figlio_Nome != null) && (Figlio_Nome.length() == 0)) {
			richiesta_rimborsoCacheModel.Figlio_Nome = null;
		}

		richiesta_rimborsoCacheModel.Figlio_Cognome = getFiglio_Cognome();

		String Figlio_Cognome = richiesta_rimborsoCacheModel.Figlio_Cognome;

		if ((Figlio_Cognome != null) && (Figlio_Cognome.length() == 0)) {
			richiesta_rimborsoCacheModel.Figlio_Cognome = null;
		}

		richiesta_rimborsoCacheModel.Figlio_Data_Nascita =
			getFiglio_Data_Nascita();

		String Figlio_Data_Nascita =
			richiesta_rimborsoCacheModel.Figlio_Data_Nascita;

		if ((Figlio_Data_Nascita != null) &&
			(Figlio_Data_Nascita.length() == 0)) {

			richiesta_rimborsoCacheModel.Figlio_Data_Nascita = null;
		}

		richiesta_rimborsoCacheModel.Figlio_Luogo_Nascita =
			getFiglio_Luogo_Nascita();

		String Figlio_Luogo_Nascita =
			richiesta_rimborsoCacheModel.Figlio_Luogo_Nascita;

		if ((Figlio_Luogo_Nascita != null) &&
			(Figlio_Luogo_Nascita.length() == 0)) {

			richiesta_rimborsoCacheModel.Figlio_Luogo_Nascita = null;
		}

		richiesta_rimborsoCacheModel.Figlio_Codice_Fiscale =
			getFiglio_Codice_Fiscale();

		String Figlio_Codice_Fiscale =
			richiesta_rimborsoCacheModel.Figlio_Codice_Fiscale;

		if ((Figlio_Codice_Fiscale != null) &&
			(Figlio_Codice_Fiscale.length() == 0)) {

			richiesta_rimborsoCacheModel.Figlio_Codice_Fiscale = null;
		}

		richiesta_rimborsoCacheModel.Note = getNote();

		String Note = richiesta_rimborsoCacheModel.Note;

		if ((Note != null) && (Note.length() == 0)) {
			richiesta_rimborsoCacheModel.Note = null;
		}

		richiesta_rimborsoCacheModel.Flag_Inviato = getFlag_Inviato();

		richiesta_rimborsoCacheModel.Telefono = getTelefono();

		String Telefono = richiesta_rimborsoCacheModel.Telefono;

		if ((Telefono != null) && (Telefono.length() == 0)) {
			richiesta_rimborsoCacheModel.Telefono = null;
		}

		richiesta_rimborsoCacheModel.Allegato_UUID = getAllegato_UUID();

		String Allegato_UUID = richiesta_rimborsoCacheModel.Allegato_UUID;

		if ((Allegato_UUID != null) && (Allegato_UUID.length() == 0)) {
			richiesta_rimborsoCacheModel.Allegato_UUID = null;
		}

		return richiesta_rimborsoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RICHIESTA_RIMBORSO, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RICHIESTA_RIMBORSO, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RICHIESTA_RIMBORSO, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((RICHIESTA_RIMBORSO)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<RICHIESTA_RIMBORSO, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<RICHIESTA_RIMBORSO, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RICHIESTA_RIMBORSO, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((RICHIESTA_RIMBORSO)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final Function<InvocationHandler, RICHIESTA_RIMBORSO>
		_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	private long _Id;
	private String _Nome_Richiedente;
	private String _Cognome_Richiedente;
	private String _Codice_Fiscale_Richiedente;
	private String _Utente_Inserimento;
	private String _Data_Inserimento;
	private String _Iban;
	private String _Importo;
	private String _Figlio_Nome;
	private String _Figlio_Cognome;
	private String _Figlio_Data_Nascita;
	private String _Figlio_Luogo_Nascita;
	private String _Figlio_Codice_Fiscale;
	private String _Note;
	private Boolean _Flag_Inviato;
	private String _Telefono;
	private String _Allegato_UUID;
	private RICHIESTA_RIMBORSO _escapedModel;

}