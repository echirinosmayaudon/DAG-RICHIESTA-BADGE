/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.richieste.badge.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import servizio.richieste.badge.mef.model.RichiestaBadge;
import servizio.richieste.badge.mef.model.RichiestaBadgeModel;
import servizio.richieste.badge.mef.model.RichiestaBadgeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the RichiestaBadge service. Represents a row in the &quot;MBADGE_RichiestaBadge&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RichiestaBadgeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RichiestaBadgeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RichiestaBadgeImpl
 * @see RichiestaBadge
 * @see RichiestaBadgeModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RichiestaBadgeModelImpl extends BaseModelImpl<RichiestaBadge>
	implements RichiestaBadgeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a richiesta badge model instance should use the {@link RichiestaBadge} interface instead.
	 */
	public static final String TABLE_NAME = "MBADGE_RichiestaBadge";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_pk", Types.BIGINT },
			{ "id_richiesta", Types.BIGINT },
			{ "screename_richiedente", Types.VARCHAR },
			{ "id_ufficio", Types.BIGINT },
			{ "id_sedesiap", Types.BIGINT },
			{ "json_richiedente", Types.VARCHAR },
			{ "is_internal", Types.BOOLEAN },
			{ "nome_intestatario", Types.VARCHAR },
			{ "cognome_intestatario", Types.VARCHAR },
			{ "cf_intestatario", Types.VARCHAR },
			{ "luogonascita_intestatario", Types.VARCHAR },
			{ "datanascita_intestatario", Types.TIMESTAMP },
			{ "id_oggetto", Types.BIGINT },
			{ "numero_badge", Types.VARCHAR },
			{ "uuid_foto", Types.VARCHAR },
			{ "uuid_modulosostituzione", Types.VARCHAR },
			{ "societa", Types.VARCHAR },
			{ "referente_societa", Types.VARCHAR },
			{ "progetto", Types.VARCHAR },
			{ "json_richiesta_external", Types.VARCHAR },
			{ "array_sedi_abilitate", Types.VARCHAR },
			{ "motivazione", Types.VARCHAR },
			{ "data_scadenza", Types.TIMESTAMP },
			{ "uuid_modulopdf", Types.VARCHAR },
			{ "data_richiesta", Types.TIMESTAMP },
			{ "data_modifica", Types.TIMESTAMP },
			{ "id_stato", Types.BIGINT },
			{ "utente_cambio_stato", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "is_last", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_pk", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_richiesta", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("screename_richiedente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_ufficio", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_sedesiap", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("json_richiedente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("is_internal", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("nome_intestatario", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cognome_intestatario", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cf_intestatario", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("luogonascita_intestatario", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("datanascita_intestatario", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("id_oggetto", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("numero_badge", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uuid_foto", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uuid_modulosostituzione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("societa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("referente_societa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("progetto", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("json_richiesta_external", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("array_sedi_abilitate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("motivazione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("data_scadenza", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("uuid_modulopdf", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("data_richiesta", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("data_modifica", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("id_stato", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("utente_cambio_stato", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("note", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("is_last", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table MBADGE_RichiestaBadge (id_pk LONG not null primary key,id_richiesta LONG,screename_richiedente VARCHAR(16) null,id_ufficio LONG,id_sedesiap LONG,json_richiedente VARCHAR(1000) null,is_internal BOOLEAN,nome_intestatario VARCHAR(75) null,cognome_intestatario VARCHAR(75) null,cf_intestatario VARCHAR(16) null,luogonascita_intestatario VARCHAR(255) null,datanascita_intestatario DATE null,id_oggetto LONG,numero_badge VARCHAR(75) null,uuid_foto VARCHAR(75) null,uuid_modulosostituzione VARCHAR(75) null,societa VARCHAR(150) null,referente_societa VARCHAR(100) null,progetto VARCHAR(500) null,json_richiesta_external VARCHAR(1500) null,array_sedi_abilitate VARCHAR(255) null,motivazione VARCHAR(500) null,data_scadenza DATE null,uuid_modulopdf VARCHAR(75) null,data_richiesta DATE null,data_modifica DATE null,id_stato LONG,utente_cambio_stato VARCHAR(16) null,note VARCHAR(500) null,is_last BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table MBADGE_RichiestaBadge";
	public static final String ORDER_BY_JPQL = " ORDER BY richiestaBadge.id_pk ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MBADGE_RichiestaBadge.id_pk ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.servizio.richieste.badge.mef.model.RichiestaBadge"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.servizio.richieste.badge.mef.model.RichiestaBadge"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.servizio.richieste.badge.mef.model.RichiestaBadge"),
			true);
	public static final long ID_RICHIESTA_COLUMN_BITMASK = 1L;
	public static final long ID_SEDESIAP_COLUMN_BITMASK = 2L;
	public static final long ID_STATO_COLUMN_BITMASK = 4L;
	public static final long IS_INTERNAL_COLUMN_BITMASK = 8L;
	public static final long IS_LAST_COLUMN_BITMASK = 16L;
	public static final long SCREENAME_RICHIEDENTE_COLUMN_BITMASK = 32L;
	public static final long ID_PK_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RichiestaBadge toModel(RichiestaBadgeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RichiestaBadge model = new RichiestaBadgeImpl();

		model.setId_pk(soapModel.getId_pk());
		model.setId_richiesta(soapModel.getId_richiesta());
		model.setScreename_richiedente(soapModel.getScreename_richiedente());
		model.setId_ufficio(soapModel.getId_ufficio());
		model.setId_sedesiap(soapModel.getId_sedesiap());
		model.setJson_richiedente(soapModel.getJson_richiedente());
		model.setIs_internal(soapModel.getIs_internal());
		model.setNome_intestatario(soapModel.getNome_intestatario());
		model.setCognome_intestatario(soapModel.getCognome_intestatario());
		model.setCf_intestatario(soapModel.getCf_intestatario());
		model.setLuogonascita_intestatario(soapModel.getLuogonascita_intestatario());
		model.setDatanascita_intestatario(soapModel.getDatanascita_intestatario());
		model.setId_oggetto(soapModel.getId_oggetto());
		model.setNumero_badge(soapModel.getNumero_badge());
		model.setUuid_foto(soapModel.getUuid_foto());
		model.setUuid_modulosostituzione(soapModel.getUuid_modulosostituzione());
		model.setSocieta(soapModel.getSocieta());
		model.setReferente_societa(soapModel.getReferente_societa());
		model.setProgetto(soapModel.getProgetto());
		model.setJson_richiesta_external(soapModel.getJson_richiesta_external());
		model.setArray_sedi_abilitate(soapModel.getArray_sedi_abilitate());
		model.setMotivazione(soapModel.getMotivazione());
		model.setData_scadenza(soapModel.getData_scadenza());
		model.setUuid_modulopdf(soapModel.getUuid_modulopdf());
		model.setData_richiesta(soapModel.getData_richiesta());
		model.setData_modifica(soapModel.getData_modifica());
		model.setId_stato(soapModel.getId_stato());
		model.setUtente_cambio_stato(soapModel.getUtente_cambio_stato());
		model.setNote(soapModel.getNote());
		model.setIs_last(soapModel.getIs_last());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RichiestaBadge> toModels(RichiestaBadgeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<RichiestaBadge> models = new ArrayList<RichiestaBadge>(soapModels.length);

		for (RichiestaBadgeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"lock.expiration.time.servizio.richieste.badge.mef.model.RichiestaBadge"));

	public RichiestaBadgeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_pk;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_pk(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_pk;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RichiestaBadge.class;
	}

	@Override
	public String getModelClassName() {
		return RichiestaBadge.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_pk", getId_pk());
		attributes.put("id_richiesta", getId_richiesta());
		attributes.put("screename_richiedente", getScreename_richiedente());
		attributes.put("id_ufficio", getId_ufficio());
		attributes.put("id_sedesiap", getId_sedesiap());
		attributes.put("json_richiedente", getJson_richiedente());
		attributes.put("is_internal", getIs_internal());
		attributes.put("nome_intestatario", getNome_intestatario());
		attributes.put("cognome_intestatario", getCognome_intestatario());
		attributes.put("cf_intestatario", getCf_intestatario());
		attributes.put("luogonascita_intestatario",
			getLuogonascita_intestatario());
		attributes.put("datanascita_intestatario", getDatanascita_intestatario());
		attributes.put("id_oggetto", getId_oggetto());
		attributes.put("numero_badge", getNumero_badge());
		attributes.put("uuid_foto", getUuid_foto());
		attributes.put("uuid_modulosostituzione", getUuid_modulosostituzione());
		attributes.put("societa", getSocieta());
		attributes.put("referente_societa", getReferente_societa());
		attributes.put("progetto", getProgetto());
		attributes.put("json_richiesta_external", getJson_richiesta_external());
		attributes.put("array_sedi_abilitate", getArray_sedi_abilitate());
		attributes.put("motivazione", getMotivazione());
		attributes.put("data_scadenza", getData_scadenza());
		attributes.put("uuid_modulopdf", getUuid_modulopdf());
		attributes.put("data_richiesta", getData_richiesta());
		attributes.put("data_modifica", getData_modifica());
		attributes.put("id_stato", getId_stato());
		attributes.put("utente_cambio_stato", getUtente_cambio_stato());
		attributes.put("note", getNote());
		attributes.put("is_last", getIs_last());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_pk = (Long)attributes.get("id_pk");

		if (id_pk != null) {
			setId_pk(id_pk);
		}

		Long id_richiesta = (Long)attributes.get("id_richiesta");

		if (id_richiesta != null) {
			setId_richiesta(id_richiesta);
		}

		String screename_richiedente = (String)attributes.get(
				"screename_richiedente");

		if (screename_richiedente != null) {
			setScreename_richiedente(screename_richiedente);
		}

		Long id_ufficio = (Long)attributes.get("id_ufficio");

		if (id_ufficio != null) {
			setId_ufficio(id_ufficio);
		}

		Long id_sedesiap = (Long)attributes.get("id_sedesiap");

		if (id_sedesiap != null) {
			setId_sedesiap(id_sedesiap);
		}

		String json_richiedente = (String)attributes.get("json_richiedente");

		if (json_richiedente != null) {
			setJson_richiedente(json_richiedente);
		}

		Boolean is_internal = (Boolean)attributes.get("is_internal");

		if (is_internal != null) {
			setIs_internal(is_internal);
		}

		String nome_intestatario = (String)attributes.get("nome_intestatario");

		if (nome_intestatario != null) {
			setNome_intestatario(nome_intestatario);
		}

		String cognome_intestatario = (String)attributes.get(
				"cognome_intestatario");

		if (cognome_intestatario != null) {
			setCognome_intestatario(cognome_intestatario);
		}

		String cf_intestatario = (String)attributes.get("cf_intestatario");

		if (cf_intestatario != null) {
			setCf_intestatario(cf_intestatario);
		}

		String luogonascita_intestatario = (String)attributes.get(
				"luogonascita_intestatario");

		if (luogonascita_intestatario != null) {
			setLuogonascita_intestatario(luogonascita_intestatario);
		}

		Date datanascita_intestatario = (Date)attributes.get(
				"datanascita_intestatario");

		if (datanascita_intestatario != null) {
			setDatanascita_intestatario(datanascita_intestatario);
		}

		Long id_oggetto = (Long)attributes.get("id_oggetto");

		if (id_oggetto != null) {
			setId_oggetto(id_oggetto);
		}

		String numero_badge = (String)attributes.get("numero_badge");

		if (numero_badge != null) {
			setNumero_badge(numero_badge);
		}

		String uuid_foto = (String)attributes.get("uuid_foto");

		if (uuid_foto != null) {
			setUuid_foto(uuid_foto);
		}

		String uuid_modulosostituzione = (String)attributes.get(
				"uuid_modulosostituzione");

		if (uuid_modulosostituzione != null) {
			setUuid_modulosostituzione(uuid_modulosostituzione);
		}

		String societa = (String)attributes.get("societa");

		if (societa != null) {
			setSocieta(societa);
		}

		String referente_societa = (String)attributes.get("referente_societa");

		if (referente_societa != null) {
			setReferente_societa(referente_societa);
		}

		String progetto = (String)attributes.get("progetto");

		if (progetto != null) {
			setProgetto(progetto);
		}

		String json_richiesta_external = (String)attributes.get(
				"json_richiesta_external");

		if (json_richiesta_external != null) {
			setJson_richiesta_external(json_richiesta_external);
		}

		String array_sedi_abilitate = (String)attributes.get(
				"array_sedi_abilitate");

		if (array_sedi_abilitate != null) {
			setArray_sedi_abilitate(array_sedi_abilitate);
		}

		String motivazione = (String)attributes.get("motivazione");

		if (motivazione != null) {
			setMotivazione(motivazione);
		}

		Date data_scadenza = (Date)attributes.get("data_scadenza");

		if (data_scadenza != null) {
			setData_scadenza(data_scadenza);
		}

		String uuid_modulopdf = (String)attributes.get("uuid_modulopdf");

		if (uuid_modulopdf != null) {
			setUuid_modulopdf(uuid_modulopdf);
		}

		Date data_richiesta = (Date)attributes.get("data_richiesta");

		if (data_richiesta != null) {
			setData_richiesta(data_richiesta);
		}

		Date data_modifica = (Date)attributes.get("data_modifica");

		if (data_modifica != null) {
			setData_modifica(data_modifica);
		}

		Long id_stato = (Long)attributes.get("id_stato");

		if (id_stato != null) {
			setId_stato(id_stato);
		}

		String utente_cambio_stato = (String)attributes.get(
				"utente_cambio_stato");

		if (utente_cambio_stato != null) {
			setUtente_cambio_stato(utente_cambio_stato);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Boolean is_last = (Boolean)attributes.get("is_last");

		if (is_last != null) {
			setIs_last(is_last);
		}
	}

	@JSON
	@Override
	public long getId_pk() {
		return _id_pk;
	}

	@Override
	public void setId_pk(long id_pk) {
		_id_pk = id_pk;
	}

	@JSON
	@Override
	public long getId_richiesta() {
		return _id_richiesta;
	}

	@Override
	public void setId_richiesta(long id_richiesta) {
		_columnBitmask |= ID_RICHIESTA_COLUMN_BITMASK;

		if (!_setOriginalId_richiesta) {
			_setOriginalId_richiesta = true;

			_originalId_richiesta = _id_richiesta;
		}

		_id_richiesta = id_richiesta;
	}

	public long getOriginalId_richiesta() {
		return _originalId_richiesta;
	}

	@JSON
	@Override
	public String getScreename_richiedente() {
		if (_screename_richiedente == null) {
			return StringPool.BLANK;
		}
		else {
			return _screename_richiedente;
		}
	}

	@Override
	public void setScreename_richiedente(String screename_richiedente) {
		_columnBitmask |= SCREENAME_RICHIEDENTE_COLUMN_BITMASK;

		if (_originalScreename_richiedente == null) {
			_originalScreename_richiedente = _screename_richiedente;
		}

		_screename_richiedente = screename_richiedente;
	}

	public String getOriginalScreename_richiedente() {
		return GetterUtil.getString(_originalScreename_richiedente);
	}

	@JSON
	@Override
	public long getId_ufficio() {
		return _id_ufficio;
	}

	@Override
	public void setId_ufficio(long id_ufficio) {
		_id_ufficio = id_ufficio;
	}

	@JSON
	@Override
	public long getId_sedesiap() {
		return _id_sedesiap;
	}

	@Override
	public void setId_sedesiap(long id_sedesiap) {
		_columnBitmask |= ID_SEDESIAP_COLUMN_BITMASK;

		if (!_setOriginalId_sedesiap) {
			_setOriginalId_sedesiap = true;

			_originalId_sedesiap = _id_sedesiap;
		}

		_id_sedesiap = id_sedesiap;
	}

	public long getOriginalId_sedesiap() {
		return _originalId_sedesiap;
	}

	@JSON
	@Override
	public String getJson_richiedente() {
		if (_json_richiedente == null) {
			return StringPool.BLANK;
		}
		else {
			return _json_richiedente;
		}
	}

	@Override
	public void setJson_richiedente(String json_richiedente) {
		_json_richiedente = json_richiedente;
	}

	@JSON
	@Override
	public boolean getIs_internal() {
		return _is_internal;
	}

	@JSON
	@Override
	public boolean isIs_internal() {
		return _is_internal;
	}

	@Override
	public void setIs_internal(boolean is_internal) {
		_columnBitmask |= IS_INTERNAL_COLUMN_BITMASK;

		if (!_setOriginalIs_internal) {
			_setOriginalIs_internal = true;

			_originalIs_internal = _is_internal;
		}

		_is_internal = is_internal;
	}

	public boolean getOriginalIs_internal() {
		return _originalIs_internal;
	}

	@JSON
	@Override
	public String getNome_intestatario() {
		if (_nome_intestatario == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome_intestatario;
		}
	}

	@Override
	public void setNome_intestatario(String nome_intestatario) {
		_nome_intestatario = nome_intestatario;
	}

	@JSON
	@Override
	public String getCognome_intestatario() {
		if (_cognome_intestatario == null) {
			return StringPool.BLANK;
		}
		else {
			return _cognome_intestatario;
		}
	}

	@Override
	public void setCognome_intestatario(String cognome_intestatario) {
		_cognome_intestatario = cognome_intestatario;
	}

	@JSON
	@Override
	public String getCf_intestatario() {
		if (_cf_intestatario == null) {
			return StringPool.BLANK;
		}
		else {
			return _cf_intestatario;
		}
	}

	@Override
	public void setCf_intestatario(String cf_intestatario) {
		_cf_intestatario = cf_intestatario;
	}

	@JSON
	@Override
	public String getLuogonascita_intestatario() {
		if (_luogonascita_intestatario == null) {
			return StringPool.BLANK;
		}
		else {
			return _luogonascita_intestatario;
		}
	}

	@Override
	public void setLuogonascita_intestatario(String luogonascita_intestatario) {
		_luogonascita_intestatario = luogonascita_intestatario;
	}

	@JSON
	@Override
	public Date getDatanascita_intestatario() {
		return _datanascita_intestatario;
	}

	@Override
	public void setDatanascita_intestatario(Date datanascita_intestatario) {
		_datanascita_intestatario = datanascita_intestatario;
	}

	@JSON
	@Override
	public long getId_oggetto() {
		return _id_oggetto;
	}

	@Override
	public void setId_oggetto(long id_oggetto) {
		_id_oggetto = id_oggetto;
	}

	@JSON
	@Override
	public String getNumero_badge() {
		if (_numero_badge == null) {
			return StringPool.BLANK;
		}
		else {
			return _numero_badge;
		}
	}

	@Override
	public void setNumero_badge(String numero_badge) {
		_numero_badge = numero_badge;
	}

	@JSON
	@Override
	public String getUuid_foto() {
		if (_uuid_foto == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid_foto;
		}
	}

	@Override
	public void setUuid_foto(String uuid_foto) {
		_uuid_foto = uuid_foto;
	}

	@JSON
	@Override
	public String getUuid_modulosostituzione() {
		if (_uuid_modulosostituzione == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid_modulosostituzione;
		}
	}

	@Override
	public void setUuid_modulosostituzione(String uuid_modulosostituzione) {
		_uuid_modulosostituzione = uuid_modulosostituzione;
	}

	@JSON
	@Override
	public String getSocieta() {
		if (_societa == null) {
			return StringPool.BLANK;
		}
		else {
			return _societa;
		}
	}

	@Override
	public void setSocieta(String societa) {
		_societa = societa;
	}

	@JSON
	@Override
	public String getReferente_societa() {
		if (_referente_societa == null) {
			return StringPool.BLANK;
		}
		else {
			return _referente_societa;
		}
	}

	@Override
	public void setReferente_societa(String referente_societa) {
		_referente_societa = referente_societa;
	}

	@JSON
	@Override
	public String getProgetto() {
		if (_progetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _progetto;
		}
	}

	@Override
	public void setProgetto(String progetto) {
		_progetto = progetto;
	}

	@JSON
	@Override
	public String getJson_richiesta_external() {
		if (_json_richiesta_external == null) {
			return StringPool.BLANK;
		}
		else {
			return _json_richiesta_external;
		}
	}

	@Override
	public void setJson_richiesta_external(String json_richiesta_external) {
		_json_richiesta_external = json_richiesta_external;
	}

	@JSON
	@Override
	public String getArray_sedi_abilitate() {
		if (_array_sedi_abilitate == null) {
			return StringPool.BLANK;
		}
		else {
			return _array_sedi_abilitate;
		}
	}

	@Override
	public void setArray_sedi_abilitate(String array_sedi_abilitate) {
		_array_sedi_abilitate = array_sedi_abilitate;
	}

	@JSON
	@Override
	public String getMotivazione() {
		if (_motivazione == null) {
			return StringPool.BLANK;
		}
		else {
			return _motivazione;
		}
	}

	@Override
	public void setMotivazione(String motivazione) {
		_motivazione = motivazione;
	}

	@JSON
	@Override
	public Date getData_scadenza() {
		return _data_scadenza;
	}

	@Override
	public void setData_scadenza(Date data_scadenza) {
		_data_scadenza = data_scadenza;
	}

	@JSON
	@Override
	public String getUuid_modulopdf() {
		if (_uuid_modulopdf == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid_modulopdf;
		}
	}

	@Override
	public void setUuid_modulopdf(String uuid_modulopdf) {
		_uuid_modulopdf = uuid_modulopdf;
	}

	@JSON
	@Override
	public Date getData_richiesta() {
		return _data_richiesta;
	}

	@Override
	public void setData_richiesta(Date data_richiesta) {
		_data_richiesta = data_richiesta;
	}

	@JSON
	@Override
	public Date getData_modifica() {
		return _data_modifica;
	}

	@Override
	public void setData_modifica(Date data_modifica) {
		_data_modifica = data_modifica;
	}

	@JSON
	@Override
	public long getId_stato() {
		return _id_stato;
	}

	@Override
	public void setId_stato(long id_stato) {
		_columnBitmask |= ID_STATO_COLUMN_BITMASK;

		if (!_setOriginalId_stato) {
			_setOriginalId_stato = true;

			_originalId_stato = _id_stato;
		}

		_id_stato = id_stato;
	}

	public long getOriginalId_stato() {
		return _originalId_stato;
	}

	@JSON
	@Override
	public String getUtente_cambio_stato() {
		if (_utente_cambio_stato == null) {
			return StringPool.BLANK;
		}
		else {
			return _utente_cambio_stato;
		}
	}

	@Override
	public void setUtente_cambio_stato(String utente_cambio_stato) {
		_utente_cambio_stato = utente_cambio_stato;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public boolean getIs_last() {
		return _is_last;
	}

	@JSON
	@Override
	public boolean isIs_last() {
		return _is_last;
	}

	@Override
	public void setIs_last(boolean is_last) {
		_columnBitmask |= IS_LAST_COLUMN_BITMASK;

		if (!_setOriginalIs_last) {
			_setOriginalIs_last = true;

			_originalIs_last = _is_last;
		}

		_is_last = is_last;
	}

	public boolean getOriginalIs_last() {
		return _originalIs_last;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			RichiestaBadge.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RichiestaBadge toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RichiestaBadge)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RichiestaBadgeImpl richiestaBadgeImpl = new RichiestaBadgeImpl();

		richiestaBadgeImpl.setId_pk(getId_pk());
		richiestaBadgeImpl.setId_richiesta(getId_richiesta());
		richiestaBadgeImpl.setScreename_richiedente(getScreename_richiedente());
		richiestaBadgeImpl.setId_ufficio(getId_ufficio());
		richiestaBadgeImpl.setId_sedesiap(getId_sedesiap());
		richiestaBadgeImpl.setJson_richiedente(getJson_richiedente());
		richiestaBadgeImpl.setIs_internal(getIs_internal());
		richiestaBadgeImpl.setNome_intestatario(getNome_intestatario());
		richiestaBadgeImpl.setCognome_intestatario(getCognome_intestatario());
		richiestaBadgeImpl.setCf_intestatario(getCf_intestatario());
		richiestaBadgeImpl.setLuogonascita_intestatario(getLuogonascita_intestatario());
		richiestaBadgeImpl.setDatanascita_intestatario(getDatanascita_intestatario());
		richiestaBadgeImpl.setId_oggetto(getId_oggetto());
		richiestaBadgeImpl.setNumero_badge(getNumero_badge());
		richiestaBadgeImpl.setUuid_foto(getUuid_foto());
		richiestaBadgeImpl.setUuid_modulosostituzione(getUuid_modulosostituzione());
		richiestaBadgeImpl.setSocieta(getSocieta());
		richiestaBadgeImpl.setReferente_societa(getReferente_societa());
		richiestaBadgeImpl.setProgetto(getProgetto());
		richiestaBadgeImpl.setJson_richiesta_external(getJson_richiesta_external());
		richiestaBadgeImpl.setArray_sedi_abilitate(getArray_sedi_abilitate());
		richiestaBadgeImpl.setMotivazione(getMotivazione());
		richiestaBadgeImpl.setData_scadenza(getData_scadenza());
		richiestaBadgeImpl.setUuid_modulopdf(getUuid_modulopdf());
		richiestaBadgeImpl.setData_richiesta(getData_richiesta());
		richiestaBadgeImpl.setData_modifica(getData_modifica());
		richiestaBadgeImpl.setId_stato(getId_stato());
		richiestaBadgeImpl.setUtente_cambio_stato(getUtente_cambio_stato());
		richiestaBadgeImpl.setNote(getNote());
		richiestaBadgeImpl.setIs_last(getIs_last());

		richiestaBadgeImpl.resetOriginalValues();

		return richiestaBadgeImpl;
	}

	@Override
	public int compareTo(RichiestaBadge richiestaBadge) {
		long primaryKey = richiestaBadge.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RichiestaBadge)) {
			return false;
		}

		RichiestaBadge richiestaBadge = (RichiestaBadge)obj;

		long primaryKey = richiestaBadge.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RichiestaBadgeModelImpl richiestaBadgeModelImpl = this;

		richiestaBadgeModelImpl._originalId_richiesta = richiestaBadgeModelImpl._id_richiesta;

		richiestaBadgeModelImpl._setOriginalId_richiesta = false;

		richiestaBadgeModelImpl._originalScreename_richiedente = richiestaBadgeModelImpl._screename_richiedente;

		richiestaBadgeModelImpl._originalId_sedesiap = richiestaBadgeModelImpl._id_sedesiap;

		richiestaBadgeModelImpl._setOriginalId_sedesiap = false;

		richiestaBadgeModelImpl._originalIs_internal = richiestaBadgeModelImpl._is_internal;

		richiestaBadgeModelImpl._setOriginalIs_internal = false;

		richiestaBadgeModelImpl._originalId_stato = richiestaBadgeModelImpl._id_stato;

		richiestaBadgeModelImpl._setOriginalId_stato = false;

		richiestaBadgeModelImpl._originalIs_last = richiestaBadgeModelImpl._is_last;

		richiestaBadgeModelImpl._setOriginalIs_last = false;

		richiestaBadgeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RichiestaBadge> toCacheModel() {
		RichiestaBadgeCacheModel richiestaBadgeCacheModel = new RichiestaBadgeCacheModel();

		richiestaBadgeCacheModel.id_pk = getId_pk();

		richiestaBadgeCacheModel.id_richiesta = getId_richiesta();

		richiestaBadgeCacheModel.screename_richiedente = getScreename_richiedente();

		String screename_richiedente = richiestaBadgeCacheModel.screename_richiedente;

		if ((screename_richiedente != null) &&
				(screename_richiedente.length() == 0)) {
			richiestaBadgeCacheModel.screename_richiedente = null;
		}

		richiestaBadgeCacheModel.id_ufficio = getId_ufficio();

		richiestaBadgeCacheModel.id_sedesiap = getId_sedesiap();

		richiestaBadgeCacheModel.json_richiedente = getJson_richiedente();

		String json_richiedente = richiestaBadgeCacheModel.json_richiedente;

		if ((json_richiedente != null) && (json_richiedente.length() == 0)) {
			richiestaBadgeCacheModel.json_richiedente = null;
		}

		richiestaBadgeCacheModel.is_internal = getIs_internal();

		richiestaBadgeCacheModel.nome_intestatario = getNome_intestatario();

		String nome_intestatario = richiestaBadgeCacheModel.nome_intestatario;

		if ((nome_intestatario != null) && (nome_intestatario.length() == 0)) {
			richiestaBadgeCacheModel.nome_intestatario = null;
		}

		richiestaBadgeCacheModel.cognome_intestatario = getCognome_intestatario();

		String cognome_intestatario = richiestaBadgeCacheModel.cognome_intestatario;

		if ((cognome_intestatario != null) &&
				(cognome_intestatario.length() == 0)) {
			richiestaBadgeCacheModel.cognome_intestatario = null;
		}

		richiestaBadgeCacheModel.cf_intestatario = getCf_intestatario();

		String cf_intestatario = richiestaBadgeCacheModel.cf_intestatario;

		if ((cf_intestatario != null) && (cf_intestatario.length() == 0)) {
			richiestaBadgeCacheModel.cf_intestatario = null;
		}

		richiestaBadgeCacheModel.luogonascita_intestatario = getLuogonascita_intestatario();

		String luogonascita_intestatario = richiestaBadgeCacheModel.luogonascita_intestatario;

		if ((luogonascita_intestatario != null) &&
				(luogonascita_intestatario.length() == 0)) {
			richiestaBadgeCacheModel.luogonascita_intestatario = null;
		}

		Date datanascita_intestatario = getDatanascita_intestatario();

		if (datanascita_intestatario != null) {
			richiestaBadgeCacheModel.datanascita_intestatario = datanascita_intestatario.getTime();
		}
		else {
			richiestaBadgeCacheModel.datanascita_intestatario = Long.MIN_VALUE;
		}

		richiestaBadgeCacheModel.id_oggetto = getId_oggetto();

		richiestaBadgeCacheModel.numero_badge = getNumero_badge();

		String numero_badge = richiestaBadgeCacheModel.numero_badge;

		if ((numero_badge != null) && (numero_badge.length() == 0)) {
			richiestaBadgeCacheModel.numero_badge = null;
		}

		richiestaBadgeCacheModel.uuid_foto = getUuid_foto();

		String uuid_foto = richiestaBadgeCacheModel.uuid_foto;

		if ((uuid_foto != null) && (uuid_foto.length() == 0)) {
			richiestaBadgeCacheModel.uuid_foto = null;
		}

		richiestaBadgeCacheModel.uuid_modulosostituzione = getUuid_modulosostituzione();

		String uuid_modulosostituzione = richiestaBadgeCacheModel.uuid_modulosostituzione;

		if ((uuid_modulosostituzione != null) &&
				(uuid_modulosostituzione.length() == 0)) {
			richiestaBadgeCacheModel.uuid_modulosostituzione = null;
		}

		richiestaBadgeCacheModel.societa = getSocieta();

		String societa = richiestaBadgeCacheModel.societa;

		if ((societa != null) && (societa.length() == 0)) {
			richiestaBadgeCacheModel.societa = null;
		}

		richiestaBadgeCacheModel.referente_societa = getReferente_societa();

		String referente_societa = richiestaBadgeCacheModel.referente_societa;

		if ((referente_societa != null) && (referente_societa.length() == 0)) {
			richiestaBadgeCacheModel.referente_societa = null;
		}

		richiestaBadgeCacheModel.progetto = getProgetto();

		String progetto = richiestaBadgeCacheModel.progetto;

		if ((progetto != null) && (progetto.length() == 0)) {
			richiestaBadgeCacheModel.progetto = null;
		}

		richiestaBadgeCacheModel.json_richiesta_external = getJson_richiesta_external();

		String json_richiesta_external = richiestaBadgeCacheModel.json_richiesta_external;

		if ((json_richiesta_external != null) &&
				(json_richiesta_external.length() == 0)) {
			richiestaBadgeCacheModel.json_richiesta_external = null;
		}

		richiestaBadgeCacheModel.array_sedi_abilitate = getArray_sedi_abilitate();

		String array_sedi_abilitate = richiestaBadgeCacheModel.array_sedi_abilitate;

		if ((array_sedi_abilitate != null) &&
				(array_sedi_abilitate.length() == 0)) {
			richiestaBadgeCacheModel.array_sedi_abilitate = null;
		}

		richiestaBadgeCacheModel.motivazione = getMotivazione();

		String motivazione = richiestaBadgeCacheModel.motivazione;

		if ((motivazione != null) && (motivazione.length() == 0)) {
			richiestaBadgeCacheModel.motivazione = null;
		}

		Date data_scadenza = getData_scadenza();

		if (data_scadenza != null) {
			richiestaBadgeCacheModel.data_scadenza = data_scadenza.getTime();
		}
		else {
			richiestaBadgeCacheModel.data_scadenza = Long.MIN_VALUE;
		}

		richiestaBadgeCacheModel.uuid_modulopdf = getUuid_modulopdf();

		String uuid_modulopdf = richiestaBadgeCacheModel.uuid_modulopdf;

		if ((uuid_modulopdf != null) && (uuid_modulopdf.length() == 0)) {
			richiestaBadgeCacheModel.uuid_modulopdf = null;
		}

		Date data_richiesta = getData_richiesta();

		if (data_richiesta != null) {
			richiestaBadgeCacheModel.data_richiesta = data_richiesta.getTime();
		}
		else {
			richiestaBadgeCacheModel.data_richiesta = Long.MIN_VALUE;
		}

		Date data_modifica = getData_modifica();

		if (data_modifica != null) {
			richiestaBadgeCacheModel.data_modifica = data_modifica.getTime();
		}
		else {
			richiestaBadgeCacheModel.data_modifica = Long.MIN_VALUE;
		}

		richiestaBadgeCacheModel.id_stato = getId_stato();

		richiestaBadgeCacheModel.utente_cambio_stato = getUtente_cambio_stato();

		String utente_cambio_stato = richiestaBadgeCacheModel.utente_cambio_stato;

		if ((utente_cambio_stato != null) &&
				(utente_cambio_stato.length() == 0)) {
			richiestaBadgeCacheModel.utente_cambio_stato = null;
		}

		richiestaBadgeCacheModel.note = getNote();

		String note = richiestaBadgeCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			richiestaBadgeCacheModel.note = null;
		}

		richiestaBadgeCacheModel.is_last = getIs_last();

		return richiestaBadgeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{id_pk=");
		sb.append(getId_pk());
		sb.append(", id_richiesta=");
		sb.append(getId_richiesta());
		sb.append(", screename_richiedente=");
		sb.append(getScreename_richiedente());
		sb.append(", id_ufficio=");
		sb.append(getId_ufficio());
		sb.append(", id_sedesiap=");
		sb.append(getId_sedesiap());
		sb.append(", json_richiedente=");
		sb.append(getJson_richiedente());
		sb.append(", is_internal=");
		sb.append(getIs_internal());
		sb.append(", nome_intestatario=");
		sb.append(getNome_intestatario());
		sb.append(", cognome_intestatario=");
		sb.append(getCognome_intestatario());
		sb.append(", cf_intestatario=");
		sb.append(getCf_intestatario());
		sb.append(", luogonascita_intestatario=");
		sb.append(getLuogonascita_intestatario());
		sb.append(", datanascita_intestatario=");
		sb.append(getDatanascita_intestatario());
		sb.append(", id_oggetto=");
		sb.append(getId_oggetto());
		sb.append(", numero_badge=");
		sb.append(getNumero_badge());
		sb.append(", uuid_foto=");
		sb.append(getUuid_foto());
		sb.append(", uuid_modulosostituzione=");
		sb.append(getUuid_modulosostituzione());
		sb.append(", societa=");
		sb.append(getSocieta());
		sb.append(", referente_societa=");
		sb.append(getReferente_societa());
		sb.append(", progetto=");
		sb.append(getProgetto());
		sb.append(", json_richiesta_external=");
		sb.append(getJson_richiesta_external());
		sb.append(", array_sedi_abilitate=");
		sb.append(getArray_sedi_abilitate());
		sb.append(", motivazione=");
		sb.append(getMotivazione());
		sb.append(", data_scadenza=");
		sb.append(getData_scadenza());
		sb.append(", uuid_modulopdf=");
		sb.append(getUuid_modulopdf());
		sb.append(", data_richiesta=");
		sb.append(getData_richiesta());
		sb.append(", data_modifica=");
		sb.append(getData_modifica());
		sb.append(", id_stato=");
		sb.append(getId_stato());
		sb.append(", utente_cambio_stato=");
		sb.append(getUtente_cambio_stato());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", is_last=");
		sb.append(getIs_last());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("servizio.richieste.badge.mef.model.RichiestaBadge");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_pk</column-name><column-value><![CDATA[");
		sb.append(getId_pk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_richiesta</column-name><column-value><![CDATA[");
		sb.append(getId_richiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>screename_richiedente</column-name><column-value><![CDATA[");
		sb.append(getScreename_richiedente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_ufficio</column-name><column-value><![CDATA[");
		sb.append(getId_ufficio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_sedesiap</column-name><column-value><![CDATA[");
		sb.append(getId_sedesiap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>json_richiedente</column-name><column-value><![CDATA[");
		sb.append(getJson_richiedente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_internal</column-name><column-value><![CDATA[");
		sb.append(getIs_internal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome_intestatario</column-name><column-value><![CDATA[");
		sb.append(getNome_intestatario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cognome_intestatario</column-name><column-value><![CDATA[");
		sb.append(getCognome_intestatario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cf_intestatario</column-name><column-value><![CDATA[");
		sb.append(getCf_intestatario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luogonascita_intestatario</column-name><column-value><![CDATA[");
		sb.append(getLuogonascita_intestatario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>datanascita_intestatario</column-name><column-value><![CDATA[");
		sb.append(getDatanascita_intestatario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_oggetto</column-name><column-value><![CDATA[");
		sb.append(getId_oggetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numero_badge</column-name><column-value><![CDATA[");
		sb.append(getNumero_badge());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uuid_foto</column-name><column-value><![CDATA[");
		sb.append(getUuid_foto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uuid_modulosostituzione</column-name><column-value><![CDATA[");
		sb.append(getUuid_modulosostituzione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>societa</column-name><column-value><![CDATA[");
		sb.append(getSocieta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>referente_societa</column-name><column-value><![CDATA[");
		sb.append(getReferente_societa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>progetto</column-name><column-value><![CDATA[");
		sb.append(getProgetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>json_richiesta_external</column-name><column-value><![CDATA[");
		sb.append(getJson_richiesta_external());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>array_sedi_abilitate</column-name><column-value><![CDATA[");
		sb.append(getArray_sedi_abilitate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>motivazione</column-name><column-value><![CDATA[");
		sb.append(getMotivazione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_scadenza</column-name><column-value><![CDATA[");
		sb.append(getData_scadenza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uuid_modulopdf</column-name><column-value><![CDATA[");
		sb.append(getUuid_modulopdf());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_richiesta</column-name><column-value><![CDATA[");
		sb.append(getData_richiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_modifica</column-name><column-value><![CDATA[");
		sb.append(getData_modifica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_stato</column-name><column-value><![CDATA[");
		sb.append(getId_stato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>utente_cambio_stato</column-name><column-value><![CDATA[");
		sb.append(getUtente_cambio_stato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_last</column-name><column-value><![CDATA[");
		sb.append(getIs_last());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = RichiestaBadge.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			RichiestaBadge.class
		};
	private long _id_pk;
	private long _id_richiesta;
	private long _originalId_richiesta;
	private boolean _setOriginalId_richiesta;
	private String _screename_richiedente;
	private String _originalScreename_richiedente;
	private long _id_ufficio;
	private long _id_sedesiap;
	private long _originalId_sedesiap;
	private boolean _setOriginalId_sedesiap;
	private String _json_richiedente;
	private boolean _is_internal;
	private boolean _originalIs_internal;
	private boolean _setOriginalIs_internal;
	private String _nome_intestatario;
	private String _cognome_intestatario;
	private String _cf_intestatario;
	private String _luogonascita_intestatario;
	private Date _datanascita_intestatario;
	private long _id_oggetto;
	private String _numero_badge;
	private String _uuid_foto;
	private String _uuid_modulosostituzione;
	private String _societa;
	private String _referente_societa;
	private String _progetto;
	private String _json_richiesta_external;
	private String _array_sedi_abilitate;
	private String _motivazione;
	private Date _data_scadenza;
	private String _uuid_modulopdf;
	private Date _data_richiesta;
	private Date _data_modifica;
	private long _id_stato;
	private long _originalId_stato;
	private boolean _setOriginalId_stato;
	private String _utente_cambio_stato;
	private String _note;
	private boolean _is_last;
	private boolean _originalIs_last;
	private boolean _setOriginalIs_last;
	private long _columnBitmask;
	private RichiestaBadge _escapedModel;
}