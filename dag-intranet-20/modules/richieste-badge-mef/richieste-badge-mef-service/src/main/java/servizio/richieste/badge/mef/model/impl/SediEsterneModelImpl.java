/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.richieste.badge.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import servizio.richieste.badge.mef.model.SediEsterne;
import servizio.richieste.badge.mef.model.SediEsterneModel;
import servizio.richieste.badge.mef.model.SediEsterneSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SediEsterne service. Represents a row in the &quot;MBADGE_SediEsterne&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SediEsterneModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SediEsterneImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SediEsterneImpl
 * @see SediEsterne
 * @see SediEsterneModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SediEsterneModelImpl extends BaseModelImpl<SediEsterne>
	implements SediEsterneModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sedi esterne model instance should use the {@link SediEsterne} interface instead.
	 */
	public static final String TABLE_NAME = "MBADGE_SediEsterne";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_sede_esterna", Types.BIGINT },
			{ "nome_sede_esterna", Types.VARCHAR },
			{ "id_sedesiap", Types.BIGINT },
			{ "acronimo_sede", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_sede_esterna", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nome_sede_esterna", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_sedesiap", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("acronimo_sede", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table MBADGE_SediEsterne (id_sede_esterna LONG not null primary key,nome_sede_esterna VARCHAR(75) null,id_sedesiap LONG,acronimo_sede VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table MBADGE_SediEsterne";
	public static final String ORDER_BY_JPQL = " ORDER BY sediEsterne.id_sede_esterna ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MBADGE_SediEsterne.id_sede_esterna ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.servizio.richieste.badge.mef.model.SediEsterne"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.servizio.richieste.badge.mef.model.SediEsterne"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.servizio.richieste.badge.mef.model.SediEsterne"),
			true);
	public static final long ACRONIMO_SEDE_COLUMN_BITMASK = 1L;
	public static final long ID_SEDESIAP_COLUMN_BITMASK = 2L;
	public static final long ID_SEDE_ESTERNA_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SediEsterne toModel(SediEsterneSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SediEsterne model = new SediEsterneImpl();

		model.setId_sede_esterna(soapModel.getId_sede_esterna());
		model.setNome_sede_esterna(soapModel.getNome_sede_esterna());
		model.setId_sedesiap(soapModel.getId_sedesiap());
		model.setAcronimo_sede(soapModel.getAcronimo_sede());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SediEsterne> toModels(SediEsterneSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SediEsterne> models = new ArrayList<SediEsterne>(soapModels.length);

		for (SediEsterneSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"lock.expiration.time.servizio.richieste.badge.mef.model.SediEsterne"));

	public SediEsterneModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_sede_esterna;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_sede_esterna(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_sede_esterna;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SediEsterne.class;
	}

	@Override
	public String getModelClassName() {
		return SediEsterne.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_sede_esterna", getId_sede_esterna());
		attributes.put("nome_sede_esterna", getNome_sede_esterna());
		attributes.put("id_sedesiap", getId_sedesiap());
		attributes.put("acronimo_sede", getAcronimo_sede());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_sede_esterna = (Long)attributes.get("id_sede_esterna");

		if (id_sede_esterna != null) {
			setId_sede_esterna(id_sede_esterna);
		}

		String nome_sede_esterna = (String)attributes.get("nome_sede_esterna");

		if (nome_sede_esterna != null) {
			setNome_sede_esterna(nome_sede_esterna);
		}

		Long id_sedesiap = (Long)attributes.get("id_sedesiap");

		if (id_sedesiap != null) {
			setId_sedesiap(id_sedesiap);
		}

		String acronimo_sede = (String)attributes.get("acronimo_sede");

		if (acronimo_sede != null) {
			setAcronimo_sede(acronimo_sede);
		}
	}

	@JSON
	@Override
	public long getId_sede_esterna() {
		return _id_sede_esterna;
	}

	@Override
	public void setId_sede_esterna(long id_sede_esterna) {
		_id_sede_esterna = id_sede_esterna;
	}

	@JSON
	@Override
	public String getNome_sede_esterna() {
		if (_nome_sede_esterna == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome_sede_esterna;
		}
	}

	@Override
	public void setNome_sede_esterna(String nome_sede_esterna) {
		_nome_sede_esterna = nome_sede_esterna;
	}

	@JSON
	@Override
	public long getId_sedesiap() {
		return _id_sedesiap;
	}

	@Override
	public void setId_sedesiap(long id_sedesiap) {
		_columnBitmask |= ID_SEDESIAP_COLUMN_BITMASK;

		if (!_setOriginalId_sedesiap) {
			_setOriginalId_sedesiap = true;

			_originalId_sedesiap = _id_sedesiap;
		}

		_id_sedesiap = id_sedesiap;
	}

	public long getOriginalId_sedesiap() {
		return _originalId_sedesiap;
	}

	@JSON
	@Override
	public String getAcronimo_sede() {
		if (_acronimo_sede == null) {
			return StringPool.BLANK;
		}
		else {
			return _acronimo_sede;
		}
	}

	@Override
	public void setAcronimo_sede(String acronimo_sede) {
		_columnBitmask |= ACRONIMO_SEDE_COLUMN_BITMASK;

		if (_originalAcronimo_sede == null) {
			_originalAcronimo_sede = _acronimo_sede;
		}

		_acronimo_sede = acronimo_sede;
	}

	public String getOriginalAcronimo_sede() {
		return GetterUtil.getString(_originalAcronimo_sede);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SediEsterne.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SediEsterne toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SediEsterne)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SediEsterneImpl sediEsterneImpl = new SediEsterneImpl();

		sediEsterneImpl.setId_sede_esterna(getId_sede_esterna());
		sediEsterneImpl.setNome_sede_esterna(getNome_sede_esterna());
		sediEsterneImpl.setId_sedesiap(getId_sedesiap());
		sediEsterneImpl.setAcronimo_sede(getAcronimo_sede());

		sediEsterneImpl.resetOriginalValues();

		return sediEsterneImpl;
	}

	@Override
	public int compareTo(SediEsterne sediEsterne) {
		long primaryKey = sediEsterne.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SediEsterne)) {
			return false;
		}

		SediEsterne sediEsterne = (SediEsterne)obj;

		long primaryKey = sediEsterne.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SediEsterneModelImpl sediEsterneModelImpl = this;

		sediEsterneModelImpl._originalId_sedesiap = sediEsterneModelImpl._id_sedesiap;

		sediEsterneModelImpl._setOriginalId_sedesiap = false;

		sediEsterneModelImpl._originalAcronimo_sede = sediEsterneModelImpl._acronimo_sede;

		sediEsterneModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SediEsterne> toCacheModel() {
		SediEsterneCacheModel sediEsterneCacheModel = new SediEsterneCacheModel();

		sediEsterneCacheModel.id_sede_esterna = getId_sede_esterna();

		sediEsterneCacheModel.nome_sede_esterna = getNome_sede_esterna();

		String nome_sede_esterna = sediEsterneCacheModel.nome_sede_esterna;

		if ((nome_sede_esterna != null) && (nome_sede_esterna.length() == 0)) {
			sediEsterneCacheModel.nome_sede_esterna = null;
		}

		sediEsterneCacheModel.id_sedesiap = getId_sedesiap();

		sediEsterneCacheModel.acronimo_sede = getAcronimo_sede();

		String acronimo_sede = sediEsterneCacheModel.acronimo_sede;

		if ((acronimo_sede != null) && (acronimo_sede.length() == 0)) {
			sediEsterneCacheModel.acronimo_sede = null;
		}

		return sediEsterneCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{id_sede_esterna=");
		sb.append(getId_sede_esterna());
		sb.append(", nome_sede_esterna=");
		sb.append(getNome_sede_esterna());
		sb.append(", id_sedesiap=");
		sb.append(getId_sedesiap());
		sb.append(", acronimo_sede=");
		sb.append(getAcronimo_sede());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("servizio.richieste.badge.mef.model.SediEsterne");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_sede_esterna</column-name><column-value><![CDATA[");
		sb.append(getId_sede_esterna());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome_sede_esterna</column-name><column-value><![CDATA[");
		sb.append(getNome_sede_esterna());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_sedesiap</column-name><column-value><![CDATA[");
		sb.append(getId_sedesiap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acronimo_sede</column-name><column-value><![CDATA[");
		sb.append(getAcronimo_sede());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SediEsterne.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SediEsterne.class
		};
	private long _id_sede_esterna;
	private String _nome_sede_esterna;
	private long _id_sedesiap;
	private long _originalId_sedesiap;
	private boolean _setOriginalId_sedesiap;
	private String _acronimo_sede;
	private String _originalAcronimo_sede;
	private long _columnBitmask;
	private SediEsterne _escapedModel;
}