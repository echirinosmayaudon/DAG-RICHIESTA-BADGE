/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.richieste.badge.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import servizio.richieste.badge.mef.model.AnaDipExt;
import servizio.richieste.badge.mef.model.AnaDipExtModel;
import servizio.richieste.badge.mef.model.AnaDipExtSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AnaDipExt service. Represents a row in the &quot;MBADGE_AnaDipExt&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AnaDipExtModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AnaDipExtImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AnaDipExtImpl
 * @see AnaDipExt
 * @see AnaDipExtModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AnaDipExtModelImpl extends BaseModelImpl<AnaDipExt>
	implements AnaDipExtModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ana dip ext model instance should use the {@link AnaDipExt} interface instead.
	 */
	public static final String TABLE_NAME = "MBADGE_AnaDipExt";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_dip_ext", Types.BIGINT },
			{ "nome_dip_ext", Types.VARCHAR },
			{ "cognome_dip_ext", Types.VARCHAR },
			{ "cf_dip_ext", Types.VARCHAR },
			{ "luogonascita_dip_ext", Types.VARCHAR },
			{ "datanascita_dip_ext", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_dip_ext", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nome_dip_ext", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cognome_dip_ext", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cf_dip_ext", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("luogonascita_dip_ext", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("datanascita_dip_ext", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table MBADGE_AnaDipExt (id_dip_ext LONG not null primary key,nome_dip_ext VARCHAR(75) null,cognome_dip_ext VARCHAR(75) null,cf_dip_ext VARCHAR(16) null,luogonascita_dip_ext VARCHAR(255) null,datanascita_dip_ext DATE null)";
	public static final String TABLE_SQL_DROP = "drop table MBADGE_AnaDipExt";
	public static final String ORDER_BY_JPQL = " ORDER BY anaDipExt.id_dip_ext ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MBADGE_AnaDipExt.id_dip_ext ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.servizio.richieste.badge.mef.model.AnaDipExt"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.servizio.richieste.badge.mef.model.AnaDipExt"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.servizio.richieste.badge.mef.model.AnaDipExt"),
			true);
	public static final long CF_DIP_EXT_COLUMN_BITMASK = 1L;
	public static final long ID_DIP_EXT_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AnaDipExt toModel(AnaDipExtSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AnaDipExt model = new AnaDipExtImpl();

		model.setId_dip_ext(soapModel.getId_dip_ext());
		model.setNome_dip_ext(soapModel.getNome_dip_ext());
		model.setCognome_dip_ext(soapModel.getCognome_dip_ext());
		model.setCf_dip_ext(soapModel.getCf_dip_ext());
		model.setLuogonascita_dip_ext(soapModel.getLuogonascita_dip_ext());
		model.setDatanascita_dip_ext(soapModel.getDatanascita_dip_ext());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AnaDipExt> toModels(AnaDipExtSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AnaDipExt> models = new ArrayList<AnaDipExt>(soapModels.length);

		for (AnaDipExtSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(servizio.richieste.badge.mef.service.util.PropsUtil.get(
				"lock.expiration.time.servizio.richieste.badge.mef.model.AnaDipExt"));

	public AnaDipExtModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_dip_ext;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_dip_ext(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_dip_ext;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AnaDipExt.class;
	}

	@Override
	public String getModelClassName() {
		return AnaDipExt.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_dip_ext", getId_dip_ext());
		attributes.put("nome_dip_ext", getNome_dip_ext());
		attributes.put("cognome_dip_ext", getCognome_dip_ext());
		attributes.put("cf_dip_ext", getCf_dip_ext());
		attributes.put("luogonascita_dip_ext", getLuogonascita_dip_ext());
		attributes.put("datanascita_dip_ext", getDatanascita_dip_ext());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_dip_ext = (Long)attributes.get("id_dip_ext");

		if (id_dip_ext != null) {
			setId_dip_ext(id_dip_ext);
		}

		String nome_dip_ext = (String)attributes.get("nome_dip_ext");

		if (nome_dip_ext != null) {
			setNome_dip_ext(nome_dip_ext);
		}

		String cognome_dip_ext = (String)attributes.get("cognome_dip_ext");

		if (cognome_dip_ext != null) {
			setCognome_dip_ext(cognome_dip_ext);
		}

		String cf_dip_ext = (String)attributes.get("cf_dip_ext");

		if (cf_dip_ext != null) {
			setCf_dip_ext(cf_dip_ext);
		}

		String luogonascita_dip_ext = (String)attributes.get(
				"luogonascita_dip_ext");

		if (luogonascita_dip_ext != null) {
			setLuogonascita_dip_ext(luogonascita_dip_ext);
		}

		Date datanascita_dip_ext = (Date)attributes.get("datanascita_dip_ext");

		if (datanascita_dip_ext != null) {
			setDatanascita_dip_ext(datanascita_dip_ext);
		}
	}

	@JSON
	@Override
	public long getId_dip_ext() {
		return _id_dip_ext;
	}

	@Override
	public void setId_dip_ext(long id_dip_ext) {
		_id_dip_ext = id_dip_ext;
	}

	@JSON
	@Override
	public String getNome_dip_ext() {
		if (_nome_dip_ext == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome_dip_ext;
		}
	}

	@Override
	public void setNome_dip_ext(String nome_dip_ext) {
		_nome_dip_ext = nome_dip_ext;
	}

	@JSON
	@Override
	public String getCognome_dip_ext() {
		if (_cognome_dip_ext == null) {
			return StringPool.BLANK;
		}
		else {
			return _cognome_dip_ext;
		}
	}

	@Override
	public void setCognome_dip_ext(String cognome_dip_ext) {
		_cognome_dip_ext = cognome_dip_ext;
	}

	@JSON
	@Override
	public String getCf_dip_ext() {
		if (_cf_dip_ext == null) {
			return StringPool.BLANK;
		}
		else {
			return _cf_dip_ext;
		}
	}

	@Override
	public void setCf_dip_ext(String cf_dip_ext) {
		_columnBitmask |= CF_DIP_EXT_COLUMN_BITMASK;

		if (_originalCf_dip_ext == null) {
			_originalCf_dip_ext = _cf_dip_ext;
		}

		_cf_dip_ext = cf_dip_ext;
	}

	public String getOriginalCf_dip_ext() {
		return GetterUtil.getString(_originalCf_dip_ext);
	}

	@JSON
	@Override
	public String getLuogonascita_dip_ext() {
		if (_luogonascita_dip_ext == null) {
			return StringPool.BLANK;
		}
		else {
			return _luogonascita_dip_ext;
		}
	}

	@Override
	public void setLuogonascita_dip_ext(String luogonascita_dip_ext) {
		_luogonascita_dip_ext = luogonascita_dip_ext;
	}

	@JSON
	@Override
	public Date getDatanascita_dip_ext() {
		return _datanascita_dip_ext;
	}

	@Override
	public void setDatanascita_dip_ext(Date datanascita_dip_ext) {
		_datanascita_dip_ext = datanascita_dip_ext;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AnaDipExt.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AnaDipExt toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AnaDipExt)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AnaDipExtImpl anaDipExtImpl = new AnaDipExtImpl();

		anaDipExtImpl.setId_dip_ext(getId_dip_ext());
		anaDipExtImpl.setNome_dip_ext(getNome_dip_ext());
		anaDipExtImpl.setCognome_dip_ext(getCognome_dip_ext());
		anaDipExtImpl.setCf_dip_ext(getCf_dip_ext());
		anaDipExtImpl.setLuogonascita_dip_ext(getLuogonascita_dip_ext());
		anaDipExtImpl.setDatanascita_dip_ext(getDatanascita_dip_ext());

		anaDipExtImpl.resetOriginalValues();

		return anaDipExtImpl;
	}

	@Override
	public int compareTo(AnaDipExt anaDipExt) {
		long primaryKey = anaDipExt.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AnaDipExt)) {
			return false;
		}

		AnaDipExt anaDipExt = (AnaDipExt)obj;

		long primaryKey = anaDipExt.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AnaDipExtModelImpl anaDipExtModelImpl = this;

		anaDipExtModelImpl._originalCf_dip_ext = anaDipExtModelImpl._cf_dip_ext;

		anaDipExtModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AnaDipExt> toCacheModel() {
		AnaDipExtCacheModel anaDipExtCacheModel = new AnaDipExtCacheModel();

		anaDipExtCacheModel.id_dip_ext = getId_dip_ext();

		anaDipExtCacheModel.nome_dip_ext = getNome_dip_ext();

		String nome_dip_ext = anaDipExtCacheModel.nome_dip_ext;

		if ((nome_dip_ext != null) && (nome_dip_ext.length() == 0)) {
			anaDipExtCacheModel.nome_dip_ext = null;
		}

		anaDipExtCacheModel.cognome_dip_ext = getCognome_dip_ext();

		String cognome_dip_ext = anaDipExtCacheModel.cognome_dip_ext;

		if ((cognome_dip_ext != null) && (cognome_dip_ext.length() == 0)) {
			anaDipExtCacheModel.cognome_dip_ext = null;
		}

		anaDipExtCacheModel.cf_dip_ext = getCf_dip_ext();

		String cf_dip_ext = anaDipExtCacheModel.cf_dip_ext;

		if ((cf_dip_ext != null) && (cf_dip_ext.length() == 0)) {
			anaDipExtCacheModel.cf_dip_ext = null;
		}

		anaDipExtCacheModel.luogonascita_dip_ext = getLuogonascita_dip_ext();

		String luogonascita_dip_ext = anaDipExtCacheModel.luogonascita_dip_ext;

		if ((luogonascita_dip_ext != null) &&
				(luogonascita_dip_ext.length() == 0)) {
			anaDipExtCacheModel.luogonascita_dip_ext = null;
		}

		Date datanascita_dip_ext = getDatanascita_dip_ext();

		if (datanascita_dip_ext != null) {
			anaDipExtCacheModel.datanascita_dip_ext = datanascita_dip_ext.getTime();
		}
		else {
			anaDipExtCacheModel.datanascita_dip_ext = Long.MIN_VALUE;
		}

		return anaDipExtCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id_dip_ext=");
		sb.append(getId_dip_ext());
		sb.append(", nome_dip_ext=");
		sb.append(getNome_dip_ext());
		sb.append(", cognome_dip_ext=");
		sb.append(getCognome_dip_ext());
		sb.append(", cf_dip_ext=");
		sb.append(getCf_dip_ext());
		sb.append(", luogonascita_dip_ext=");
		sb.append(getLuogonascita_dip_ext());
		sb.append(", datanascita_dip_ext=");
		sb.append(getDatanascita_dip_ext());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("servizio.richieste.badge.mef.model.AnaDipExt");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getId_dip_ext());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getNome_dip_ext());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cognome_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getCognome_dip_ext());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cf_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getCf_dip_ext());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luogonascita_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getLuogonascita_dip_ext());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>datanascita_dip_ext</column-name><column-value><![CDATA[");
		sb.append(getDatanascita_dip_ext());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AnaDipExt.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AnaDipExt.class
		};
	private long _id_dip_ext;
	private String _nome_dip_ext;
	private String _cognome_dip_ext;
	private String _cf_dip_ext;
	private String _originalCf_dip_ext;
	private String _luogonascita_dip_ext;
	private Date _datanascita_dip_ext;
	private long _columnBitmask;
	private AnaDipExt _escapedModel;
}