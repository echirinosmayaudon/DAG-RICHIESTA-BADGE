/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.richieste.badge.mef.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the RichiestaBadge service. Represents a row in the &quot;MBADGE_RichiestaBadge&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link servizio.richieste.badge.mef.model.impl.RichiestaBadgeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link servizio.richieste.badge.mef.model.impl.RichiestaBadgeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RichiestaBadge
 * @see servizio.richieste.badge.mef.model.impl.RichiestaBadgeImpl
 * @see servizio.richieste.badge.mef.model.impl.RichiestaBadgeModelImpl
 * @generated
 */
@ProviderType
public interface RichiestaBadgeModel extends BaseModel<RichiestaBadge> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a richiesta badge model instance should use the {@link RichiestaBadge} interface instead.
	 */

	/**
	 * Returns the primary key of this richiesta badge.
	 *
	 * @return the primary key of this richiesta badge
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this richiesta badge.
	 *
	 * @param primaryKey the primary key of this richiesta badge
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the id_pk of this richiesta badge.
	 *
	 * @return the id_pk of this richiesta badge
	 */
	public long getId_pk();

	/**
	 * Sets the id_pk of this richiesta badge.
	 *
	 * @param id_pk the id_pk of this richiesta badge
	 */
	public void setId_pk(long id_pk);

	/**
	 * Returns the id_richiesta of this richiesta badge.
	 *
	 * @return the id_richiesta of this richiesta badge
	 */
	public long getId_richiesta();

	/**
	 * Sets the id_richiesta of this richiesta badge.
	 *
	 * @param id_richiesta the id_richiesta of this richiesta badge
	 */
	public void setId_richiesta(long id_richiesta);

	/**
	 * Returns the screename_richiedente of this richiesta badge.
	 *
	 * @return the screename_richiedente of this richiesta badge
	 */
	@AutoEscape
	public String getScreename_richiedente();

	/**
	 * Sets the screename_richiedente of this richiesta badge.
	 *
	 * @param screename_richiedente the screename_richiedente of this richiesta badge
	 */
	public void setScreename_richiedente(String screename_richiedente);

	/**
	 * Returns the id_ufficio of this richiesta badge.
	 *
	 * @return the id_ufficio of this richiesta badge
	 */
	public long getId_ufficio();

	/**
	 * Sets the id_ufficio of this richiesta badge.
	 *
	 * @param id_ufficio the id_ufficio of this richiesta badge
	 */
	public void setId_ufficio(long id_ufficio);

	/**
	 * Returns the id_sedesiap of this richiesta badge.
	 *
	 * @return the id_sedesiap of this richiesta badge
	 */
	public long getId_sedesiap();

	/**
	 * Sets the id_sedesiap of this richiesta badge.
	 *
	 * @param id_sedesiap the id_sedesiap of this richiesta badge
	 */
	public void setId_sedesiap(long id_sedesiap);

	/**
	 * Returns the json_richiedente of this richiesta badge.
	 *
	 * @return the json_richiedente of this richiesta badge
	 */
	@AutoEscape
	public String getJson_richiedente();

	/**
	 * Sets the json_richiedente of this richiesta badge.
	 *
	 * @param json_richiedente the json_richiedente of this richiesta badge
	 */
	public void setJson_richiedente(String json_richiedente);

	/**
	 * Returns the is_internal of this richiesta badge.
	 *
	 * @return the is_internal of this richiesta badge
	 */
	public boolean getIs_internal();

	/**
	 * Returns <code>true</code> if this richiesta badge is is_internal.
	 *
	 * @return <code>true</code> if this richiesta badge is is_internal; <code>false</code> otherwise
	 */
	public boolean isIs_internal();

	/**
	 * Sets whether this richiesta badge is is_internal.
	 *
	 * @param is_internal the is_internal of this richiesta badge
	 */
	public void setIs_internal(boolean is_internal);

	/**
	 * Returns the nome_intestatario of this richiesta badge.
	 *
	 * @return the nome_intestatario of this richiesta badge
	 */
	@AutoEscape
	public String getNome_intestatario();

	/**
	 * Sets the nome_intestatario of this richiesta badge.
	 *
	 * @param nome_intestatario the nome_intestatario of this richiesta badge
	 */
	public void setNome_intestatario(String nome_intestatario);

	/**
	 * Returns the cognome_intestatario of this richiesta badge.
	 *
	 * @return the cognome_intestatario of this richiesta badge
	 */
	@AutoEscape
	public String getCognome_intestatario();

	/**
	 * Sets the cognome_intestatario of this richiesta badge.
	 *
	 * @param cognome_intestatario the cognome_intestatario of this richiesta badge
	 */
	public void setCognome_intestatario(String cognome_intestatario);

	/**
	 * Returns the cf_intestatario of this richiesta badge.
	 *
	 * @return the cf_intestatario of this richiesta badge
	 */
	@AutoEscape
	public String getCf_intestatario();

	/**
	 * Sets the cf_intestatario of this richiesta badge.
	 *
	 * @param cf_intestatario the cf_intestatario of this richiesta badge
	 */
	public void setCf_intestatario(String cf_intestatario);

	/**
	 * Returns the luogonascita_intestatario of this richiesta badge.
	 *
	 * @return the luogonascita_intestatario of this richiesta badge
	 */
	@AutoEscape
	public String getLuogonascita_intestatario();

	/**
	 * Sets the luogonascita_intestatario of this richiesta badge.
	 *
	 * @param luogonascita_intestatario the luogonascita_intestatario of this richiesta badge
	 */
	public void setLuogonascita_intestatario(String luogonascita_intestatario);

	/**
	 * Returns the datanascita_intestatario of this richiesta badge.
	 *
	 * @return the datanascita_intestatario of this richiesta badge
	 */
	public Date getDatanascita_intestatario();

	/**
	 * Sets the datanascita_intestatario of this richiesta badge.
	 *
	 * @param datanascita_intestatario the datanascita_intestatario of this richiesta badge
	 */
	public void setDatanascita_intestatario(Date datanascita_intestatario);

	/**
	 * Returns the id_oggetto of this richiesta badge.
	 *
	 * @return the id_oggetto of this richiesta badge
	 */
	public long getId_oggetto();

	/**
	 * Sets the id_oggetto of this richiesta badge.
	 *
	 * @param id_oggetto the id_oggetto of this richiesta badge
	 */
	public void setId_oggetto(long id_oggetto);

	/**
	 * Returns the numero_badge of this richiesta badge.
	 *
	 * @return the numero_badge of this richiesta badge
	 */
	@AutoEscape
	public String getNumero_badge();

	/**
	 * Sets the numero_badge of this richiesta badge.
	 *
	 * @param numero_badge the numero_badge of this richiesta badge
	 */
	public void setNumero_badge(String numero_badge);

	/**
	 * Returns the uuid_foto of this richiesta badge.
	 *
	 * @return the uuid_foto of this richiesta badge
	 */
	@AutoEscape
	public String getUuid_foto();

	/**
	 * Sets the uuid_foto of this richiesta badge.
	 *
	 * @param uuid_foto the uuid_foto of this richiesta badge
	 */
	public void setUuid_foto(String uuid_foto);

	/**
	 * Returns the uuid_modulosostituzione of this richiesta badge.
	 *
	 * @return the uuid_modulosostituzione of this richiesta badge
	 */
	@AutoEscape
	public String getUuid_modulosostituzione();

	/**
	 * Sets the uuid_modulosostituzione of this richiesta badge.
	 *
	 * @param uuid_modulosostituzione the uuid_modulosostituzione of this richiesta badge
	 */
	public void setUuid_modulosostituzione(String uuid_modulosostituzione);

	/**
	 * Returns the societa of this richiesta badge.
	 *
	 * @return the societa of this richiesta badge
	 */
	@AutoEscape
	public String getSocieta();

	/**
	 * Sets the societa of this richiesta badge.
	 *
	 * @param societa the societa of this richiesta badge
	 */
	public void setSocieta(String societa);

	/**
	 * Returns the referente_societa of this richiesta badge.
	 *
	 * @return the referente_societa of this richiesta badge
	 */
	@AutoEscape
	public String getReferente_societa();

	/**
	 * Sets the referente_societa of this richiesta badge.
	 *
	 * @param referente_societa the referente_societa of this richiesta badge
	 */
	public void setReferente_societa(String referente_societa);

	/**
	 * Returns the progetto of this richiesta badge.
	 *
	 * @return the progetto of this richiesta badge
	 */
	@AutoEscape
	public String getProgetto();

	/**
	 * Sets the progetto of this richiesta badge.
	 *
	 * @param progetto the progetto of this richiesta badge
	 */
	public void setProgetto(String progetto);

	/**
	 * Returns the json_richiesta_external of this richiesta badge.
	 *
	 * @return the json_richiesta_external of this richiesta badge
	 */
	@AutoEscape
	public String getJson_richiesta_external();

	/**
	 * Sets the json_richiesta_external of this richiesta badge.
	 *
	 * @param json_richiesta_external the json_richiesta_external of this richiesta badge
	 */
	public void setJson_richiesta_external(String json_richiesta_external);

	/**
	 * Returns the array_sedi_abilitate of this richiesta badge.
	 *
	 * @return the array_sedi_abilitate of this richiesta badge
	 */
	@AutoEscape
	public String getArray_sedi_abilitate();

	/**
	 * Sets the array_sedi_abilitate of this richiesta badge.
	 *
	 * @param array_sedi_abilitate the array_sedi_abilitate of this richiesta badge
	 */
	public void setArray_sedi_abilitate(String array_sedi_abilitate);

	/**
	 * Returns the motivazione of this richiesta badge.
	 *
	 * @return the motivazione of this richiesta badge
	 */
	@AutoEscape
	public String getMotivazione();

	/**
	 * Sets the motivazione of this richiesta badge.
	 *
	 * @param motivazione the motivazione of this richiesta badge
	 */
	public void setMotivazione(String motivazione);

	/**
	 * Returns the data_scadenza of this richiesta badge.
	 *
	 * @return the data_scadenza of this richiesta badge
	 */
	public Date getData_scadenza();

	/**
	 * Sets the data_scadenza of this richiesta badge.
	 *
	 * @param data_scadenza the data_scadenza of this richiesta badge
	 */
	public void setData_scadenza(Date data_scadenza);

	/**
	 * Returns the uuid_modulopdf of this richiesta badge.
	 *
	 * @return the uuid_modulopdf of this richiesta badge
	 */
	@AutoEscape
	public String getUuid_modulopdf();

	/**
	 * Sets the uuid_modulopdf of this richiesta badge.
	 *
	 * @param uuid_modulopdf the uuid_modulopdf of this richiesta badge
	 */
	public void setUuid_modulopdf(String uuid_modulopdf);

	/**
	 * Returns the data_richiesta of this richiesta badge.
	 *
	 * @return the data_richiesta of this richiesta badge
	 */
	public Date getData_richiesta();

	/**
	 * Sets the data_richiesta of this richiesta badge.
	 *
	 * @param data_richiesta the data_richiesta of this richiesta badge
	 */
	public void setData_richiesta(Date data_richiesta);

	/**
	 * Returns the data_modifica of this richiesta badge.
	 *
	 * @return the data_modifica of this richiesta badge
	 */
	public Date getData_modifica();

	/**
	 * Sets the data_modifica of this richiesta badge.
	 *
	 * @param data_modifica the data_modifica of this richiesta badge
	 */
	public void setData_modifica(Date data_modifica);

	/**
	 * Returns the id_stato of this richiesta badge.
	 *
	 * @return the id_stato of this richiesta badge
	 */
	public long getId_stato();

	/**
	 * Sets the id_stato of this richiesta badge.
	 *
	 * @param id_stato the id_stato of this richiesta badge
	 */
	public void setId_stato(long id_stato);

	/**
	 * Returns the utente_cambio_stato of this richiesta badge.
	 *
	 * @return the utente_cambio_stato of this richiesta badge
	 */
	@AutoEscape
	public String getUtente_cambio_stato();

	/**
	 * Sets the utente_cambio_stato of this richiesta badge.
	 *
	 * @param utente_cambio_stato the utente_cambio_stato of this richiesta badge
	 */
	public void setUtente_cambio_stato(String utente_cambio_stato);

	/**
	 * Returns the note of this richiesta badge.
	 *
	 * @return the note of this richiesta badge
	 */
	@AutoEscape
	public String getNote();

	/**
	 * Sets the note of this richiesta badge.
	 *
	 * @param note the note of this richiesta badge
	 */
	public void setNote(String note);

	/**
	 * Returns the is_last of this richiesta badge.
	 *
	 * @return the is_last of this richiesta badge
	 */
	public boolean getIs_last();

	/**
	 * Returns <code>true</code> if this richiesta badge is is_last.
	 *
	 * @return <code>true</code> if this richiesta badge is is_last; <code>false</code> otherwise
	 */
	public boolean isIs_last();

	/**
	 * Sets whether this richiesta badge is is_last.
	 *
	 * @param is_last the is_last of this richiesta badge
	 */
	public void setIs_last(boolean is_last);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		servizio.richieste.badge.mef.model.RichiestaBadge richiestaBadge);

	@Override
	public int hashCode();

	@Override
	public CacheModel<servizio.richieste.badge.mef.model.RichiestaBadge> toCacheModel();

	@Override
	public servizio.richieste.badge.mef.model.RichiestaBadge toEscapedModel();

	@Override
	public servizio.richieste.badge.mef.model.RichiestaBadge toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}