/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.assistance.service.base;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.assistance.service.UploadHelperLocalService;
import com.intranet.mef.assistance.service.persistence.AmbitoPersistence;
import com.intranet.mef.assistance.service.persistence.AreaPersistence;
import com.intranet.mef.assistance.service.persistence.FaqPersistence;
import com.intranet.mef.assistance.service.persistence.ProblemPersistence;
import com.intranet.mef.assistance.service.persistence.ServizioPersistence;
import com.intranet.mef.assistance.service.persistence.TopicPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.InfrastructureUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the upload helper local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.intranet.mef.assistance.service.impl.UploadHelperLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.intranet.mef.assistance.service.impl.UploadHelperLocalServiceImpl
 * @see com.intranet.mef.assistance.service.UploadHelperLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class UploadHelperLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements UploadHelperLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.intranet.mef.assistance.service.UploadHelperLocalServiceUtil} to access the upload helper local service.
	 */

	/**
	 * Returns the ambito local service.
	 *
	 * @return the ambito local service
	 */
	public com.intranet.mef.assistance.service.AmbitoLocalService getAmbitoLocalService() {
		return ambitoLocalService;
	}

	/**
	 * Sets the ambito local service.
	 *
	 * @param ambitoLocalService the ambito local service
	 */
	public void setAmbitoLocalService(
		com.intranet.mef.assistance.service.AmbitoLocalService ambitoLocalService) {
		this.ambitoLocalService = ambitoLocalService;
	}

	/**
	 * Returns the ambito persistence.
	 *
	 * @return the ambito persistence
	 */
	public AmbitoPersistence getAmbitoPersistence() {
		return ambitoPersistence;
	}

	/**
	 * Sets the ambito persistence.
	 *
	 * @param ambitoPersistence the ambito persistence
	 */
	public void setAmbitoPersistence(AmbitoPersistence ambitoPersistence) {
		this.ambitoPersistence = ambitoPersistence;
	}

	/**
	 * Returns the area local service.
	 *
	 * @return the area local service
	 */
	public com.intranet.mef.assistance.service.AreaLocalService getAreaLocalService() {
		return areaLocalService;
	}

	/**
	 * Sets the area local service.
	 *
	 * @param areaLocalService the area local service
	 */
	public void setAreaLocalService(
		com.intranet.mef.assistance.service.AreaLocalService areaLocalService) {
		this.areaLocalService = areaLocalService;
	}

	/**
	 * Returns the area persistence.
	 *
	 * @return the area persistence
	 */
	public AreaPersistence getAreaPersistence() {
		return areaPersistence;
	}

	/**
	 * Sets the area persistence.
	 *
	 * @param areaPersistence the area persistence
	 */
	public void setAreaPersistence(AreaPersistence areaPersistence) {
		this.areaPersistence = areaPersistence;
	}

	/**
	 * Returns the faq local service.
	 *
	 * @return the faq local service
	 */
	public com.intranet.mef.assistance.service.FaqLocalService getFaqLocalService() {
		return faqLocalService;
	}

	/**
	 * Sets the faq local service.
	 *
	 * @param faqLocalService the faq local service
	 */
	public void setFaqLocalService(
		com.intranet.mef.assistance.service.FaqLocalService faqLocalService) {
		this.faqLocalService = faqLocalService;
	}

	/**
	 * Returns the faq persistence.
	 *
	 * @return the faq persistence
	 */
	public FaqPersistence getFaqPersistence() {
		return faqPersistence;
	}

	/**
	 * Sets the faq persistence.
	 *
	 * @param faqPersistence the faq persistence
	 */
	public void setFaqPersistence(FaqPersistence faqPersistence) {
		this.faqPersistence = faqPersistence;
	}

	/**
	 * Returns the problem local service.
	 *
	 * @return the problem local service
	 */
	public com.intranet.mef.assistance.service.ProblemLocalService getProblemLocalService() {
		return problemLocalService;
	}

	/**
	 * Sets the problem local service.
	 *
	 * @param problemLocalService the problem local service
	 */
	public void setProblemLocalService(
		com.intranet.mef.assistance.service.ProblemLocalService problemLocalService) {
		this.problemLocalService = problemLocalService;
	}

	/**
	 * Returns the problem persistence.
	 *
	 * @return the problem persistence
	 */
	public ProblemPersistence getProblemPersistence() {
		return problemPersistence;
	}

	/**
	 * Sets the problem persistence.
	 *
	 * @param problemPersistence the problem persistence
	 */
	public void setProblemPersistence(ProblemPersistence problemPersistence) {
		this.problemPersistence = problemPersistence;
	}

	/**
	 * Returns the servizio local service.
	 *
	 * @return the servizio local service
	 */
	public com.intranet.mef.assistance.service.ServizioLocalService getServizioLocalService() {
		return servizioLocalService;
	}

	/**
	 * Sets the servizio local service.
	 *
	 * @param servizioLocalService the servizio local service
	 */
	public void setServizioLocalService(
		com.intranet.mef.assistance.service.ServizioLocalService servizioLocalService) {
		this.servizioLocalService = servizioLocalService;
	}

	/**
	 * Returns the servizio persistence.
	 *
	 * @return the servizio persistence
	 */
	public ServizioPersistence getServizioPersistence() {
		return servizioPersistence;
	}

	/**
	 * Sets the servizio persistence.
	 *
	 * @param servizioPersistence the servizio persistence
	 */
	public void setServizioPersistence(ServizioPersistence servizioPersistence) {
		this.servizioPersistence = servizioPersistence;
	}

	/**
	 * Returns the topic local service.
	 *
	 * @return the topic local service
	 */
	public com.intranet.mef.assistance.service.TopicLocalService getTopicLocalService() {
		return topicLocalService;
	}

	/**
	 * Sets the topic local service.
	 *
	 * @param topicLocalService the topic local service
	 */
	public void setTopicLocalService(
		com.intranet.mef.assistance.service.TopicLocalService topicLocalService) {
		this.topicLocalService = topicLocalService;
	}

	/**
	 * Returns the topic persistence.
	 *
	 * @return the topic persistence
	 */
	public TopicPersistence getTopicPersistence() {
		return topicPersistence;
	}

	/**
	 * Sets the topic persistence.
	 *
	 * @param topicPersistence the topic persistence
	 */
	public void setTopicPersistence(TopicPersistence topicPersistence) {
		this.topicPersistence = topicPersistence;
	}

	/**
	 * Returns the upload helper local service.
	 *
	 * @return the upload helper local service
	 */
	public UploadHelperLocalService getUploadHelperLocalService() {
		return uploadHelperLocalService;
	}

	/**
	 * Sets the upload helper local service.
	 *
	 * @param uploadHelperLocalService the upload helper local service
	 */
	public void setUploadHelperLocalService(
		UploadHelperLocalService uploadHelperLocalService) {
		this.uploadHelperLocalService = uploadHelperLocalService;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return UploadHelperLocalService.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = InfrastructureUtil.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.intranet.mef.assistance.service.AmbitoLocalService.class)
	protected com.intranet.mef.assistance.service.AmbitoLocalService ambitoLocalService;
	@BeanReference(type = AmbitoPersistence.class)
	protected AmbitoPersistence ambitoPersistence;
	@BeanReference(type = com.intranet.mef.assistance.service.AreaLocalService.class)
	protected com.intranet.mef.assistance.service.AreaLocalService areaLocalService;
	@BeanReference(type = AreaPersistence.class)
	protected AreaPersistence areaPersistence;
	@BeanReference(type = com.intranet.mef.assistance.service.FaqLocalService.class)
	protected com.intranet.mef.assistance.service.FaqLocalService faqLocalService;
	@BeanReference(type = FaqPersistence.class)
	protected FaqPersistence faqPersistence;
	@BeanReference(type = com.intranet.mef.assistance.service.ProblemLocalService.class)
	protected com.intranet.mef.assistance.service.ProblemLocalService problemLocalService;
	@BeanReference(type = ProblemPersistence.class)
	protected ProblemPersistence problemPersistence;
	@BeanReference(type = com.intranet.mef.assistance.service.ServizioLocalService.class)
	protected com.intranet.mef.assistance.service.ServizioLocalService servizioLocalService;
	@BeanReference(type = ServizioPersistence.class)
	protected ServizioPersistence servizioPersistence;
	@BeanReference(type = com.intranet.mef.assistance.service.TopicLocalService.class)
	protected com.intranet.mef.assistance.service.TopicLocalService topicLocalService;
	@BeanReference(type = TopicPersistence.class)
	protected TopicPersistence topicPersistence;
	@BeanReference(type = UploadHelperLocalService.class)
	protected UploadHelperLocalService uploadHelperLocalService;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}