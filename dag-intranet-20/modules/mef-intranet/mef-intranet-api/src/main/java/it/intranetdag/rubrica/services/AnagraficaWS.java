package it.intranetdag.rubrica.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2019-05-28T14:51:24.930+02:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "AnagraficaWS", 
				  wsdlLocation = "http://18.194.147.230/MEFIntranetRubricaWS/services/AnagraficaWS?wsdl",
                  targetNamespace = "http://services.rubrica.intranetdag.it") 
public class AnagraficaWS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://services.rubrica.intranetdag.it", "AnagraficaWS");
    public final static QName AnagraficaWSHttpEndpoint = new QName("http://services.rubrica.intranetdag.it", "AnagraficaWSHttpEndpoint");
    public final static QName AnagraficaWSHttpSoap12Endpoint = new QName("http://services.rubrica.intranetdag.it", "AnagraficaWSHttpSoap12Endpoint");
    public final static QName AnagraficaWSHttpSoap11Endpoint = new QName("http://services.rubrica.intranetdag.it", "AnagraficaWSHttpSoap11Endpoint");
    static {
    	  URL url = null;
          try {
              url = new URL("http://18.194.147.230/MEFIntranetRubricaWS/services/AnagraficaWS?wsdl");
          } catch (MalformedURLException e) {
              java.util.logging.Logger.getLogger(AnagraficaWS.class.getName())
                  .log(java.util.logging.Level.INFO, 
                       "Can not initialize the default wsdl from {0}", "http://18.194.147.230/MEFIntranetRubricaWS/services/AnagraficaWS?wsdl");
          }       
        WSDL_LOCATION = url;
    }

    public AnagraficaWS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AnagraficaWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AnagraficaWS() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public AnagraficaWS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AnagraficaWS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AnagraficaWS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpEndpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpEndpoint() {
        return super.getPort(AnagraficaWSHttpEndpoint, AnagraficaWSPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpEndpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(AnagraficaWSHttpEndpoint, AnagraficaWSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpSoap12Endpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpSoap12Endpoint() {
        return super.getPort(AnagraficaWSHttpSoap12Endpoint, AnagraficaWSPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpSoap12Endpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AnagraficaWSHttpSoap12Endpoint, AnagraficaWSPortType.class, features);
    }


    /**
     *
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpSoap11Endpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpSoap11Endpoint() {
        return super.getPort(AnagraficaWSHttpSoap11Endpoint, AnagraficaWSPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AnagraficaWSPortType
     */
    @WebEndpoint(name = "AnagraficaWSHttpSoap11Endpoint")
    public AnagraficaWSPortType getAnagraficaWSHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AnagraficaWSHttpSoap11Endpoint, AnagraficaWSPortType.class, features);
    }

}
