/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.local.bfc.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import servizio.local.bfc.model.LocalRichInfo;
import servizio.local.bfc.model.LocalRichInfoModel;
import servizio.local.bfc.model.LocalRichInfoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LocalRichInfo service. Represents a row in the &quot;LOCBFC_LocalRichInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link LocalRichInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LocalRichInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LocalRichInfoImpl
 * @see LocalRichInfo
 * @see LocalRichInfoModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class LocalRichInfoModelImpl extends BaseModelImpl<LocalRichInfo>
	implements LocalRichInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a local rich info model instance should use the {@link LocalRichInfo} interface instead.
	 */
	public static final String TABLE_NAME = "LOCBFC_LocalRichInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "idStatoAttuale", Types.BIGINT },
			{ "id_", Types.BIGINT },
			{ "id_richiesta", Types.BIGINT },
			{ "dataRichiesta", Types.TIMESTAMP },
			{ "email", Types.VARCHAR },
			{ "rifStanza", Types.VARCHAR },
			{ "ispettorato", Types.VARCHAR },
			{ "nomeRef", Types.VARCHAR },
			{ "telRef", Types.VARCHAR },
			{ "nMacchina", Types.VARCHAR },
			{ "noteRich", Types.VARCHAR },
			{ "ufficio", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "uidIns", Types.BIGINT },
			{ "dataIns", Types.TIMESTAMP },
			{ "uidUpd", Types.BIGINT },
			{ "dataUpd", Types.TIMESTAMP },
			{ "oggetto", Types.VARCHAR },
			{ "idSede", Types.VARCHAR },
			{ "telRich", Types.VARCHAR },
			{ "strutUff", Types.VARCHAR },
			{ "strutIsp", Types.VARCHAR },
			{ "costoReale", Types.FLOAT },
			{ "preventivo", Types.INTEGER },
			{ "flagInvio", Types.INTEGER },
			{ "inStage", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("idStatoAttuale", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_richiesta", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dataRichiesta", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rifStanza", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ispettorato", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nomeRef", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telRef", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nMacchina", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noteRich", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ufficio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("note", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uidIns", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dataIns", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("uidUpd", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dataUpd", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("oggetto", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idSede", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telRich", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("strutUff", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("strutIsp", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("costoReale", Types.FLOAT);
		TABLE_COLUMNS_MAP.put("preventivo", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("flagInvio", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("inStage", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table LOCBFC_LocalRichInfo (idStatoAttuale LONG,id_ LONG not null primary key,id_richiesta LONG,dataRichiesta DATE null,email VARCHAR(100) null,rifStanza VARCHAR(50) null,ispettorato VARCHAR(100) null,nomeRef VARCHAR(100) null,telRef VARCHAR(100) null,nMacchina VARCHAR(100) null,noteRich STRING null,ufficio VARCHAR(100) null,note STRING null,uidIns LONG,dataIns DATE null,uidUpd LONG,dataUpd DATE null,oggetto VARCHAR(100) null,idSede VARCHAR(50) null,telRich VARCHAR(20) null,strutUff VARCHAR(10) null,strutIsp VARCHAR(10) null,costoReale DOUBLE,preventivo INTEGER,flagInvio INTEGER,inStage BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table LOCBFC_LocalRichInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY localRichInfo.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LOCBFC_LocalRichInfo.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.example.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.servizio.local.bfc.model.LocalRichInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.example.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.servizio.local.bfc.model.LocalRichInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.example.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.servizio.local.bfc.model.LocalRichInfo"),
			true);
	public static final long EMAIL_COLUMN_BITMASK = 1L;
	public static final long ID_RICHIESTA_COLUMN_BITMASK = 2L;
	public static final long INSTAGE_COLUMN_BITMASK = 4L;
	public static final long ID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LocalRichInfo toModel(LocalRichInfoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LocalRichInfo model = new LocalRichInfoImpl();

		model.setIdStatoAttuale(soapModel.getIdStatoAttuale());
		model.setId(soapModel.getId());
		model.setId_richiesta(soapModel.getId_richiesta());
		model.setDataRichiesta(soapModel.getDataRichiesta());
		model.setEmail(soapModel.getEmail());
		model.setRifStanza(soapModel.getRifStanza());
		model.setIspettorato(soapModel.getIspettorato());
		model.setNomeRef(soapModel.getNomeRef());
		model.setTelRef(soapModel.getTelRef());
		model.setNMacchina(soapModel.getNMacchina());
		model.setNoteRich(soapModel.getNoteRich());
		model.setUfficio(soapModel.getUfficio());
		model.setNote(soapModel.getNote());
		model.setUidIns(soapModel.getUidIns());
		model.setDataIns(soapModel.getDataIns());
		model.setUidUpd(soapModel.getUidUpd());
		model.setDataUpd(soapModel.getDataUpd());
		model.setOggetto(soapModel.getOggetto());
		model.setIdSede(soapModel.getIdSede());
		model.setTelRich(soapModel.getTelRich());
		model.setStrutUff(soapModel.getStrutUff());
		model.setStrutIsp(soapModel.getStrutIsp());
		model.setCostoReale(soapModel.getCostoReale());
		model.setPreventivo(soapModel.getPreventivo());
		model.setFlagInvio(soapModel.getFlagInvio());
		model.setInStage(soapModel.getInStage());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LocalRichInfo> toModels(LocalRichInfoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LocalRichInfo> models = new ArrayList<LocalRichInfo>(soapModels.length);

		for (LocalRichInfoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.example.service.util.PropsUtil.get(
				"lock.expiration.time.servizio.local.bfc.model.LocalRichInfo"));

	public LocalRichInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LocalRichInfo.class;
	}

	@Override
	public String getModelClassName() {
		return LocalRichInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idStatoAttuale", getIdStatoAttuale());
		attributes.put("id", getId());
		attributes.put("id_richiesta", getId_richiesta());
		attributes.put("dataRichiesta", getDataRichiesta());
		attributes.put("email", getEmail());
		attributes.put("rifStanza", getRifStanza());
		attributes.put("ispettorato", getIspettorato());
		attributes.put("nomeRef", getNomeRef());
		attributes.put("telRef", getTelRef());
		attributes.put("nMacchina", getNMacchina());
		attributes.put("noteRich", getNoteRich());
		attributes.put("ufficio", getUfficio());
		attributes.put("note", getNote());
		attributes.put("uidIns", getUidIns());
		attributes.put("dataIns", getDataIns());
		attributes.put("uidUpd", getUidUpd());
		attributes.put("dataUpd", getDataUpd());
		attributes.put("oggetto", getOggetto());
		attributes.put("idSede", getIdSede());
		attributes.put("telRich", getTelRich());
		attributes.put("strutUff", getStrutUff());
		attributes.put("strutIsp", getStrutIsp());
		attributes.put("costoReale", getCostoReale());
		attributes.put("preventivo", getPreventivo());
		attributes.put("flagInvio", getFlagInvio());
		attributes.put("inStage", getInStage());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idStatoAttuale = (Long)attributes.get("idStatoAttuale");

		if (idStatoAttuale != null) {
			setIdStatoAttuale(idStatoAttuale);
		}

		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long id_richiesta = (Long)attributes.get("id_richiesta");

		if (id_richiesta != null) {
			setId_richiesta(id_richiesta);
		}

		Date dataRichiesta = (Date)attributes.get("dataRichiesta");

		if (dataRichiesta != null) {
			setDataRichiesta(dataRichiesta);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String rifStanza = (String)attributes.get("rifStanza");

		if (rifStanza != null) {
			setRifStanza(rifStanza);
		}

		String ispettorato = (String)attributes.get("ispettorato");

		if (ispettorato != null) {
			setIspettorato(ispettorato);
		}

		String nomeRef = (String)attributes.get("nomeRef");

		if (nomeRef != null) {
			setNomeRef(nomeRef);
		}

		String telRef = (String)attributes.get("telRef");

		if (telRef != null) {
			setTelRef(telRef);
		}

		String nMacchina = (String)attributes.get("nMacchina");

		if (nMacchina != null) {
			setNMacchina(nMacchina);
		}

		String noteRich = (String)attributes.get("noteRich");

		if (noteRich != null) {
			setNoteRich(noteRich);
		}

		String ufficio = (String)attributes.get("ufficio");

		if (ufficio != null) {
			setUfficio(ufficio);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Long uidIns = (Long)attributes.get("uidIns");

		if (uidIns != null) {
			setUidIns(uidIns);
		}

		Date dataIns = (Date)attributes.get("dataIns");

		if (dataIns != null) {
			setDataIns(dataIns);
		}

		Long uidUpd = (Long)attributes.get("uidUpd");

		if (uidUpd != null) {
			setUidUpd(uidUpd);
		}

		Date dataUpd = (Date)attributes.get("dataUpd");

		if (dataUpd != null) {
			setDataUpd(dataUpd);
		}

		String oggetto = (String)attributes.get("oggetto");

		if (oggetto != null) {
			setOggetto(oggetto);
		}

		String idSede = (String)attributes.get("idSede");

		if (idSede != null) {
			setIdSede(idSede);
		}

		String telRich = (String)attributes.get("telRich");

		if (telRich != null) {
			setTelRich(telRich);
		}

		String strutUff = (String)attributes.get("strutUff");

		if (strutUff != null) {
			setStrutUff(strutUff);
		}

		String strutIsp = (String)attributes.get("strutIsp");

		if (strutIsp != null) {
			setStrutIsp(strutIsp);
		}

		Float costoReale = (Float)attributes.get("costoReale");

		if (costoReale != null) {
			setCostoReale(costoReale);
		}

		Integer preventivo = (Integer)attributes.get("preventivo");

		if (preventivo != null) {
			setPreventivo(preventivo);
		}

		Integer flagInvio = (Integer)attributes.get("flagInvio");

		if (flagInvio != null) {
			setFlagInvio(flagInvio);
		}

		Boolean inStage = (Boolean)attributes.get("inStage");

		if (inStage != null) {
			setInStage(inStage);
		}
	}

	@JSON
	@Override
	public long getIdStatoAttuale() {
		return _idStatoAttuale;
	}

	@Override
	public void setIdStatoAttuale(long idStatoAttuale) {
		_idStatoAttuale = idStatoAttuale;
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getId_richiesta() {
		return _id_richiesta;
	}

	@Override
	public void setId_richiesta(long id_richiesta) {
		_columnBitmask |= ID_RICHIESTA_COLUMN_BITMASK;

		if (!_setOriginalId_richiesta) {
			_setOriginalId_richiesta = true;

			_originalId_richiesta = _id_richiesta;
		}

		_id_richiesta = id_richiesta;
	}

	public long getOriginalId_richiesta() {
		return _originalId_richiesta;
	}

	@JSON
	@Override
	public Date getDataRichiesta() {
		return _dataRichiesta;
	}

	@Override
	public void setDataRichiesta(Date dataRichiesta) {
		_dataRichiesta = dataRichiesta;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@JSON
	@Override
	public String getRifStanza() {
		if (_rifStanza == null) {
			return StringPool.BLANK;
		}
		else {
			return _rifStanza;
		}
	}

	@Override
	public void setRifStanza(String rifStanza) {
		_rifStanza = rifStanza;
	}

	@JSON
	@Override
	public String getIspettorato() {
		if (_ispettorato == null) {
			return StringPool.BLANK;
		}
		else {
			return _ispettorato;
		}
	}

	@Override
	public void setIspettorato(String ispettorato) {
		_ispettorato = ispettorato;
	}

	@JSON
	@Override
	public String getNomeRef() {
		if (_nomeRef == null) {
			return StringPool.BLANK;
		}
		else {
			return _nomeRef;
		}
	}

	@Override
	public void setNomeRef(String nomeRef) {
		_nomeRef = nomeRef;
	}

	@JSON
	@Override
	public String getTelRef() {
		if (_telRef == null) {
			return StringPool.BLANK;
		}
		else {
			return _telRef;
		}
	}

	@Override
	public void setTelRef(String telRef) {
		_telRef = telRef;
	}

	@JSON
	@Override
	public String getNMacchina() {
		if (_nMacchina == null) {
			return StringPool.BLANK;
		}
		else {
			return _nMacchina;
		}
	}

	@Override
	public void setNMacchina(String nMacchina) {
		_nMacchina = nMacchina;
	}

	@JSON
	@Override
	public String getNoteRich() {
		if (_noteRich == null) {
			return StringPool.BLANK;
		}
		else {
			return _noteRich;
		}
	}

	@Override
	public void setNoteRich(String noteRich) {
		_noteRich = noteRich;
	}

	@JSON
	@Override
	public String getUfficio() {
		if (_ufficio == null) {
			return StringPool.BLANK;
		}
		else {
			return _ufficio;
		}
	}

	@Override
	public void setUfficio(String ufficio) {
		_ufficio = ufficio;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public long getUidIns() {
		return _uidIns;
	}

	@Override
	public void setUidIns(long uidIns) {
		_uidIns = uidIns;
	}

	@JSON
	@Override
	public Date getDataIns() {
		return _dataIns;
	}

	@Override
	public void setDataIns(Date dataIns) {
		_dataIns = dataIns;
	}

	@JSON
	@Override
	public long getUidUpd() {
		return _uidUpd;
	}

	@Override
	public void setUidUpd(long uidUpd) {
		_uidUpd = uidUpd;
	}

	@JSON
	@Override
	public Date getDataUpd() {
		return _dataUpd;
	}

	@Override
	public void setDataUpd(Date dataUpd) {
		_dataUpd = dataUpd;
	}

	@JSON
	@Override
	public String getOggetto() {
		if (_oggetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _oggetto;
		}
	}

	@Override
	public void setOggetto(String oggetto) {
		_oggetto = oggetto;
	}

	@JSON
	@Override
	public String getIdSede() {
		if (_idSede == null) {
			return StringPool.BLANK;
		}
		else {
			return _idSede;
		}
	}

	@Override
	public void setIdSede(String idSede) {
		_idSede = idSede;
	}

	@JSON
	@Override
	public String getTelRich() {
		if (_telRich == null) {
			return StringPool.BLANK;
		}
		else {
			return _telRich;
		}
	}

	@Override
	public void setTelRich(String telRich) {
		_telRich = telRich;
	}

	@JSON
	@Override
	public String getStrutUff() {
		if (_strutUff == null) {
			return StringPool.BLANK;
		}
		else {
			return _strutUff;
		}
	}

	@Override
	public void setStrutUff(String strutUff) {
		_strutUff = strutUff;
	}

	@JSON
	@Override
	public String getStrutIsp() {
		if (_strutIsp == null) {
			return StringPool.BLANK;
		}
		else {
			return _strutIsp;
		}
	}

	@Override
	public void setStrutIsp(String strutIsp) {
		_strutIsp = strutIsp;
	}

	@JSON
	@Override
	public float getCostoReale() {
		return _costoReale;
	}

	@Override
	public void setCostoReale(float costoReale) {
		_costoReale = costoReale;
	}

	@JSON
	@Override
	public int getPreventivo() {
		return _preventivo;
	}

	@Override
	public void setPreventivo(int preventivo) {
		_preventivo = preventivo;
	}

	@JSON
	@Override
	public int getFlagInvio() {
		return _flagInvio;
	}

	@Override
	public void setFlagInvio(int flagInvio) {
		_flagInvio = flagInvio;
	}

	@JSON
	@Override
	public boolean getInStage() {
		return _inStage;
	}

	@JSON
	@Override
	public boolean isInStage() {
		return _inStage;
	}

	@Override
	public void setInStage(boolean inStage) {
		_columnBitmask |= INSTAGE_COLUMN_BITMASK;

		if (!_setOriginalInStage) {
			_setOriginalInStage = true;

			_originalInStage = _inStage;
		}

		_inStage = inStage;
	}

	public boolean getOriginalInStage() {
		return _originalInStage;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LocalRichInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LocalRichInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LocalRichInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LocalRichInfoImpl localRichInfoImpl = new LocalRichInfoImpl();

		localRichInfoImpl.setIdStatoAttuale(getIdStatoAttuale());
		localRichInfoImpl.setId(getId());
		localRichInfoImpl.setId_richiesta(getId_richiesta());
		localRichInfoImpl.setDataRichiesta(getDataRichiesta());
		localRichInfoImpl.setEmail(getEmail());
		localRichInfoImpl.setRifStanza(getRifStanza());
		localRichInfoImpl.setIspettorato(getIspettorato());
		localRichInfoImpl.setNomeRef(getNomeRef());
		localRichInfoImpl.setTelRef(getTelRef());
		localRichInfoImpl.setNMacchina(getNMacchina());
		localRichInfoImpl.setNoteRich(getNoteRich());
		localRichInfoImpl.setUfficio(getUfficio());
		localRichInfoImpl.setNote(getNote());
		localRichInfoImpl.setUidIns(getUidIns());
		localRichInfoImpl.setDataIns(getDataIns());
		localRichInfoImpl.setUidUpd(getUidUpd());
		localRichInfoImpl.setDataUpd(getDataUpd());
		localRichInfoImpl.setOggetto(getOggetto());
		localRichInfoImpl.setIdSede(getIdSede());
		localRichInfoImpl.setTelRich(getTelRich());
		localRichInfoImpl.setStrutUff(getStrutUff());
		localRichInfoImpl.setStrutIsp(getStrutIsp());
		localRichInfoImpl.setCostoReale(getCostoReale());
		localRichInfoImpl.setPreventivo(getPreventivo());
		localRichInfoImpl.setFlagInvio(getFlagInvio());
		localRichInfoImpl.setInStage(getInStage());

		localRichInfoImpl.resetOriginalValues();

		return localRichInfoImpl;
	}

	@Override
	public int compareTo(LocalRichInfo localRichInfo) {
		long primaryKey = localRichInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LocalRichInfo)) {
			return false;
		}

		LocalRichInfo localRichInfo = (LocalRichInfo)obj;

		long primaryKey = localRichInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LocalRichInfoModelImpl localRichInfoModelImpl = this;

		localRichInfoModelImpl._originalId_richiesta = localRichInfoModelImpl._id_richiesta;

		localRichInfoModelImpl._setOriginalId_richiesta = false;

		localRichInfoModelImpl._originalEmail = localRichInfoModelImpl._email;

		localRichInfoModelImpl._originalInStage = localRichInfoModelImpl._inStage;

		localRichInfoModelImpl._setOriginalInStage = false;

		localRichInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LocalRichInfo> toCacheModel() {
		LocalRichInfoCacheModel localRichInfoCacheModel = new LocalRichInfoCacheModel();

		localRichInfoCacheModel.idStatoAttuale = getIdStatoAttuale();

		localRichInfoCacheModel.id = getId();

		localRichInfoCacheModel.id_richiesta = getId_richiesta();

		Date dataRichiesta = getDataRichiesta();

		if (dataRichiesta != null) {
			localRichInfoCacheModel.dataRichiesta = dataRichiesta.getTime();
		}
		else {
			localRichInfoCacheModel.dataRichiesta = Long.MIN_VALUE;
		}

		localRichInfoCacheModel.email = getEmail();

		String email = localRichInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			localRichInfoCacheModel.email = null;
		}

		localRichInfoCacheModel.rifStanza = getRifStanza();

		String rifStanza = localRichInfoCacheModel.rifStanza;

		if ((rifStanza != null) && (rifStanza.length() == 0)) {
			localRichInfoCacheModel.rifStanza = null;
		}

		localRichInfoCacheModel.ispettorato = getIspettorato();

		String ispettorato = localRichInfoCacheModel.ispettorato;

		if ((ispettorato != null) && (ispettorato.length() == 0)) {
			localRichInfoCacheModel.ispettorato = null;
		}

		localRichInfoCacheModel.nomeRef = getNomeRef();

		String nomeRef = localRichInfoCacheModel.nomeRef;

		if ((nomeRef != null) && (nomeRef.length() == 0)) {
			localRichInfoCacheModel.nomeRef = null;
		}

		localRichInfoCacheModel.telRef = getTelRef();

		String telRef = localRichInfoCacheModel.telRef;

		if ((telRef != null) && (telRef.length() == 0)) {
			localRichInfoCacheModel.telRef = null;
		}

		localRichInfoCacheModel.nMacchina = getNMacchina();

		String nMacchina = localRichInfoCacheModel.nMacchina;

		if ((nMacchina != null) && (nMacchina.length() == 0)) {
			localRichInfoCacheModel.nMacchina = null;
		}

		localRichInfoCacheModel.noteRich = getNoteRich();

		String noteRich = localRichInfoCacheModel.noteRich;

		if ((noteRich != null) && (noteRich.length() == 0)) {
			localRichInfoCacheModel.noteRich = null;
		}

		localRichInfoCacheModel.ufficio = getUfficio();

		String ufficio = localRichInfoCacheModel.ufficio;

		if ((ufficio != null) && (ufficio.length() == 0)) {
			localRichInfoCacheModel.ufficio = null;
		}

		localRichInfoCacheModel.note = getNote();

		String note = localRichInfoCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			localRichInfoCacheModel.note = null;
		}

		localRichInfoCacheModel.uidIns = getUidIns();

		Date dataIns = getDataIns();

		if (dataIns != null) {
			localRichInfoCacheModel.dataIns = dataIns.getTime();
		}
		else {
			localRichInfoCacheModel.dataIns = Long.MIN_VALUE;
		}

		localRichInfoCacheModel.uidUpd = getUidUpd();

		Date dataUpd = getDataUpd();

		if (dataUpd != null) {
			localRichInfoCacheModel.dataUpd = dataUpd.getTime();
		}
		else {
			localRichInfoCacheModel.dataUpd = Long.MIN_VALUE;
		}

		localRichInfoCacheModel.oggetto = getOggetto();

		String oggetto = localRichInfoCacheModel.oggetto;

		if ((oggetto != null) && (oggetto.length() == 0)) {
			localRichInfoCacheModel.oggetto = null;
		}

		localRichInfoCacheModel.idSede = getIdSede();

		String idSede = localRichInfoCacheModel.idSede;

		if ((idSede != null) && (idSede.length() == 0)) {
			localRichInfoCacheModel.idSede = null;
		}

		localRichInfoCacheModel.telRich = getTelRich();

		String telRich = localRichInfoCacheModel.telRich;

		if ((telRich != null) && (telRich.length() == 0)) {
			localRichInfoCacheModel.telRich = null;
		}

		localRichInfoCacheModel.strutUff = getStrutUff();

		String strutUff = localRichInfoCacheModel.strutUff;

		if ((strutUff != null) && (strutUff.length() == 0)) {
			localRichInfoCacheModel.strutUff = null;
		}

		localRichInfoCacheModel.strutIsp = getStrutIsp();

		String strutIsp = localRichInfoCacheModel.strutIsp;

		if ((strutIsp != null) && (strutIsp.length() == 0)) {
			localRichInfoCacheModel.strutIsp = null;
		}

		localRichInfoCacheModel.costoReale = getCostoReale();

		localRichInfoCacheModel.preventivo = getPreventivo();

		localRichInfoCacheModel.flagInvio = getFlagInvio();

		localRichInfoCacheModel.inStage = getInStage();

		return localRichInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(53);

		sb.append("{idStatoAttuale=");
		sb.append(getIdStatoAttuale());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", id_richiesta=");
		sb.append(getId_richiesta());
		sb.append(", dataRichiesta=");
		sb.append(getDataRichiesta());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", rifStanza=");
		sb.append(getRifStanza());
		sb.append(", ispettorato=");
		sb.append(getIspettorato());
		sb.append(", nomeRef=");
		sb.append(getNomeRef());
		sb.append(", telRef=");
		sb.append(getTelRef());
		sb.append(", nMacchina=");
		sb.append(getNMacchina());
		sb.append(", noteRich=");
		sb.append(getNoteRich());
		sb.append(", ufficio=");
		sb.append(getUfficio());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", uidIns=");
		sb.append(getUidIns());
		sb.append(", dataIns=");
		sb.append(getDataIns());
		sb.append(", uidUpd=");
		sb.append(getUidUpd());
		sb.append(", dataUpd=");
		sb.append(getDataUpd());
		sb.append(", oggetto=");
		sb.append(getOggetto());
		sb.append(", idSede=");
		sb.append(getIdSede());
		sb.append(", telRich=");
		sb.append(getTelRich());
		sb.append(", strutUff=");
		sb.append(getStrutUff());
		sb.append(", strutIsp=");
		sb.append(getStrutIsp());
		sb.append(", costoReale=");
		sb.append(getCostoReale());
		sb.append(", preventivo=");
		sb.append(getPreventivo());
		sb.append(", flagInvio=");
		sb.append(getFlagInvio());
		sb.append(", inStage=");
		sb.append(getInStage());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(82);

		sb.append("<model><model-name>");
		sb.append("servizio.local.bfc.model.LocalRichInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idStatoAttuale</column-name><column-value><![CDATA[");
		sb.append(getIdStatoAttuale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_richiesta</column-name><column-value><![CDATA[");
		sb.append(getId_richiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataRichiesta</column-name><column-value><![CDATA[");
		sb.append(getDataRichiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rifStanza</column-name><column-value><![CDATA[");
		sb.append(getRifStanza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ispettorato</column-name><column-value><![CDATA[");
		sb.append(getIspettorato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nomeRef</column-name><column-value><![CDATA[");
		sb.append(getNomeRef());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telRef</column-name><column-value><![CDATA[");
		sb.append(getTelRef());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nMacchina</column-name><column-value><![CDATA[");
		sb.append(getNMacchina());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noteRich</column-name><column-value><![CDATA[");
		sb.append(getNoteRich());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ufficio</column-name><column-value><![CDATA[");
		sb.append(getUfficio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uidIns</column-name><column-value><![CDATA[");
		sb.append(getUidIns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataIns</column-name><column-value><![CDATA[");
		sb.append(getDataIns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uidUpd</column-name><column-value><![CDATA[");
		sb.append(getUidUpd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataUpd</column-name><column-value><![CDATA[");
		sb.append(getDataUpd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oggetto</column-name><column-value><![CDATA[");
		sb.append(getOggetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idSede</column-name><column-value><![CDATA[");
		sb.append(getIdSede());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telRich</column-name><column-value><![CDATA[");
		sb.append(getTelRich());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strutUff</column-name><column-value><![CDATA[");
		sb.append(getStrutUff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strutIsp</column-name><column-value><![CDATA[");
		sb.append(getStrutIsp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costoReale</column-name><column-value><![CDATA[");
		sb.append(getCostoReale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preventivo</column-name><column-value><![CDATA[");
		sb.append(getPreventivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flagInvio</column-name><column-value><![CDATA[");
		sb.append(getFlagInvio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inStage</column-name><column-value><![CDATA[");
		sb.append(getInStage());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = LocalRichInfo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			LocalRichInfo.class
		};
	private long _idStatoAttuale;
	private long _id;
	private long _id_richiesta;
	private long _originalId_richiesta;
	private boolean _setOriginalId_richiesta;
	private Date _dataRichiesta;
	private String _email;
	private String _originalEmail;
	private String _rifStanza;
	private String _ispettorato;
	private String _nomeRef;
	private String _telRef;
	private String _nMacchina;
	private String _noteRich;
	private String _ufficio;
	private String _note;
	private long _uidIns;
	private Date _dataIns;
	private long _uidUpd;
	private Date _dataUpd;
	private String _oggetto;
	private String _idSede;
	private String _telRich;
	private String _strutUff;
	private String _strutIsp;
	private float _costoReale;
	private int _preventivo;
	private int _flagInvio;
	private boolean _inStage;
	private boolean _originalInStage;
	private boolean _setOriginalInStage;
	private long _columnBitmask;
	private LocalRichInfo _escapedModel;
}