/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package service.intranet.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import service.intranet.mef.model.RichiestaBeneInv;
import service.intranet.mef.model.RichiestaBeneInvModel;
import service.intranet.mef.model.RichiestaBeneInvSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the RichiestaBeneInv service. Represents a row in the &quot;MFORM_RichiestaBeneInv&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RichiestaBeneInvModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RichiestaBeneInvImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RichiestaBeneInvImpl
 * @see RichiestaBeneInv
 * @see RichiestaBeneInvModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RichiestaBeneInvModelImpl extends BaseModelImpl<RichiestaBeneInv>
	implements RichiestaBeneInvModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a richiesta bene inv model instance should use the {@link RichiestaBeneInv} interface instead.
	 */
	public static final String TABLE_NAME = "MFORM_RichiestaBeneInv";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_richiesta", Types.BIGINT },
			{ "utente", Types.VARCHAR },
			{ "nome_rich", Types.VARCHAR },
			{ "cogn_rich", Types.VARCHAR },
			{ "dip_dir", Types.VARCHAR },
			{ "dati_rich", Types.VARCHAR },
			{ "oggetto", Types.VARCHAR },
			{ "data_", Types.TIMESTAMP },
			{ "beneficiario", Types.VARCHAR },
			{ "destinazione", Types.VARCHAR },
			{ "id_stato", Types.BIGINT },
			{ "note_consegn", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_richiesta", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("utente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nome_rich", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cogn_rich", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dip_dir", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dati_rich", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("oggetto", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("data_", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("beneficiario", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("destinazione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_stato", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("note_consegn", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table MFORM_RichiestaBeneInv (id_richiesta LONG not null primary key,utente VARCHAR(75) null,nome_rich VARCHAR(75) null,cogn_rich VARCHAR(75) null,dip_dir VARCHAR(75) null,dati_rich VARCHAR(500) null,oggetto VARCHAR(75) null,data_ DATE null,beneficiario VARCHAR(255) null,destinazione VARCHAR(75) null,id_stato LONG,note_consegn VARCHAR(500) null)";
	public static final String TABLE_SQL_DROP = "drop table MFORM_RichiestaBeneInv";
	public static final String ORDER_BY_JPQL = " ORDER BY richiestaBeneInv.data DESC, richiestaBeneInv.id_richiesta DESC";
	public static final String ORDER_BY_SQL = " ORDER BY MFORM_RichiestaBeneInv.data_ DESC, MFORM_RichiestaBeneInv.id_richiesta DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(service.intranet.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.service.intranet.mef.model.RichiestaBeneInv"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(service.intranet.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.service.intranet.mef.model.RichiestaBeneInv"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(service.intranet.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.service.intranet.mef.model.RichiestaBeneInv"),
			true);
	public static final long DIP_DIR_COLUMN_BITMASK = 1L;
	public static final long ID_STATO_COLUMN_BITMASK = 2L;
	public static final long UTENTE_COLUMN_BITMASK = 4L;
	public static final long DATA_COLUMN_BITMASK = 8L;
	public static final long ID_RICHIESTA_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RichiestaBeneInv toModel(RichiestaBeneInvSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RichiestaBeneInv model = new RichiestaBeneInvImpl();

		model.setId_richiesta(soapModel.getId_richiesta());
		model.setUtente(soapModel.getUtente());
		model.setNome_rich(soapModel.getNome_rich());
		model.setCogn_rich(soapModel.getCogn_rich());
		model.setDip_dir(soapModel.getDip_dir());
		model.setDati_rich(soapModel.getDati_rich());
		model.setOggetto(soapModel.getOggetto());
		model.setData(soapModel.getData());
		model.setBeneficiario(soapModel.getBeneficiario());
		model.setDestinazione(soapModel.getDestinazione());
		model.setId_stato(soapModel.getId_stato());
		model.setNote_consegn(soapModel.getNote_consegn());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RichiestaBeneInv> toModels(
		RichiestaBeneInvSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<RichiestaBeneInv> models = new ArrayList<RichiestaBeneInv>(soapModels.length);

		for (RichiestaBeneInvSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(service.intranet.mef.service.util.PropsUtil.get(
				"lock.expiration.time.service.intranet.mef.model.RichiestaBeneInv"));

	public RichiestaBeneInvModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_richiesta;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_richiesta(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_richiesta;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RichiestaBeneInv.class;
	}

	@Override
	public String getModelClassName() {
		return RichiestaBeneInv.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_richiesta", getId_richiesta());
		attributes.put("utente", getUtente());
		attributes.put("nome_rich", getNome_rich());
		attributes.put("cogn_rich", getCogn_rich());
		attributes.put("dip_dir", getDip_dir());
		attributes.put("dati_rich", getDati_rich());
		attributes.put("oggetto", getOggetto());
		attributes.put("data", getData());
		attributes.put("beneficiario", getBeneficiario());
		attributes.put("destinazione", getDestinazione());
		attributes.put("id_stato", getId_stato());
		attributes.put("note_consegn", getNote_consegn());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_richiesta = (Long)attributes.get("id_richiesta");

		if (id_richiesta != null) {
			setId_richiesta(id_richiesta);
		}

		String utente = (String)attributes.get("utente");

		if (utente != null) {
			setUtente(utente);
		}

		String nome_rich = (String)attributes.get("nome_rich");

		if (nome_rich != null) {
			setNome_rich(nome_rich);
		}

		String cogn_rich = (String)attributes.get("cogn_rich");

		if (cogn_rich != null) {
			setCogn_rich(cogn_rich);
		}

		String dip_dir = (String)attributes.get("dip_dir");

		if (dip_dir != null) {
			setDip_dir(dip_dir);
		}

		String dati_rich = (String)attributes.get("dati_rich");

		if (dati_rich != null) {
			setDati_rich(dati_rich);
		}

		String oggetto = (String)attributes.get("oggetto");

		if (oggetto != null) {
			setOggetto(oggetto);
		}

		Date data = (Date)attributes.get("data");

		if (data != null) {
			setData(data);
		}

		String beneficiario = (String)attributes.get("beneficiario");

		if (beneficiario != null) {
			setBeneficiario(beneficiario);
		}

		String destinazione = (String)attributes.get("destinazione");

		if (destinazione != null) {
			setDestinazione(destinazione);
		}

		Long id_stato = (Long)attributes.get("id_stato");

		if (id_stato != null) {
			setId_stato(id_stato);
		}

		String note_consegn = (String)attributes.get("note_consegn");

		if (note_consegn != null) {
			setNote_consegn(note_consegn);
		}
	}

	@JSON
	@Override
	public long getId_richiesta() {
		return _id_richiesta;
	}

	@Override
	public void setId_richiesta(long id_richiesta) {
		_columnBitmask = -1L;

		_id_richiesta = id_richiesta;
	}

	@JSON
	@Override
	public String getUtente() {
		if (_utente == null) {
			return StringPool.BLANK;
		}
		else {
			return _utente;
		}
	}

	@Override
	public void setUtente(String utente) {
		_columnBitmask |= UTENTE_COLUMN_BITMASK;

		if (_originalUtente == null) {
			_originalUtente = _utente;
		}

		_utente = utente;
	}

	public String getOriginalUtente() {
		return GetterUtil.getString(_originalUtente);
	}

	@JSON
	@Override
	public String getNome_rich() {
		if (_nome_rich == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome_rich;
		}
	}

	@Override
	public void setNome_rich(String nome_rich) {
		_nome_rich = nome_rich;
	}

	@JSON
	@Override
	public String getCogn_rich() {
		if (_cogn_rich == null) {
			return StringPool.BLANK;
		}
		else {
			return _cogn_rich;
		}
	}

	@Override
	public void setCogn_rich(String cogn_rich) {
		_cogn_rich = cogn_rich;
	}

	@JSON
	@Override
	public String getDip_dir() {
		if (_dip_dir == null) {
			return StringPool.BLANK;
		}
		else {
			return _dip_dir;
		}
	}

	@Override
	public void setDip_dir(String dip_dir) {
		_columnBitmask |= DIP_DIR_COLUMN_BITMASK;

		if (_originalDip_dir == null) {
			_originalDip_dir = _dip_dir;
		}

		_dip_dir = dip_dir;
	}

	public String getOriginalDip_dir() {
		return GetterUtil.getString(_originalDip_dir);
	}

	@JSON
	@Override
	public String getDati_rich() {
		if (_dati_rich == null) {
			return StringPool.BLANK;
		}
		else {
			return _dati_rich;
		}
	}

	@Override
	public void setDati_rich(String dati_rich) {
		_dati_rich = dati_rich;
	}

	@JSON
	@Override
	public String getOggetto() {
		if (_oggetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _oggetto;
		}
	}

	@Override
	public void setOggetto(String oggetto) {
		_oggetto = oggetto;
	}

	@JSON
	@Override
	public Date getData() {
		return _data;
	}

	@Override
	public void setData(Date data) {
		_columnBitmask = -1L;

		_data = data;
	}

	@JSON
	@Override
	public String getBeneficiario() {
		if (_beneficiario == null) {
			return StringPool.BLANK;
		}
		else {
			return _beneficiario;
		}
	}

	@Override
	public void setBeneficiario(String beneficiario) {
		_beneficiario = beneficiario;
	}

	@JSON
	@Override
	public String getDestinazione() {
		if (_destinazione == null) {
			return StringPool.BLANK;
		}
		else {
			return _destinazione;
		}
	}

	@Override
	public void setDestinazione(String destinazione) {
		_destinazione = destinazione;
	}

	@JSON
	@Override
	public long getId_stato() {
		return _id_stato;
	}

	@Override
	public void setId_stato(long id_stato) {
		_columnBitmask |= ID_STATO_COLUMN_BITMASK;

		if (!_setOriginalId_stato) {
			_setOriginalId_stato = true;

			_originalId_stato = _id_stato;
		}

		_id_stato = id_stato;
	}

	public long getOriginalId_stato() {
		return _originalId_stato;
	}

	@JSON
	@Override
	public String getNote_consegn() {
		if (_note_consegn == null) {
			return StringPool.BLANK;
		}
		else {
			return _note_consegn;
		}
	}

	@Override
	public void setNote_consegn(String note_consegn) {
		_note_consegn = note_consegn;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			RichiestaBeneInv.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RichiestaBeneInv toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RichiestaBeneInv)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RichiestaBeneInvImpl richiestaBeneInvImpl = new RichiestaBeneInvImpl();

		richiestaBeneInvImpl.setId_richiesta(getId_richiesta());
		richiestaBeneInvImpl.setUtente(getUtente());
		richiestaBeneInvImpl.setNome_rich(getNome_rich());
		richiestaBeneInvImpl.setCogn_rich(getCogn_rich());
		richiestaBeneInvImpl.setDip_dir(getDip_dir());
		richiestaBeneInvImpl.setDati_rich(getDati_rich());
		richiestaBeneInvImpl.setOggetto(getOggetto());
		richiestaBeneInvImpl.setData(getData());
		richiestaBeneInvImpl.setBeneficiario(getBeneficiario());
		richiestaBeneInvImpl.setDestinazione(getDestinazione());
		richiestaBeneInvImpl.setId_stato(getId_stato());
		richiestaBeneInvImpl.setNote_consegn(getNote_consegn());

		richiestaBeneInvImpl.resetOriginalValues();

		return richiestaBeneInvImpl;
	}

	@Override
	public int compareTo(RichiestaBeneInv richiestaBeneInv) {
		int value ;

		value = DateUtil.compareTo(getData(), richiestaBeneInv.getData());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		if (getId_richiesta() < richiestaBeneInv.getId_richiesta()) {
			value = -1;
		}
		else if (getId_richiesta() > richiestaBeneInv.getId_richiesta()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RichiestaBeneInv)) {
			return false;
		}

		RichiestaBeneInv richiestaBeneInv = (RichiestaBeneInv)obj;

		long primaryKey = richiestaBeneInv.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RichiestaBeneInvModelImpl richiestaBeneInvModelImpl = this;

		richiestaBeneInvModelImpl._originalUtente = richiestaBeneInvModelImpl._utente;

		richiestaBeneInvModelImpl._originalDip_dir = richiestaBeneInvModelImpl._dip_dir;

		richiestaBeneInvModelImpl._originalId_stato = richiestaBeneInvModelImpl._id_stato;

		richiestaBeneInvModelImpl._setOriginalId_stato = false;

		richiestaBeneInvModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RichiestaBeneInv> toCacheModel() {
		RichiestaBeneInvCacheModel richiestaBeneInvCacheModel = new RichiestaBeneInvCacheModel();

		richiestaBeneInvCacheModel.id_richiesta = getId_richiesta();

		richiestaBeneInvCacheModel.utente = getUtente();

		String utente = richiestaBeneInvCacheModel.utente;

		if ((utente != null) && (utente.length() == 0)) {
			richiestaBeneInvCacheModel.utente = null;
		}

		richiestaBeneInvCacheModel.nome_rich = getNome_rich();

		String nome_rich = richiestaBeneInvCacheModel.nome_rich;

		if ((nome_rich != null) && (nome_rich.length() == 0)) {
			richiestaBeneInvCacheModel.nome_rich = null;
		}

		richiestaBeneInvCacheModel.cogn_rich = getCogn_rich();

		String cogn_rich = richiestaBeneInvCacheModel.cogn_rich;

		if ((cogn_rich != null) && (cogn_rich.length() == 0)) {
			richiestaBeneInvCacheModel.cogn_rich = null;
		}

		richiestaBeneInvCacheModel.dip_dir = getDip_dir();

		String dip_dir = richiestaBeneInvCacheModel.dip_dir;

		if ((dip_dir != null) && (dip_dir.length() == 0)) {
			richiestaBeneInvCacheModel.dip_dir = null;
		}

		richiestaBeneInvCacheModel.dati_rich = getDati_rich();

		String dati_rich = richiestaBeneInvCacheModel.dati_rich;

		if ((dati_rich != null) && (dati_rich.length() == 0)) {
			richiestaBeneInvCacheModel.dati_rich = null;
		}

		richiestaBeneInvCacheModel.oggetto = getOggetto();

		String oggetto = richiestaBeneInvCacheModel.oggetto;

		if ((oggetto != null) && (oggetto.length() == 0)) {
			richiestaBeneInvCacheModel.oggetto = null;
		}

		Date data = getData();

		if (data != null) {
			richiestaBeneInvCacheModel.data = data.getTime();
		}
		else {
			richiestaBeneInvCacheModel.data = Long.MIN_VALUE;
		}

		richiestaBeneInvCacheModel.beneficiario = getBeneficiario();

		String beneficiario = richiestaBeneInvCacheModel.beneficiario;

		if ((beneficiario != null) && (beneficiario.length() == 0)) {
			richiestaBeneInvCacheModel.beneficiario = null;
		}

		richiestaBeneInvCacheModel.destinazione = getDestinazione();

		String destinazione = richiestaBeneInvCacheModel.destinazione;

		if ((destinazione != null) && (destinazione.length() == 0)) {
			richiestaBeneInvCacheModel.destinazione = null;
		}

		richiestaBeneInvCacheModel.id_stato = getId_stato();

		richiestaBeneInvCacheModel.note_consegn = getNote_consegn();

		String note_consegn = richiestaBeneInvCacheModel.note_consegn;

		if ((note_consegn != null) && (note_consegn.length() == 0)) {
			richiestaBeneInvCacheModel.note_consegn = null;
		}

		return richiestaBeneInvCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{id_richiesta=");
		sb.append(getId_richiesta());
		sb.append(", utente=");
		sb.append(getUtente());
		sb.append(", nome_rich=");
		sb.append(getNome_rich());
		sb.append(", cogn_rich=");
		sb.append(getCogn_rich());
		sb.append(", dip_dir=");
		sb.append(getDip_dir());
		sb.append(", dati_rich=");
		sb.append(getDati_rich());
		sb.append(", oggetto=");
		sb.append(getOggetto());
		sb.append(", data=");
		sb.append(getData());
		sb.append(", beneficiario=");
		sb.append(getBeneficiario());
		sb.append(", destinazione=");
		sb.append(getDestinazione());
		sb.append(", id_stato=");
		sb.append(getId_stato());
		sb.append(", note_consegn=");
		sb.append(getNote_consegn());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("service.intranet.mef.model.RichiestaBeneInv");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_richiesta</column-name><column-value><![CDATA[");
		sb.append(getId_richiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>utente</column-name><column-value><![CDATA[");
		sb.append(getUtente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome_rich</column-name><column-value><![CDATA[");
		sb.append(getNome_rich());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cogn_rich</column-name><column-value><![CDATA[");
		sb.append(getCogn_rich());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dip_dir</column-name><column-value><![CDATA[");
		sb.append(getDip_dir());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dati_rich</column-name><column-value><![CDATA[");
		sb.append(getDati_rich());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oggetto</column-name><column-value><![CDATA[");
		sb.append(getOggetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data</column-name><column-value><![CDATA[");
		sb.append(getData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beneficiario</column-name><column-value><![CDATA[");
		sb.append(getBeneficiario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>destinazione</column-name><column-value><![CDATA[");
		sb.append(getDestinazione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_stato</column-name><column-value><![CDATA[");
		sb.append(getId_stato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note_consegn</column-name><column-value><![CDATA[");
		sb.append(getNote_consegn());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = RichiestaBeneInv.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			RichiestaBeneInv.class
		};
	private long _id_richiesta;
	private String _utente;
	private String _originalUtente;
	private String _nome_rich;
	private String _cogn_rich;
	private String _dip_dir;
	private String _originalDip_dir;
	private String _dati_rich;
	private String _oggetto;
	private Date _data;
	private String _beneficiario;
	private String _destinazione;
	private long _id_stato;
	private long _originalId_stato;
	private boolean _setOriginalId_stato;
	private String _note_consegn;
	private long _columnBitmask;
	private RichiestaBeneInv _escapedModel;
}