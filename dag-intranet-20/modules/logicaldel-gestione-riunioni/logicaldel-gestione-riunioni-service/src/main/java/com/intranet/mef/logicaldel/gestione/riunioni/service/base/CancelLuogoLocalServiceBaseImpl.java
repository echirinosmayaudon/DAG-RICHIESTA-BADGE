/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.logicaldel.gestione.riunioni.service.base;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.logicaldel.gestione.riunioni.model.CancelLuogo;
import com.intranet.mef.logicaldel.gestione.riunioni.service.CancelLuogoLocalService;
import com.intranet.mef.logicaldel.gestione.riunioni.service.persistence.CancelAmmConvPersistence;
import com.intranet.mef.logicaldel.gestione.riunioni.service.persistence.CancelLuogoPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the cancel luogo local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.intranet.mef.logicaldel.gestione.riunioni.service.impl.CancelLuogoLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.intranet.mef.logicaldel.gestione.riunioni.service.impl.CancelLuogoLocalServiceImpl
 * @see com.intranet.mef.logicaldel.gestione.riunioni.service.CancelLuogoLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class CancelLuogoLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements CancelLuogoLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.intranet.mef.logicaldel.gestione.riunioni.service.CancelLuogoLocalServiceUtil} to access the cancel luogo local service.
	 */

	/**
	 * Adds the cancel luogo to the database. Also notifies the appropriate model listeners.
	 *
	 * @param cancelLuogo the cancel luogo
	 * @return the cancel luogo that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public CancelLuogo addCancelLuogo(CancelLuogo cancelLuogo) {
		cancelLuogo.setNew(true);

		return cancelLuogoPersistence.update(cancelLuogo);
	}

	/**
	 * Creates a new cancel luogo with the primary key. Does not add the cancel luogo to the database.
	 *
	 * @param id_luogo the primary key for the new cancel luogo
	 * @return the new cancel luogo
	 */
	@Override
	public CancelLuogo createCancelLuogo(long id_luogo) {
		return cancelLuogoPersistence.create(id_luogo);
	}

	/**
	 * Deletes the cancel luogo with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id_luogo the primary key of the cancel luogo
	 * @return the cancel luogo that was removed
	 * @throws PortalException if a cancel luogo with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public CancelLuogo deleteCancelLuogo(long id_luogo)
		throws PortalException {
		return cancelLuogoPersistence.remove(id_luogo);
	}

	/**
	 * Deletes the cancel luogo from the database. Also notifies the appropriate model listeners.
	 *
	 * @param cancelLuogo the cancel luogo
	 * @return the cancel luogo that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public CancelLuogo deleteCancelLuogo(CancelLuogo cancelLuogo) {
		return cancelLuogoPersistence.remove(cancelLuogo);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(CancelLuogo.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return cancelLuogoPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.logicaldel.gestione.riunioni.model.impl.CancelLuogoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return cancelLuogoPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.logicaldel.gestione.riunioni.model.impl.CancelLuogoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return cancelLuogoPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return cancelLuogoPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return cancelLuogoPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public CancelLuogo fetchCancelLuogo(long id_luogo) {
		return cancelLuogoPersistence.fetchByPrimaryKey(id_luogo);
	}

	/**
	 * Returns the cancel luogo with the primary key.
	 *
	 * @param id_luogo the primary key of the cancel luogo
	 * @return the cancel luogo
	 * @throws PortalException if a cancel luogo with the primary key could not be found
	 */
	@Override
	public CancelLuogo getCancelLuogo(long id_luogo) throws PortalException {
		return cancelLuogoPersistence.findByPrimaryKey(id_luogo);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(cancelLuogoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(CancelLuogo.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id_luogo");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(cancelLuogoLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(CancelLuogo.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("id_luogo");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(cancelLuogoLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(CancelLuogo.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id_luogo");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return cancelLuogoLocalService.deleteCancelLuogo((CancelLuogo)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return cancelLuogoPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the cancel luogos.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.logicaldel.gestione.riunioni.model.impl.CancelLuogoModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of cancel luogos
	 * @param end the upper bound of the range of cancel luogos (not inclusive)
	 * @return the range of cancel luogos
	 */
	@Override
	public List<CancelLuogo> getCancelLuogos(int start, int end) {
		return cancelLuogoPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of cancel luogos.
	 *
	 * @return the number of cancel luogos
	 */
	@Override
	public int getCancelLuogosCount() {
		return cancelLuogoPersistence.countAll();
	}

	/**
	 * Updates the cancel luogo in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param cancelLuogo the cancel luogo
	 * @return the cancel luogo that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public CancelLuogo updateCancelLuogo(CancelLuogo cancelLuogo) {
		return cancelLuogoPersistence.update(cancelLuogo);
	}

	/**
	 * Returns the cancel amm conv local service.
	 *
	 * @return the cancel amm conv local service
	 */
	public com.intranet.mef.logicaldel.gestione.riunioni.service.CancelAmmConvLocalService getCancelAmmConvLocalService() {
		return cancelAmmConvLocalService;
	}

	/**
	 * Sets the cancel amm conv local service.
	 *
	 * @param cancelAmmConvLocalService the cancel amm conv local service
	 */
	public void setCancelAmmConvLocalService(
		com.intranet.mef.logicaldel.gestione.riunioni.service.CancelAmmConvLocalService cancelAmmConvLocalService) {
		this.cancelAmmConvLocalService = cancelAmmConvLocalService;
	}

	/**
	 * Returns the cancel amm conv persistence.
	 *
	 * @return the cancel amm conv persistence
	 */
	public CancelAmmConvPersistence getCancelAmmConvPersistence() {
		return cancelAmmConvPersistence;
	}

	/**
	 * Sets the cancel amm conv persistence.
	 *
	 * @param cancelAmmConvPersistence the cancel amm conv persistence
	 */
	public void setCancelAmmConvPersistence(
		CancelAmmConvPersistence cancelAmmConvPersistence) {
		this.cancelAmmConvPersistence = cancelAmmConvPersistence;
	}

	/**
	 * Returns the cancel luogo local service.
	 *
	 * @return the cancel luogo local service
	 */
	public CancelLuogoLocalService getCancelLuogoLocalService() {
		return cancelLuogoLocalService;
	}

	/**
	 * Sets the cancel luogo local service.
	 *
	 * @param cancelLuogoLocalService the cancel luogo local service
	 */
	public void setCancelLuogoLocalService(
		CancelLuogoLocalService cancelLuogoLocalService) {
		this.cancelLuogoLocalService = cancelLuogoLocalService;
	}

	/**
	 * Returns the cancel luogo persistence.
	 *
	 * @return the cancel luogo persistence
	 */
	public CancelLuogoPersistence getCancelLuogoPersistence() {
		return cancelLuogoPersistence;
	}

	/**
	 * Sets the cancel luogo persistence.
	 *
	 * @param cancelLuogoPersistence the cancel luogo persistence
	 */
	public void setCancelLuogoPersistence(
		CancelLuogoPersistence cancelLuogoPersistence) {
		this.cancelLuogoPersistence = cancelLuogoPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.intranet.mef.logicaldel.gestione.riunioni.model.CancelLuogo",
			cancelLuogoLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.intranet.mef.logicaldel.gestione.riunioni.model.CancelLuogo");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return CancelLuogoLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return CancelLuogo.class;
	}

	protected String getModelClassName() {
		return CancelLuogo.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = cancelLuogoPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.intranet.mef.logicaldel.gestione.riunioni.service.CancelAmmConvLocalService.class)
	protected com.intranet.mef.logicaldel.gestione.riunioni.service.CancelAmmConvLocalService cancelAmmConvLocalService;
	@BeanReference(type = CancelAmmConvPersistence.class)
	protected CancelAmmConvPersistence cancelAmmConvPersistence;
	@BeanReference(type = CancelLuogoLocalService.class)
	protected CancelLuogoLocalService cancelLuogoLocalService;
	@BeanReference(type = CancelLuogoPersistence.class)
	protected CancelLuogoPersistence cancelLuogoPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}