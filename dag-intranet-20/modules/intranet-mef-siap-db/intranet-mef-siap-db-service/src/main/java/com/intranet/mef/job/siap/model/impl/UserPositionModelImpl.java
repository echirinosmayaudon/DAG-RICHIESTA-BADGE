/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.job.siap.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.job.siap.model.UserPosition;
import com.intranet.mef.job.siap.model.UserPositionModel;
import com.intranet.mef.job.siap.model.UserPositionSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UserPosition service. Represents a row in the &quot;LF_POS_USER_CONFIGURATION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link UserPositionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserPositionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserPositionImpl
 * @see UserPosition
 * @see UserPositionModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class UserPositionModelImpl extends BaseModelImpl<UserPosition>
	implements UserPositionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user position model instance should use the {@link UserPosition} interface instead.
	 */
	public static final String TABLE_NAME = "LF_POS_USER_CONFIGURATION";
	public static final Object[][] TABLE_COLUMNS = {
			{ "INQUADRAMENTO", Types.VARCHAR },
			{ "RUOLO_POS_GIU", Types.VARCHAR },
			{ "RUOLO_POS_ECO", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("INQUADRAMENTO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RUOLO_POS_GIU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RUOLO_POS_ECO", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table LF_POS_USER_CONFIGURATION (INQUADRAMENTO VARCHAR(75) not null primary key,RUOLO_POS_GIU VARCHAR(75) null,RUOLO_POS_ECO VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LF_POS_USER_CONFIGURATION";
	public static final String ORDER_BY_JPQL = " ORDER BY userPosition.pos ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LF_POS_USER_CONFIGURATION.INQUADRAMENTO ASC";
	public static final String DATA_SOURCE = "stage";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.intranet.mef.job.siap.model.UserPosition"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.intranet.mef.job.siap.model.UserPosition"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UserPosition toModel(UserPositionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UserPosition model = new UserPositionImpl();

		model.setPos(soapModel.getPos());
		model.setRuoloGiuridico(soapModel.getRuoloGiuridico());
		model.setRuoloEconomico(soapModel.getRuoloEconomico());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UserPosition> toModels(UserPositionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UserPosition> models = new ArrayList<UserPosition>(soapModels.length);

		for (UserPositionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.intranet.mef.service.util.PropsUtil.get(
				"lock.expiration.time.com.intranet.mef.job.siap.model.UserPosition"));

	public UserPositionModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _pos;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setPos(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _pos;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UserPosition.class;
	}

	@Override
	public String getModelClassName() {
		return UserPosition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("pos", getPos());
		attributes.put("ruoloGiuridico", getRuoloGiuridico());
		attributes.put("ruoloEconomico", getRuoloEconomico());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String pos = (String)attributes.get("pos");

		if (pos != null) {
			setPos(pos);
		}

		String ruoloGiuridico = (String)attributes.get("ruoloGiuridico");

		if (ruoloGiuridico != null) {
			setRuoloGiuridico(ruoloGiuridico);
		}

		String ruoloEconomico = (String)attributes.get("ruoloEconomico");

		if (ruoloEconomico != null) {
			setRuoloEconomico(ruoloEconomico);
		}
	}

	@JSON
	@Override
	public String getPos() {
		if (_pos == null) {
			return StringPool.BLANK;
		}
		else {
			return _pos;
		}
	}

	@Override
	public void setPos(String pos) {
		_pos = pos;
	}

	@JSON
	@Override
	public String getRuoloGiuridico() {
		if (_ruoloGiuridico == null) {
			return StringPool.BLANK;
		}
		else {
			return _ruoloGiuridico;
		}
	}

	@Override
	public void setRuoloGiuridico(String ruoloGiuridico) {
		_ruoloGiuridico = ruoloGiuridico;
	}

	@JSON
	@Override
	public String getRuoloEconomico() {
		if (_ruoloEconomico == null) {
			return StringPool.BLANK;
		}
		else {
			return _ruoloEconomico;
		}
	}

	@Override
	public void setRuoloEconomico(String ruoloEconomico) {
		_ruoloEconomico = ruoloEconomico;
	}

	@Override
	public UserPosition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserPosition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserPositionImpl userPositionImpl = new UserPositionImpl();

		userPositionImpl.setPos(getPos());
		userPositionImpl.setRuoloGiuridico(getRuoloGiuridico());
		userPositionImpl.setRuoloEconomico(getRuoloEconomico());

		userPositionImpl.resetOriginalValues();

		return userPositionImpl;
	}

	@Override
	public int compareTo(UserPosition userPosition) {
		String primaryKey = userPosition.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserPosition)) {
			return false;
		}

		UserPosition userPosition = (UserPosition)obj;

		String primaryKey = userPosition.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UserPosition> toCacheModel() {
		UserPositionCacheModel userPositionCacheModel = new UserPositionCacheModel();

		userPositionCacheModel.pos = getPos();

		String pos = userPositionCacheModel.pos;

		if ((pos != null) && (pos.length() == 0)) {
			userPositionCacheModel.pos = null;
		}

		userPositionCacheModel.ruoloGiuridico = getRuoloGiuridico();

		String ruoloGiuridico = userPositionCacheModel.ruoloGiuridico;

		if ((ruoloGiuridico != null) && (ruoloGiuridico.length() == 0)) {
			userPositionCacheModel.ruoloGiuridico = null;
		}

		userPositionCacheModel.ruoloEconomico = getRuoloEconomico();

		String ruoloEconomico = userPositionCacheModel.ruoloEconomico;

		if ((ruoloEconomico != null) && (ruoloEconomico.length() == 0)) {
			userPositionCacheModel.ruoloEconomico = null;
		}

		return userPositionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{pos=");
		sb.append(getPos());
		sb.append(", ruoloGiuridico=");
		sb.append(getRuoloGiuridico());
		sb.append(", ruoloEconomico=");
		sb.append(getRuoloEconomico());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.intranet.mef.job.siap.model.UserPosition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>pos</column-name><column-value><![CDATA[");
		sb.append(getPos());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ruoloGiuridico</column-name><column-value><![CDATA[");
		sb.append(getRuoloGiuridico());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ruoloEconomico</column-name><column-value><![CDATA[");
		sb.append(getRuoloEconomico());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = UserPosition.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			UserPosition.class
		};
	private String _pos;
	private String _ruoloGiuridico;
	private String _ruoloEconomico;
	private UserPosition _escapedModel;
}