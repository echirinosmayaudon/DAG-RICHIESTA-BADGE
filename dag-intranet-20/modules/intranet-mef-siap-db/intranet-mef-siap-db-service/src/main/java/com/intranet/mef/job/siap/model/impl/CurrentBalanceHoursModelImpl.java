/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.job.siap.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.job.siap.model.CurrentBalanceHours;
import com.intranet.mef.job.siap.model.CurrentBalanceHoursModel;
import com.intranet.mef.job.siap.model.CurrentBalanceHoursSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CurrentBalanceHours service. Represents a row in the &quot;LF_VIEW_SALDO_ORE_COR&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CurrentBalanceHoursModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CurrentBalanceHoursImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CurrentBalanceHoursImpl
 * @see CurrentBalanceHours
 * @see CurrentBalanceHoursModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CurrentBalanceHoursModelImpl extends BaseModelImpl<CurrentBalanceHours>
	implements CurrentBalanceHoursModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a current balance hours model instance should use the {@link CurrentBalanceHours} interface instead.
	 */
	public static final String TABLE_NAME = "LF_VIEW_SALDO_ORE_COR";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PERSON_ID", Types.BIGINT },
			{ "SALDO_ORE_CORRENTE_DATA", Types.TIMESTAMP },
			{ "SALDO_ORE_CORRENTE_DATA_ORE", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("PERSON_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("SALDO_ORE_CORRENTE_DATA", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SALDO_ORE_CORRENTE_DATA_ORE", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table LF_VIEW_SALDO_ORE_COR (PERSON_ID LONG not null primary key,SALDO_ORE_CORRENTE_DATA DATE null,SALDO_ORE_CORRENTE_DATA_ORE INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table LF_VIEW_SALDO_ORE_COR";
	public static final String ORDER_BY_JPQL = " ORDER BY currentBalanceHours.personId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LF_VIEW_SALDO_ORE_COR.PERSON_ID ASC";
	public static final String DATA_SOURCE = "stage";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.intranet.mef.job.siap.model.CurrentBalanceHours"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.intranet.mef.job.siap.model.CurrentBalanceHours"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CurrentBalanceHours toModel(CurrentBalanceHoursSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CurrentBalanceHours model = new CurrentBalanceHoursImpl();

		model.setPersonId(soapModel.getPersonId());
		model.setBalanceHoursCurDate(soapModel.getBalanceHoursCurDate());
		model.setBalanceHours(soapModel.getBalanceHours());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CurrentBalanceHours> toModels(
		CurrentBalanceHoursSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CurrentBalanceHours> models = new ArrayList<CurrentBalanceHours>(soapModels.length);

		for (CurrentBalanceHoursSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.intranet.mef.service.util.PropsUtil.get(
				"lock.expiration.time.com.intranet.mef.job.siap.model.CurrentBalanceHours"));

	public CurrentBalanceHoursModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _personId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPersonId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _personId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CurrentBalanceHours.class;
	}

	@Override
	public String getModelClassName() {
		return CurrentBalanceHours.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("personId", getPersonId());
		attributes.put("balanceHoursCurDate", getBalanceHoursCurDate());
		attributes.put("balanceHours", getBalanceHours());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long personId = (Long)attributes.get("personId");

		if (personId != null) {
			setPersonId(personId);
		}

		Date balanceHoursCurDate = (Date)attributes.get("balanceHoursCurDate");

		if (balanceHoursCurDate != null) {
			setBalanceHoursCurDate(balanceHoursCurDate);
		}

		Integer balanceHours = (Integer)attributes.get("balanceHours");

		if (balanceHours != null) {
			setBalanceHours(balanceHours);
		}
	}

	@JSON
	@Override
	public long getPersonId() {
		return _personId;
	}

	@Override
	public void setPersonId(long personId) {
		_personId = personId;
	}

	@JSON
	@Override
	public Date getBalanceHoursCurDate() {
		return _balanceHoursCurDate;
	}

	@Override
	public void setBalanceHoursCurDate(Date balanceHoursCurDate) {
		_balanceHoursCurDate = balanceHoursCurDate;
	}

	@JSON
	@Override
	public int getBalanceHours() {
		return _balanceHours;
	}

	@Override
	public void setBalanceHours(int balanceHours) {
		_balanceHours = balanceHours;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CurrentBalanceHours.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CurrentBalanceHours toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CurrentBalanceHours)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CurrentBalanceHoursImpl currentBalanceHoursImpl = new CurrentBalanceHoursImpl();

		currentBalanceHoursImpl.setPersonId(getPersonId());
		currentBalanceHoursImpl.setBalanceHoursCurDate(getBalanceHoursCurDate());
		currentBalanceHoursImpl.setBalanceHours(getBalanceHours());

		currentBalanceHoursImpl.resetOriginalValues();

		return currentBalanceHoursImpl;
	}

	@Override
	public int compareTo(CurrentBalanceHours currentBalanceHours) {
		long primaryKey = currentBalanceHours.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CurrentBalanceHours)) {
			return false;
		}

		CurrentBalanceHours currentBalanceHours = (CurrentBalanceHours)obj;

		long primaryKey = currentBalanceHours.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CurrentBalanceHours> toCacheModel() {
		CurrentBalanceHoursCacheModel currentBalanceHoursCacheModel = new CurrentBalanceHoursCacheModel();

		currentBalanceHoursCacheModel.personId = getPersonId();

		Date balanceHoursCurDate = getBalanceHoursCurDate();

		if (balanceHoursCurDate != null) {
			currentBalanceHoursCacheModel.balanceHoursCurDate = balanceHoursCurDate.getTime();
		}
		else {
			currentBalanceHoursCacheModel.balanceHoursCurDate = Long.MIN_VALUE;
		}

		currentBalanceHoursCacheModel.balanceHours = getBalanceHours();

		return currentBalanceHoursCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{personId=");
		sb.append(getPersonId());
		sb.append(", balanceHoursCurDate=");
		sb.append(getBalanceHoursCurDate());
		sb.append(", balanceHours=");
		sb.append(getBalanceHours());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.intranet.mef.job.siap.model.CurrentBalanceHours");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>personId</column-name><column-value><![CDATA[");
		sb.append(getPersonId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>balanceHoursCurDate</column-name><column-value><![CDATA[");
		sb.append(getBalanceHoursCurDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>balanceHours</column-name><column-value><![CDATA[");
		sb.append(getBalanceHours());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CurrentBalanceHours.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CurrentBalanceHours.class
		};
	private long _personId;
	private Date _balanceHoursCurDate;
	private int _balanceHours;
	private CurrentBalanceHours _escapedModel;
}