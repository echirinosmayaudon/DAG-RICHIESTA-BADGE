/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.job.siap.service.base;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.job.siap.model.Festivity;
import com.intranet.mef.job.siap.service.FestivityLocalService;
import com.intranet.mef.job.siap.service.persistence.CityPersistence;
import com.intranet.mef.job.siap.service.persistence.ClassificationLevelPersistence;
import com.intranet.mef.job.siap.service.persistence.CurrentBalanceHoursPersistence;
import com.intranet.mef.job.siap.service.persistence.FestivityPersistence;
import com.intranet.mef.job.siap.service.persistence.LocationPersistence;
import com.intranet.mef.job.siap.service.persistence.ManagerOfficesBindPersistence;
import com.intranet.mef.job.siap.service.persistence.MealTicketPersistence;
import com.intranet.mef.job.siap.service.persistence.OrganizationChartPersistence;
import com.intranet.mef.job.siap.service.persistence.OvertimeBalacePrevMonthPersistence;
import com.intranet.mef.job.siap.service.persistence.OvertimeBalancePersistence;
import com.intranet.mef.job.siap.service.persistence.OvertimePrevMonthPayOffPersistence;
import com.intranet.mef.job.siap.service.persistence.PersonalAbsencePersistence;
import com.intranet.mef.job.siap.service.persistence.ProfilePicturePersistence;
import com.intranet.mef.job.siap.service.persistence.PunchingPersistence;
import com.intranet.mef.job.siap.service.persistence.UserFrontierBindFinder;
import com.intranet.mef.job.siap.service.persistence.UserFrontierBindPersistence;
import com.intranet.mef.job.siap.service.persistence.UserPositionPersistence;
import com.intranet.mef.job.siap.service.persistence.VacationPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the festivity local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.intranet.mef.job.siap.service.impl.FestivityLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.intranet.mef.job.siap.service.impl.FestivityLocalServiceImpl
 * @see com.intranet.mef.job.siap.service.FestivityLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class FestivityLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements FestivityLocalService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.intranet.mef.job.siap.service.FestivityLocalServiceUtil} to access the festivity local service.
	 */

	/**
	 * Adds the festivity to the database. Also notifies the appropriate model listeners.
	 *
	 * @param festivity the festivity
	 * @return the festivity that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Festivity addFestivity(Festivity festivity) {
		festivity.setNew(true);

		return festivityPersistence.update(festivity);
	}

	/**
	 * Creates a new festivity with the primary key. Does not add the festivity to the database.
	 *
	 * @param personId the primary key for the new festivity
	 * @return the new festivity
	 */
	@Override
	public Festivity createFestivity(long personId) {
		return festivityPersistence.create(personId);
	}

	/**
	 * Deletes the festivity with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param personId the primary key of the festivity
	 * @return the festivity that was removed
	 * @throws PortalException if a festivity with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Festivity deleteFestivity(long personId) throws PortalException {
		return festivityPersistence.remove(personId);
	}

	/**
	 * Deletes the festivity from the database. Also notifies the appropriate model listeners.
	 *
	 * @param festivity the festivity
	 * @return the festivity that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Festivity deleteFestivity(Festivity festivity) {
		return festivityPersistence.remove(festivity);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(Festivity.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return festivityPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.job.siap.model.impl.FestivityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return festivityPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.job.siap.model.impl.FestivityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return festivityPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return festivityPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return festivityPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public Festivity fetchFestivity(long personId) {
		return festivityPersistence.fetchByPrimaryKey(personId);
	}

	/**
	 * Returns the festivity with the primary key.
	 *
	 * @param personId the primary key of the festivity
	 * @return the festivity
	 * @throws PortalException if a festivity with the primary key could not be found
	 */
	@Override
	public Festivity getFestivity(long personId) throws PortalException {
		return festivityPersistence.findByPrimaryKey(personId);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(festivityLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(Festivity.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("personId");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(festivityLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(Festivity.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("personId");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(festivityLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(Festivity.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("personId");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return festivityLocalService.deleteFestivity((Festivity)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return festivityPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the festivities.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.intranet.mef.job.siap.model.impl.FestivityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of festivities
	 * @param end the upper bound of the range of festivities (not inclusive)
	 * @return the range of festivities
	 */
	@Override
	public List<Festivity> getFestivities(int start, int end) {
		return festivityPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of festivities.
	 *
	 * @return the number of festivities
	 */
	@Override
	public int getFestivitiesCount() {
		return festivityPersistence.countAll();
	}

	/**
	 * Updates the festivity in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param festivity the festivity
	 * @return the festivity that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Festivity updateFestivity(Festivity festivity) {
		return festivityPersistence.update(festivity);
	}

	/**
	 * Returns the city local service.
	 *
	 * @return the city local service
	 */
	public com.intranet.mef.job.siap.service.CityLocalService getCityLocalService() {
		return cityLocalService;
	}

	/**
	 * Sets the city local service.
	 *
	 * @param cityLocalService the city local service
	 */
	public void setCityLocalService(
		com.intranet.mef.job.siap.service.CityLocalService cityLocalService) {
		this.cityLocalService = cityLocalService;
	}

	/**
	 * Returns the city persistence.
	 *
	 * @return the city persistence
	 */
	public CityPersistence getCityPersistence() {
		return cityPersistence;
	}

	/**
	 * Sets the city persistence.
	 *
	 * @param cityPersistence the city persistence
	 */
	public void setCityPersistence(CityPersistence cityPersistence) {
		this.cityPersistence = cityPersistence;
	}

	/**
	 * Returns the classification level local service.
	 *
	 * @return the classification level local service
	 */
	public com.intranet.mef.job.siap.service.ClassificationLevelLocalService getClassificationLevelLocalService() {
		return classificationLevelLocalService;
	}

	/**
	 * Sets the classification level local service.
	 *
	 * @param classificationLevelLocalService the classification level local service
	 */
	public void setClassificationLevelLocalService(
		com.intranet.mef.job.siap.service.ClassificationLevelLocalService classificationLevelLocalService) {
		this.classificationLevelLocalService = classificationLevelLocalService;
	}

	/**
	 * Returns the classification level persistence.
	 *
	 * @return the classification level persistence
	 */
	public ClassificationLevelPersistence getClassificationLevelPersistence() {
		return classificationLevelPersistence;
	}

	/**
	 * Sets the classification level persistence.
	 *
	 * @param classificationLevelPersistence the classification level persistence
	 */
	public void setClassificationLevelPersistence(
		ClassificationLevelPersistence classificationLevelPersistence) {
		this.classificationLevelPersistence = classificationLevelPersistence;
	}

	/**
	 * Returns the current balance hours local service.
	 *
	 * @return the current balance hours local service
	 */
	public com.intranet.mef.job.siap.service.CurrentBalanceHoursLocalService getCurrentBalanceHoursLocalService() {
		return currentBalanceHoursLocalService;
	}

	/**
	 * Sets the current balance hours local service.
	 *
	 * @param currentBalanceHoursLocalService the current balance hours local service
	 */
	public void setCurrentBalanceHoursLocalService(
		com.intranet.mef.job.siap.service.CurrentBalanceHoursLocalService currentBalanceHoursLocalService) {
		this.currentBalanceHoursLocalService = currentBalanceHoursLocalService;
	}

	/**
	 * Returns the current balance hours persistence.
	 *
	 * @return the current balance hours persistence
	 */
	public CurrentBalanceHoursPersistence getCurrentBalanceHoursPersistence() {
		return currentBalanceHoursPersistence;
	}

	/**
	 * Sets the current balance hours persistence.
	 *
	 * @param currentBalanceHoursPersistence the current balance hours persistence
	 */
	public void setCurrentBalanceHoursPersistence(
		CurrentBalanceHoursPersistence currentBalanceHoursPersistence) {
		this.currentBalanceHoursPersistence = currentBalanceHoursPersistence;
	}

	/**
	 * Returns the festivity local service.
	 *
	 * @return the festivity local service
	 */
	public FestivityLocalService getFestivityLocalService() {
		return festivityLocalService;
	}

	/**
	 * Sets the festivity local service.
	 *
	 * @param festivityLocalService the festivity local service
	 */
	public void setFestivityLocalService(
		FestivityLocalService festivityLocalService) {
		this.festivityLocalService = festivityLocalService;
	}

	/**
	 * Returns the festivity persistence.
	 *
	 * @return the festivity persistence
	 */
	public FestivityPersistence getFestivityPersistence() {
		return festivityPersistence;
	}

	/**
	 * Sets the festivity persistence.
	 *
	 * @param festivityPersistence the festivity persistence
	 */
	public void setFestivityPersistence(
		FestivityPersistence festivityPersistence) {
		this.festivityPersistence = festivityPersistence;
	}

	/**
	 * Returns the location local service.
	 *
	 * @return the location local service
	 */
	public com.intranet.mef.job.siap.service.LocationLocalService getLocationLocalService() {
		return locationLocalService;
	}

	/**
	 * Sets the location local service.
	 *
	 * @param locationLocalService the location local service
	 */
	public void setLocationLocalService(
		com.intranet.mef.job.siap.service.LocationLocalService locationLocalService) {
		this.locationLocalService = locationLocalService;
	}

	/**
	 * Returns the location persistence.
	 *
	 * @return the location persistence
	 */
	public LocationPersistence getLocationPersistence() {
		return locationPersistence;
	}

	/**
	 * Sets the location persistence.
	 *
	 * @param locationPersistence the location persistence
	 */
	public void setLocationPersistence(LocationPersistence locationPersistence) {
		this.locationPersistence = locationPersistence;
	}

	/**
	 * Returns the manager offices bind local service.
	 *
	 * @return the manager offices bind local service
	 */
	public com.intranet.mef.job.siap.service.ManagerOfficesBindLocalService getManagerOfficesBindLocalService() {
		return managerOfficesBindLocalService;
	}

	/**
	 * Sets the manager offices bind local service.
	 *
	 * @param managerOfficesBindLocalService the manager offices bind local service
	 */
	public void setManagerOfficesBindLocalService(
		com.intranet.mef.job.siap.service.ManagerOfficesBindLocalService managerOfficesBindLocalService) {
		this.managerOfficesBindLocalService = managerOfficesBindLocalService;
	}

	/**
	 * Returns the manager offices bind persistence.
	 *
	 * @return the manager offices bind persistence
	 */
	public ManagerOfficesBindPersistence getManagerOfficesBindPersistence() {
		return managerOfficesBindPersistence;
	}

	/**
	 * Sets the manager offices bind persistence.
	 *
	 * @param managerOfficesBindPersistence the manager offices bind persistence
	 */
	public void setManagerOfficesBindPersistence(
		ManagerOfficesBindPersistence managerOfficesBindPersistence) {
		this.managerOfficesBindPersistence = managerOfficesBindPersistence;
	}

	/**
	 * Returns the meal ticket local service.
	 *
	 * @return the meal ticket local service
	 */
	public com.intranet.mef.job.siap.service.MealTicketLocalService getMealTicketLocalService() {
		return mealTicketLocalService;
	}

	/**
	 * Sets the meal ticket local service.
	 *
	 * @param mealTicketLocalService the meal ticket local service
	 */
	public void setMealTicketLocalService(
		com.intranet.mef.job.siap.service.MealTicketLocalService mealTicketLocalService) {
		this.mealTicketLocalService = mealTicketLocalService;
	}

	/**
	 * Returns the meal ticket persistence.
	 *
	 * @return the meal ticket persistence
	 */
	public MealTicketPersistence getMealTicketPersistence() {
		return mealTicketPersistence;
	}

	/**
	 * Sets the meal ticket persistence.
	 *
	 * @param mealTicketPersistence the meal ticket persistence
	 */
	public void setMealTicketPersistence(
		MealTicketPersistence mealTicketPersistence) {
		this.mealTicketPersistence = mealTicketPersistence;
	}

	/**
	 * Returns the organization chart local service.
	 *
	 * @return the organization chart local service
	 */
	public com.intranet.mef.job.siap.service.OrganizationChartLocalService getOrganizationChartLocalService() {
		return organizationChartLocalService;
	}

	/**
	 * Sets the organization chart local service.
	 *
	 * @param organizationChartLocalService the organization chart local service
	 */
	public void setOrganizationChartLocalService(
		com.intranet.mef.job.siap.service.OrganizationChartLocalService organizationChartLocalService) {
		this.organizationChartLocalService = organizationChartLocalService;
	}

	/**
	 * Returns the organization chart persistence.
	 *
	 * @return the organization chart persistence
	 */
	public OrganizationChartPersistence getOrganizationChartPersistence() {
		return organizationChartPersistence;
	}

	/**
	 * Sets the organization chart persistence.
	 *
	 * @param organizationChartPersistence the organization chart persistence
	 */
	public void setOrganizationChartPersistence(
		OrganizationChartPersistence organizationChartPersistence) {
		this.organizationChartPersistence = organizationChartPersistence;
	}

	/**
	 * Returns the overtime balace prev month local service.
	 *
	 * @return the overtime balace prev month local service
	 */
	public com.intranet.mef.job.siap.service.OvertimeBalacePrevMonthLocalService getOvertimeBalacePrevMonthLocalService() {
		return overtimeBalacePrevMonthLocalService;
	}

	/**
	 * Sets the overtime balace prev month local service.
	 *
	 * @param overtimeBalacePrevMonthLocalService the overtime balace prev month local service
	 */
	public void setOvertimeBalacePrevMonthLocalService(
		com.intranet.mef.job.siap.service.OvertimeBalacePrevMonthLocalService overtimeBalacePrevMonthLocalService) {
		this.overtimeBalacePrevMonthLocalService = overtimeBalacePrevMonthLocalService;
	}

	/**
	 * Returns the overtime balace prev month persistence.
	 *
	 * @return the overtime balace prev month persistence
	 */
	public OvertimeBalacePrevMonthPersistence getOvertimeBalacePrevMonthPersistence() {
		return overtimeBalacePrevMonthPersistence;
	}

	/**
	 * Sets the overtime balace prev month persistence.
	 *
	 * @param overtimeBalacePrevMonthPersistence the overtime balace prev month persistence
	 */
	public void setOvertimeBalacePrevMonthPersistence(
		OvertimeBalacePrevMonthPersistence overtimeBalacePrevMonthPersistence) {
		this.overtimeBalacePrevMonthPersistence = overtimeBalacePrevMonthPersistence;
	}

	/**
	 * Returns the overtime balance local service.
	 *
	 * @return the overtime balance local service
	 */
	public com.intranet.mef.job.siap.service.OvertimeBalanceLocalService getOvertimeBalanceLocalService() {
		return overtimeBalanceLocalService;
	}

	/**
	 * Sets the overtime balance local service.
	 *
	 * @param overtimeBalanceLocalService the overtime balance local service
	 */
	public void setOvertimeBalanceLocalService(
		com.intranet.mef.job.siap.service.OvertimeBalanceLocalService overtimeBalanceLocalService) {
		this.overtimeBalanceLocalService = overtimeBalanceLocalService;
	}

	/**
	 * Returns the overtime balance persistence.
	 *
	 * @return the overtime balance persistence
	 */
	public OvertimeBalancePersistence getOvertimeBalancePersistence() {
		return overtimeBalancePersistence;
	}

	/**
	 * Sets the overtime balance persistence.
	 *
	 * @param overtimeBalancePersistence the overtime balance persistence
	 */
	public void setOvertimeBalancePersistence(
		OvertimeBalancePersistence overtimeBalancePersistence) {
		this.overtimeBalancePersistence = overtimeBalancePersistence;
	}

	/**
	 * Returns the overtime prev month pay off local service.
	 *
	 * @return the overtime prev month pay off local service
	 */
	public com.intranet.mef.job.siap.service.OvertimePrevMonthPayOffLocalService getOvertimePrevMonthPayOffLocalService() {
		return overtimePrevMonthPayOffLocalService;
	}

	/**
	 * Sets the overtime prev month pay off local service.
	 *
	 * @param overtimePrevMonthPayOffLocalService the overtime prev month pay off local service
	 */
	public void setOvertimePrevMonthPayOffLocalService(
		com.intranet.mef.job.siap.service.OvertimePrevMonthPayOffLocalService overtimePrevMonthPayOffLocalService) {
		this.overtimePrevMonthPayOffLocalService = overtimePrevMonthPayOffLocalService;
	}

	/**
	 * Returns the overtime prev month pay off persistence.
	 *
	 * @return the overtime prev month pay off persistence
	 */
	public OvertimePrevMonthPayOffPersistence getOvertimePrevMonthPayOffPersistence() {
		return overtimePrevMonthPayOffPersistence;
	}

	/**
	 * Sets the overtime prev month pay off persistence.
	 *
	 * @param overtimePrevMonthPayOffPersistence the overtime prev month pay off persistence
	 */
	public void setOvertimePrevMonthPayOffPersistence(
		OvertimePrevMonthPayOffPersistence overtimePrevMonthPayOffPersistence) {
		this.overtimePrevMonthPayOffPersistence = overtimePrevMonthPayOffPersistence;
	}

	/**
	 * Returns the personal absence local service.
	 *
	 * @return the personal absence local service
	 */
	public com.intranet.mef.job.siap.service.PersonalAbsenceLocalService getPersonalAbsenceLocalService() {
		return personalAbsenceLocalService;
	}

	/**
	 * Sets the personal absence local service.
	 *
	 * @param personalAbsenceLocalService the personal absence local service
	 */
	public void setPersonalAbsenceLocalService(
		com.intranet.mef.job.siap.service.PersonalAbsenceLocalService personalAbsenceLocalService) {
		this.personalAbsenceLocalService = personalAbsenceLocalService;
	}

	/**
	 * Returns the personal absence persistence.
	 *
	 * @return the personal absence persistence
	 */
	public PersonalAbsencePersistence getPersonalAbsencePersistence() {
		return personalAbsencePersistence;
	}

	/**
	 * Sets the personal absence persistence.
	 *
	 * @param personalAbsencePersistence the personal absence persistence
	 */
	public void setPersonalAbsencePersistence(
		PersonalAbsencePersistence personalAbsencePersistence) {
		this.personalAbsencePersistence = personalAbsencePersistence;
	}

	/**
	 * Returns the profile picture local service.
	 *
	 * @return the profile picture local service
	 */
	public com.intranet.mef.job.siap.service.ProfilePictureLocalService getProfilePictureLocalService() {
		return profilePictureLocalService;
	}

	/**
	 * Sets the profile picture local service.
	 *
	 * @param profilePictureLocalService the profile picture local service
	 */
	public void setProfilePictureLocalService(
		com.intranet.mef.job.siap.service.ProfilePictureLocalService profilePictureLocalService) {
		this.profilePictureLocalService = profilePictureLocalService;
	}

	/**
	 * Returns the profile picture persistence.
	 *
	 * @return the profile picture persistence
	 */
	public ProfilePicturePersistence getProfilePicturePersistence() {
		return profilePicturePersistence;
	}

	/**
	 * Sets the profile picture persistence.
	 *
	 * @param profilePicturePersistence the profile picture persistence
	 */
	public void setProfilePicturePersistence(
		ProfilePicturePersistence profilePicturePersistence) {
		this.profilePicturePersistence = profilePicturePersistence;
	}

	/**
	 * Returns the punching local service.
	 *
	 * @return the punching local service
	 */
	public com.intranet.mef.job.siap.service.PunchingLocalService getPunchingLocalService() {
		return punchingLocalService;
	}

	/**
	 * Sets the punching local service.
	 *
	 * @param punchingLocalService the punching local service
	 */
	public void setPunchingLocalService(
		com.intranet.mef.job.siap.service.PunchingLocalService punchingLocalService) {
		this.punchingLocalService = punchingLocalService;
	}

	/**
	 * Returns the punching persistence.
	 *
	 * @return the punching persistence
	 */
	public PunchingPersistence getPunchingPersistence() {
		return punchingPersistence;
	}

	/**
	 * Sets the punching persistence.
	 *
	 * @param punchingPersistence the punching persistence
	 */
	public void setPunchingPersistence(PunchingPersistence punchingPersistence) {
		this.punchingPersistence = punchingPersistence;
	}

	/**
	 * Returns the user frontier bind local service.
	 *
	 * @return the user frontier bind local service
	 */
	public com.intranet.mef.job.siap.service.UserFrontierBindLocalService getUserFrontierBindLocalService() {
		return userFrontierBindLocalService;
	}

	/**
	 * Sets the user frontier bind local service.
	 *
	 * @param userFrontierBindLocalService the user frontier bind local service
	 */
	public void setUserFrontierBindLocalService(
		com.intranet.mef.job.siap.service.UserFrontierBindLocalService userFrontierBindLocalService) {
		this.userFrontierBindLocalService = userFrontierBindLocalService;
	}

	/**
	 * Returns the user frontier bind persistence.
	 *
	 * @return the user frontier bind persistence
	 */
	public UserFrontierBindPersistence getUserFrontierBindPersistence() {
		return userFrontierBindPersistence;
	}

	/**
	 * Sets the user frontier bind persistence.
	 *
	 * @param userFrontierBindPersistence the user frontier bind persistence
	 */
	public void setUserFrontierBindPersistence(
		UserFrontierBindPersistence userFrontierBindPersistence) {
		this.userFrontierBindPersistence = userFrontierBindPersistence;
	}

	/**
	 * Returns the user frontier bind finder.
	 *
	 * @return the user frontier bind finder
	 */
	public UserFrontierBindFinder getUserFrontierBindFinder() {
		return userFrontierBindFinder;
	}

	/**
	 * Sets the user frontier bind finder.
	 *
	 * @param userFrontierBindFinder the user frontier bind finder
	 */
	public void setUserFrontierBindFinder(
		UserFrontierBindFinder userFrontierBindFinder) {
		this.userFrontierBindFinder = userFrontierBindFinder;
	}

	/**
	 * Returns the user position local service.
	 *
	 * @return the user position local service
	 */
	public com.intranet.mef.job.siap.service.UserPositionLocalService getUserPositionLocalService() {
		return userPositionLocalService;
	}

	/**
	 * Sets the user position local service.
	 *
	 * @param userPositionLocalService the user position local service
	 */
	public void setUserPositionLocalService(
		com.intranet.mef.job.siap.service.UserPositionLocalService userPositionLocalService) {
		this.userPositionLocalService = userPositionLocalService;
	}

	/**
	 * Returns the user position persistence.
	 *
	 * @return the user position persistence
	 */
	public UserPositionPersistence getUserPositionPersistence() {
		return userPositionPersistence;
	}

	/**
	 * Sets the user position persistence.
	 *
	 * @param userPositionPersistence the user position persistence
	 */
	public void setUserPositionPersistence(
		UserPositionPersistence userPositionPersistence) {
		this.userPositionPersistence = userPositionPersistence;
	}

	/**
	 * Returns the vacation local service.
	 *
	 * @return the vacation local service
	 */
	public com.intranet.mef.job.siap.service.VacationLocalService getVacationLocalService() {
		return vacationLocalService;
	}

	/**
	 * Sets the vacation local service.
	 *
	 * @param vacationLocalService the vacation local service
	 */
	public void setVacationLocalService(
		com.intranet.mef.job.siap.service.VacationLocalService vacationLocalService) {
		this.vacationLocalService = vacationLocalService;
	}

	/**
	 * Returns the vacation persistence.
	 *
	 * @return the vacation persistence
	 */
	public VacationPersistence getVacationPersistence() {
		return vacationPersistence;
	}

	/**
	 * Sets the vacation persistence.
	 *
	 * @param vacationPersistence the vacation persistence
	 */
	public void setVacationPersistence(VacationPersistence vacationPersistence) {
		this.vacationPersistence = vacationPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.intranet.mef.job.siap.model.Festivity",
			festivityLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.intranet.mef.job.siap.model.Festivity");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return FestivityLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Festivity.class;
	}

	protected String getModelClassName() {
		return Festivity.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = festivityPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.intranet.mef.job.siap.service.CityLocalService.class)
	protected com.intranet.mef.job.siap.service.CityLocalService cityLocalService;
	@BeanReference(type = CityPersistence.class)
	protected CityPersistence cityPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.ClassificationLevelLocalService.class)
	protected com.intranet.mef.job.siap.service.ClassificationLevelLocalService classificationLevelLocalService;
	@BeanReference(type = ClassificationLevelPersistence.class)
	protected ClassificationLevelPersistence classificationLevelPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.CurrentBalanceHoursLocalService.class)
	protected com.intranet.mef.job.siap.service.CurrentBalanceHoursLocalService currentBalanceHoursLocalService;
	@BeanReference(type = CurrentBalanceHoursPersistence.class)
	protected CurrentBalanceHoursPersistence currentBalanceHoursPersistence;
	@BeanReference(type = FestivityLocalService.class)
	protected FestivityLocalService festivityLocalService;
	@BeanReference(type = FestivityPersistence.class)
	protected FestivityPersistence festivityPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.LocationLocalService.class)
	protected com.intranet.mef.job.siap.service.LocationLocalService locationLocalService;
	@BeanReference(type = LocationPersistence.class)
	protected LocationPersistence locationPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.ManagerOfficesBindLocalService.class)
	protected com.intranet.mef.job.siap.service.ManagerOfficesBindLocalService managerOfficesBindLocalService;
	@BeanReference(type = ManagerOfficesBindPersistence.class)
	protected ManagerOfficesBindPersistence managerOfficesBindPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.MealTicketLocalService.class)
	protected com.intranet.mef.job.siap.service.MealTicketLocalService mealTicketLocalService;
	@BeanReference(type = MealTicketPersistence.class)
	protected MealTicketPersistence mealTicketPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.OrganizationChartLocalService.class)
	protected com.intranet.mef.job.siap.service.OrganizationChartLocalService organizationChartLocalService;
	@BeanReference(type = OrganizationChartPersistence.class)
	protected OrganizationChartPersistence organizationChartPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.OvertimeBalacePrevMonthLocalService.class)
	protected com.intranet.mef.job.siap.service.OvertimeBalacePrevMonthLocalService overtimeBalacePrevMonthLocalService;
	@BeanReference(type = OvertimeBalacePrevMonthPersistence.class)
	protected OvertimeBalacePrevMonthPersistence overtimeBalacePrevMonthPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.OvertimeBalanceLocalService.class)
	protected com.intranet.mef.job.siap.service.OvertimeBalanceLocalService overtimeBalanceLocalService;
	@BeanReference(type = OvertimeBalancePersistence.class)
	protected OvertimeBalancePersistence overtimeBalancePersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.OvertimePrevMonthPayOffLocalService.class)
	protected com.intranet.mef.job.siap.service.OvertimePrevMonthPayOffLocalService overtimePrevMonthPayOffLocalService;
	@BeanReference(type = OvertimePrevMonthPayOffPersistence.class)
	protected OvertimePrevMonthPayOffPersistence overtimePrevMonthPayOffPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.PersonalAbsenceLocalService.class)
	protected com.intranet.mef.job.siap.service.PersonalAbsenceLocalService personalAbsenceLocalService;
	@BeanReference(type = PersonalAbsencePersistence.class)
	protected PersonalAbsencePersistence personalAbsencePersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.ProfilePictureLocalService.class)
	protected com.intranet.mef.job.siap.service.ProfilePictureLocalService profilePictureLocalService;
	@BeanReference(type = ProfilePicturePersistence.class)
	protected ProfilePicturePersistence profilePicturePersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.PunchingLocalService.class)
	protected com.intranet.mef.job.siap.service.PunchingLocalService punchingLocalService;
	@BeanReference(type = PunchingPersistence.class)
	protected PunchingPersistence punchingPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.UserFrontierBindLocalService.class)
	protected com.intranet.mef.job.siap.service.UserFrontierBindLocalService userFrontierBindLocalService;
	@BeanReference(type = UserFrontierBindPersistence.class)
	protected UserFrontierBindPersistence userFrontierBindPersistence;
	@BeanReference(type = UserFrontierBindFinder.class)
	protected UserFrontierBindFinder userFrontierBindFinder;
	@BeanReference(type = com.intranet.mef.job.siap.service.UserPositionLocalService.class)
	protected com.intranet.mef.job.siap.service.UserPositionLocalService userPositionLocalService;
	@BeanReference(type = UserPositionPersistence.class)
	protected UserPositionPersistence userPositionPersistence;
	@BeanReference(type = com.intranet.mef.job.siap.service.VacationLocalService.class)
	protected com.intranet.mef.job.siap.service.VacationLocalService vacationLocalService;
	@BeanReference(type = VacationPersistence.class)
	protected VacationPersistence vacationPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}