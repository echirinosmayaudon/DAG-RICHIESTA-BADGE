/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.intranet.mef.job.siap.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.intranet.mef.job.siap.model.OrganizationChart;
import com.intranet.mef.job.siap.model.OrganizationChartModel;
import com.intranet.mef.job.siap.model.OrganizationChartSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the OrganizationChart service. Represents a row in the &quot;LF_ORGANIGRAMMA&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link OrganizationChartModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrganizationChartImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OrganizationChartImpl
 * @see OrganizationChart
 * @see OrganizationChartModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class OrganizationChartModelImpl extends BaseModelImpl<OrganizationChart>
	implements OrganizationChartModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a organization chart model instance should use the {@link OrganizationChart} interface instead.
	 */
	public static final String TABLE_NAME = "LF_ORGANIGRAMMA";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID_ORGANIGRAMMA", Types.BIGINT },
			{ "NAME", Types.VARCHAR },
			{ "LIVELLO", Types.INTEGER },
			{ "ID_ORGANIGRAMMA_PADRE", Types.BIGINT },
			{ "TIPO_UO", Types.VARCHAR },
			{ "LOCATION_ID", Types.BIGINT },
			{ "EMAIL_UFFICIO", Types.VARCHAR },
			{ "FAX_UFFICIO", Types.VARCHAR },
			{ "LEVEL_1", Types.BIGINT },
			{ "LEVEL_2", Types.BIGINT },
			{ "LEVEL_3", Types.BIGINT },
			{ "LEVEL_4", Types.BIGINT },
			{ "LEVEL_5", Types.BIGINT },
			{ "ACRONIMO", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID_ORGANIGRAMMA", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LIVELLO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ID_ORGANIGRAMMA_PADRE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("TIPO_UO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LOCATION_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("EMAIL_UFFICIO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FAX_UFFICIO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LEVEL_1", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("LEVEL_2", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("LEVEL_3", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("LEVEL_4", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("LEVEL_5", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ACRONIMO", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table LF_ORGANIGRAMMA (ID_ORGANIGRAMMA LONG not null primary key,NAME VARCHAR(75) null,LIVELLO INTEGER,ID_ORGANIGRAMMA_PADRE LONG,TIPO_UO VARCHAR(75) null,LOCATION_ID LONG,EMAIL_UFFICIO VARCHAR(75) null,FAX_UFFICIO VARCHAR(75) null,LEVEL_1 LONG,LEVEL_2 LONG,LEVEL_3 LONG,LEVEL_4 LONG,LEVEL_5 LONG,ACRONIMO VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LF_ORGANIGRAMMA";
	public static final String ORDER_BY_JPQL = " ORDER BY organizationChart.idOrgChart ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LF_ORGANIGRAMMA.ID_ORGANIGRAMMA ASC";
	public static final String DATA_SOURCE = "stage";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.intranet.mef.job.siap.model.OrganizationChart"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.intranet.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.intranet.mef.job.siap.model.OrganizationChart"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static OrganizationChart toModel(OrganizationChartSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		OrganizationChart model = new OrganizationChartImpl();

		model.setIdOrgChart(soapModel.getIdOrgChart());
		model.setName(soapModel.getName());
		model.setLevel(soapModel.getLevel());
		model.setIdParent(soapModel.getIdParent());
		model.setType(soapModel.getType());
		model.setLocationId(soapModel.getLocationId());
		model.setEmailOffice(soapModel.getEmailOffice());
		model.setFaxOffice(soapModel.getFaxOffice());
		model.setLevel1(soapModel.getLevel1());
		model.setLevel2(soapModel.getLevel2());
		model.setLevel3(soapModel.getLevel3());
		model.setLevel4(soapModel.getLevel4());
		model.setLevel5(soapModel.getLevel5());
		model.setAcronimo(soapModel.getAcronimo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<OrganizationChart> toModels(
		OrganizationChartSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<OrganizationChart> models = new ArrayList<OrganizationChart>(soapModels.length);

		for (OrganizationChartSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.intranet.mef.service.util.PropsUtil.get(
				"lock.expiration.time.com.intranet.mef.job.siap.model.OrganizationChart"));

	public OrganizationChartModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idOrgChart;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdOrgChart(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idOrgChart;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OrganizationChart.class;
	}

	@Override
	public String getModelClassName() {
		return OrganizationChart.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idOrgChart", getIdOrgChart());
		attributes.put("name", getName());
		attributes.put("level", getLevel());
		attributes.put("idParent", getIdParent());
		attributes.put("type", getType());
		attributes.put("locationId", getLocationId());
		attributes.put("emailOffice", getEmailOffice());
		attributes.put("faxOffice", getFaxOffice());
		attributes.put("level1", getLevel1());
		attributes.put("level2", getLevel2());
		attributes.put("level3", getLevel3());
		attributes.put("level4", getLevel4());
		attributes.put("level5", getLevel5());
		attributes.put("acronimo", getAcronimo());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idOrgChart = (Long)attributes.get("idOrgChart");

		if (idOrgChart != null) {
			setIdOrgChart(idOrgChart);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Integer level = (Integer)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		Long idParent = (Long)attributes.get("idParent");

		if (idParent != null) {
			setIdParent(idParent);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Long locationId = (Long)attributes.get("locationId");

		if (locationId != null) {
			setLocationId(locationId);
		}

		String emailOffice = (String)attributes.get("emailOffice");

		if (emailOffice != null) {
			setEmailOffice(emailOffice);
		}

		String faxOffice = (String)attributes.get("faxOffice");

		if (faxOffice != null) {
			setFaxOffice(faxOffice);
		}

		Long level1 = (Long)attributes.get("level1");

		if (level1 != null) {
			setLevel1(level1);
		}

		Long level2 = (Long)attributes.get("level2");

		if (level2 != null) {
			setLevel2(level2);
		}

		Long level3 = (Long)attributes.get("level3");

		if (level3 != null) {
			setLevel3(level3);
		}

		Long level4 = (Long)attributes.get("level4");

		if (level4 != null) {
			setLevel4(level4);
		}

		Long level5 = (Long)attributes.get("level5");

		if (level5 != null) {
			setLevel5(level5);
		}

		String acronimo = (String)attributes.get("acronimo");

		if (acronimo != null) {
			setAcronimo(acronimo);
		}
	}

	@JSON
	@Override
	public long getIdOrgChart() {
		return _idOrgChart;
	}

	@Override
	public void setIdOrgChart(long idOrgChart) {
		_idOrgChart = idOrgChart;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public int getLevel() {
		return _level;
	}

	@Override
	public void setLevel(int level) {
		_level = level;
	}

	@JSON
	@Override
	public long getIdParent() {
		return _idParent;
	}

	@Override
	public void setIdParent(long idParent) {
		_idParent = idParent;
	}

	@JSON
	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@JSON
	@Override
	public long getLocationId() {
		return _locationId;
	}

	@Override
	public void setLocationId(long locationId) {
		_locationId = locationId;
	}

	@JSON
	@Override
	public String getEmailOffice() {
		if (_emailOffice == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailOffice;
		}
	}

	@Override
	public void setEmailOffice(String emailOffice) {
		_emailOffice = emailOffice;
	}

	@JSON
	@Override
	public String getFaxOffice() {
		if (_faxOffice == null) {
			return StringPool.BLANK;
		}
		else {
			return _faxOffice;
		}
	}

	@Override
	public void setFaxOffice(String faxOffice) {
		_faxOffice = faxOffice;
	}

	@JSON
	@Override
	public long getLevel1() {
		return _level1;
	}

	@Override
	public void setLevel1(long level1) {
		_level1 = level1;
	}

	@JSON
	@Override
	public long getLevel2() {
		return _level2;
	}

	@Override
	public void setLevel2(long level2) {
		_level2 = level2;
	}

	@JSON
	@Override
	public long getLevel3() {
		return _level3;
	}

	@Override
	public void setLevel3(long level3) {
		_level3 = level3;
	}

	@JSON
	@Override
	public long getLevel4() {
		return _level4;
	}

	@Override
	public void setLevel4(long level4) {
		_level4 = level4;
	}

	@JSON
	@Override
	public long getLevel5() {
		return _level5;
	}

	@Override
	public void setLevel5(long level5) {
		_level5 = level5;
	}

	@JSON
	@Override
	public String getAcronimo() {
		if (_acronimo == null) {
			return StringPool.BLANK;
		}
		else {
			return _acronimo;
		}
	}

	@Override
	public void setAcronimo(String acronimo) {
		_acronimo = acronimo;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			OrganizationChart.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OrganizationChart toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OrganizationChart)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrganizationChartImpl organizationChartImpl = new OrganizationChartImpl();

		organizationChartImpl.setIdOrgChart(getIdOrgChart());
		organizationChartImpl.setName(getName());
		organizationChartImpl.setLevel(getLevel());
		organizationChartImpl.setIdParent(getIdParent());
		organizationChartImpl.setType(getType());
		organizationChartImpl.setLocationId(getLocationId());
		organizationChartImpl.setEmailOffice(getEmailOffice());
		organizationChartImpl.setFaxOffice(getFaxOffice());
		organizationChartImpl.setLevel1(getLevel1());
		organizationChartImpl.setLevel2(getLevel2());
		organizationChartImpl.setLevel3(getLevel3());
		organizationChartImpl.setLevel4(getLevel4());
		organizationChartImpl.setLevel5(getLevel5());
		organizationChartImpl.setAcronimo(getAcronimo());

		organizationChartImpl.resetOriginalValues();

		return organizationChartImpl;
	}

	@Override
	public int compareTo(OrganizationChart organizationChart) {
		long primaryKey = organizationChart.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OrganizationChart)) {
			return false;
		}

		OrganizationChart organizationChart = (OrganizationChart)obj;

		long primaryKey = organizationChart.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<OrganizationChart> toCacheModel() {
		OrganizationChartCacheModel organizationChartCacheModel = new OrganizationChartCacheModel();

		organizationChartCacheModel.idOrgChart = getIdOrgChart();

		organizationChartCacheModel.name = getName();

		String name = organizationChartCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			organizationChartCacheModel.name = null;
		}

		organizationChartCacheModel.level = getLevel();

		organizationChartCacheModel.idParent = getIdParent();

		organizationChartCacheModel.type = getType();

		String type = organizationChartCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			organizationChartCacheModel.type = null;
		}

		organizationChartCacheModel.locationId = getLocationId();

		organizationChartCacheModel.emailOffice = getEmailOffice();

		String emailOffice = organizationChartCacheModel.emailOffice;

		if ((emailOffice != null) && (emailOffice.length() == 0)) {
			organizationChartCacheModel.emailOffice = null;
		}

		organizationChartCacheModel.faxOffice = getFaxOffice();

		String faxOffice = organizationChartCacheModel.faxOffice;

		if ((faxOffice != null) && (faxOffice.length() == 0)) {
			organizationChartCacheModel.faxOffice = null;
		}

		organizationChartCacheModel.level1 = getLevel1();

		organizationChartCacheModel.level2 = getLevel2();

		organizationChartCacheModel.level3 = getLevel3();

		organizationChartCacheModel.level4 = getLevel4();

		organizationChartCacheModel.level5 = getLevel5();

		organizationChartCacheModel.acronimo = getAcronimo();

		String acronimo = organizationChartCacheModel.acronimo;

		if ((acronimo != null) && (acronimo.length() == 0)) {
			organizationChartCacheModel.acronimo = null;
		}

		return organizationChartCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{idOrgChart=");
		sb.append(getIdOrgChart());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", idParent=");
		sb.append(getIdParent());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", locationId=");
		sb.append(getLocationId());
		sb.append(", emailOffice=");
		sb.append(getEmailOffice());
		sb.append(", faxOffice=");
		sb.append(getFaxOffice());
		sb.append(", level1=");
		sb.append(getLevel1());
		sb.append(", level2=");
		sb.append(getLevel2());
		sb.append(", level3=");
		sb.append(getLevel3());
		sb.append(", level4=");
		sb.append(getLevel4());
		sb.append(", level5=");
		sb.append(getLevel5());
		sb.append(", acronimo=");
		sb.append(getAcronimo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.intranet.mef.job.siap.model.OrganizationChart");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idOrgChart</column-name><column-value><![CDATA[");
		sb.append(getIdOrgChart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idParent</column-name><column-value><![CDATA[");
		sb.append(getIdParent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>locationId</column-name><column-value><![CDATA[");
		sb.append(getLocationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailOffice</column-name><column-value><![CDATA[");
		sb.append(getEmailOffice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>faxOffice</column-name><column-value><![CDATA[");
		sb.append(getFaxOffice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level1</column-name><column-value><![CDATA[");
		sb.append(getLevel1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level2</column-name><column-value><![CDATA[");
		sb.append(getLevel2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level3</column-name><column-value><![CDATA[");
		sb.append(getLevel3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level4</column-name><column-value><![CDATA[");
		sb.append(getLevel4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level5</column-name><column-value><![CDATA[");
		sb.append(getLevel5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acronimo</column-name><column-value><![CDATA[");
		sb.append(getAcronimo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = OrganizationChart.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			OrganizationChart.class
		};
	private long _idOrgChart;
	private String _name;
	private int _level;
	private long _idParent;
	private String _type;
	private long _locationId;
	private String _emailOffice;
	private String _faxOffice;
	private long _level1;
	private long _level2;
	private long _level3;
	private long _level4;
	private long _level5;
	private String _acronimo;
	private OrganizationChart _escapedModel;
}