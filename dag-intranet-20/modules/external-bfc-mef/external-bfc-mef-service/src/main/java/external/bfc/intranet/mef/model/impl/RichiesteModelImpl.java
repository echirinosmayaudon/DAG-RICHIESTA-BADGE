/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package external.bfc.intranet.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import external.bfc.intranet.mef.model.Richieste;
import external.bfc.intranet.mef.model.RichiesteModel;
import external.bfc.intranet.mef.model.RichiesteSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Richieste service. Represents a row in the &quot;NEW_RGS_RICHIESTE_BFC&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RichiesteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RichiesteImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RichiesteImpl
 * @see Richieste
 * @see RichiesteModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RichiesteModelImpl extends BaseModelImpl<Richieste>
	implements RichiesteModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a richieste model instance should use the {@link Richieste} interface instead.
	 */
	public static final String TABLE_NAME = "NEW_RGS_RICHIESTE_BFC";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID_STATO_ATTUALE", Types.BIGINT },
			{ "ID", Types.BIGINT },
			{ "DATA_RICHIESTA", Types.TIMESTAMP },
			{ "ID_PERIODICITA", Types.BIGINT },
			{ "EMAIL", Types.VARCHAR },
			{ "RIFERIMENTO_STANZA", Types.VARCHAR },
			{ "ISPETTORATO", Types.VARCHAR },
			{ "NOTE_RICHIEDENTE", Types.VARCHAR },
			{ "UFFICIO", Types.VARCHAR },
			{ "NOTE", Types.VARCHAR },
			{ "UID_INS", Types.BIGINT },
			{ "DATA_INS", Types.TIMESTAMP },
			{ "UID_UPD", Types.BIGINT },
			{ "DATA_UPD", Types.TIMESTAMP },
			{ "OGGETTO", Types.VARCHAR },
			{ "ID_SEDE", Types.VARCHAR },
			{ "KCSTRUT_ISP", Types.VARCHAR },
			{ "KCSTRUT_UFF", Types.VARCHAR },
			{ "KCSTRUT_ISP2", Types.VARCHAR },
			{ "TEL_RICHIEDENTE", Types.VARCHAR },
			{ "COSTO_REALE", Types.FLOAT },
			{ "PREVENTIVO", Types.INTEGER },
			{ "FLAG_INVO", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ID_STATO_ATTUALE", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_RICHIESTA", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ID_PERIODICITA", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("EMAIL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RIFERIMENTO_STANZA", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ISPETTORATO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("NOTE_RICHIEDENTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UFFICIO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("NOTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UID_INS", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_INS", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("UID_UPD", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("DATA_UPD", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("OGGETTO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ID_SEDE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KCSTRUT_ISP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KCSTRUT_UFF", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KCSTRUT_ISP2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TEL_RICHIEDENTE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COSTO_REALE", Types.FLOAT);
		TABLE_COLUMNS_MAP.put("PREVENTIVO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("FLAG_INVO", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table NEW_RGS_RICHIESTE_BFC (ID_STATO_ATTUALE LONG,ID LONG not null primary key,DATA_RICHIESTA DATE null,ID_PERIODICITA LONG,EMAIL VARCHAR(100) null,RIFERIMENTO_STANZA VARCHAR(50) null,ISPETTORATO VARCHAR(100) null,NOTE_RICHIEDENTE STRING null,UFFICIO VARCHAR(100) null,NOTE STRING null,UID_INS LONG,DATA_INS DATE null,UID_UPD LONG,DATA_UPD DATE null,OGGETTO VARCHAR(100) null,ID_SEDE VARCHAR(50) null,KCSTRUT_ISP VARCHAR(10) null,KCSTRUT_UFF VARCHAR(10) null,KCSTRUT_ISP2 VARCHAR(10) null,TEL_RICHIEDENTE VARCHAR(20) null,COSTO_REALE DOUBLE,PREVENTIVO INTEGER,FLAG_INVO INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table NEW_RGS_RICHIESTE_BFC";
	public static final String ORDER_BY_JPQL = " ORDER BY richieste.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY NEW_RGS_RICHIESTE_BFC.ID ASC";
	public static final String DATA_SOURCE = "stage";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(external.bfc.intranet.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.external.bfc.intranet.mef.model.Richieste"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(external.bfc.intranet.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.external.bfc.intranet.mef.model.Richieste"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(external.bfc.intranet.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.external.bfc.intranet.mef.model.Richieste"),
			true);
	public static final long EMAIL_COLUMN_BITMASK = 1L;
	public static final long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Richieste toModel(RichiesteSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Richieste model = new RichiesteImpl();

		model.setIdStatoAttuale(soapModel.getIdStatoAttuale());
		model.setId(soapModel.getId());
		model.setDataRichiesta(soapModel.getDataRichiesta());
		model.setIdPeriodicita(soapModel.getIdPeriodicita());
		model.setEmail(soapModel.getEmail());
		model.setRiferimentoStanza(soapModel.getRiferimentoStanza());
		model.setIspettorato(soapModel.getIspettorato());
		model.setNoteRichiedente(soapModel.getNoteRichiedente());
		model.setUfficio(soapModel.getUfficio());
		model.setNote(soapModel.getNote());
		model.setUidIns(soapModel.getUidIns());
		model.setDataIns(soapModel.getDataIns());
		model.setUidUpd(soapModel.getUidUpd());
		model.setDataUpd(soapModel.getDataUpd());
		model.setOggetto(soapModel.getOggetto());
		model.setIdSede(soapModel.getIdSede());
		model.setStrutIsp(soapModel.getStrutIsp());
		model.setStrutUff(soapModel.getStrutUff());
		model.setStrutIsp2(soapModel.getStrutIsp2());
		model.setTelRichiedente(soapModel.getTelRichiedente());
		model.setCostoReale(soapModel.getCostoReale());
		model.setPreventivo(soapModel.getPreventivo());
		model.setFlagInvio(soapModel.getFlagInvio());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Richieste> toModels(RichiesteSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Richieste> models = new ArrayList<Richieste>(soapModels.length);

		for (RichiesteSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(external.bfc.intranet.mef.service.util.PropsUtil.get(
				"lock.expiration.time.external.bfc.intranet.mef.model.Richieste"));

	public RichiesteModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Richieste.class;
	}

	@Override
	public String getModelClassName() {
		return Richieste.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idStatoAttuale", getIdStatoAttuale());
		attributes.put("id", getId());
		attributes.put("dataRichiesta", getDataRichiesta());
		attributes.put("idPeriodicita", getIdPeriodicita());
		attributes.put("email", getEmail());
		attributes.put("riferimentoStanza", getRiferimentoStanza());
		attributes.put("ispettorato", getIspettorato());
		attributes.put("noteRichiedente", getNoteRichiedente());
		attributes.put("ufficio", getUfficio());
		attributes.put("note", getNote());
		attributes.put("uidIns", getUidIns());
		attributes.put("dataIns", getDataIns());
		attributes.put("uidUpd", getUidUpd());
		attributes.put("dataUpd", getDataUpd());
		attributes.put("oggetto", getOggetto());
		attributes.put("idSede", getIdSede());
		attributes.put("strutIsp", getStrutIsp());
		attributes.put("strutUff", getStrutUff());
		attributes.put("strutIsp2", getStrutIsp2());
		attributes.put("telRichiedente", getTelRichiedente());
		attributes.put("costoReale", getCostoReale());
		attributes.put("preventivo", getPreventivo());
		attributes.put("flagInvio", getFlagInvio());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long idStatoAttuale = (Long)attributes.get("idStatoAttuale");

		if (idStatoAttuale != null) {
			setIdStatoAttuale(idStatoAttuale);
		}

		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Date dataRichiesta = (Date)attributes.get("dataRichiesta");

		if (dataRichiesta != null) {
			setDataRichiesta(dataRichiesta);
		}

		Long idPeriodicita = (Long)attributes.get("idPeriodicita");

		if (idPeriodicita != null) {
			setIdPeriodicita(idPeriodicita);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String riferimentoStanza = (String)attributes.get("riferimentoStanza");

		if (riferimentoStanza != null) {
			setRiferimentoStanza(riferimentoStanza);
		}

		String ispettorato = (String)attributes.get("ispettorato");

		if (ispettorato != null) {
			setIspettorato(ispettorato);
		}

		String noteRichiedente = (String)attributes.get("noteRichiedente");

		if (noteRichiedente != null) {
			setNoteRichiedente(noteRichiedente);
		}

		String ufficio = (String)attributes.get("ufficio");

		if (ufficio != null) {
			setUfficio(ufficio);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Long uidIns = (Long)attributes.get("uidIns");

		if (uidIns != null) {
			setUidIns(uidIns);
		}

		Date dataIns = (Date)attributes.get("dataIns");

		if (dataIns != null) {
			setDataIns(dataIns);
		}

		Long uidUpd = (Long)attributes.get("uidUpd");

		if (uidUpd != null) {
			setUidUpd(uidUpd);
		}

		Date dataUpd = (Date)attributes.get("dataUpd");

		if (dataUpd != null) {
			setDataUpd(dataUpd);
		}

		String oggetto = (String)attributes.get("oggetto");

		if (oggetto != null) {
			setOggetto(oggetto);
		}

		String idSede = (String)attributes.get("idSede");

		if (idSede != null) {
			setIdSede(idSede);
		}

		String strutIsp = (String)attributes.get("strutIsp");

		if (strutIsp != null) {
			setStrutIsp(strutIsp);
		}

		String strutUff = (String)attributes.get("strutUff");

		if (strutUff != null) {
			setStrutUff(strutUff);
		}

		String strutIsp2 = (String)attributes.get("strutIsp2");

		if (strutIsp2 != null) {
			setStrutIsp2(strutIsp2);
		}

		String telRichiedente = (String)attributes.get("telRichiedente");

		if (telRichiedente != null) {
			setTelRichiedente(telRichiedente);
		}

		Float costoReale = (Float)attributes.get("costoReale");

		if (costoReale != null) {
			setCostoReale(costoReale);
		}

		Integer preventivo = (Integer)attributes.get("preventivo");

		if (preventivo != null) {
			setPreventivo(preventivo);
		}

		Integer flagInvio = (Integer)attributes.get("flagInvio");

		if (flagInvio != null) {
			setFlagInvio(flagInvio);
		}
	}

	@JSON
	@Override
	public long getIdStatoAttuale() {
		return _idStatoAttuale;
	}

	@Override
	public void setIdStatoAttuale(long idStatoAttuale) {
		_idStatoAttuale = idStatoAttuale;
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public Date getDataRichiesta() {
		return _dataRichiesta;
	}

	@Override
	public void setDataRichiesta(Date dataRichiesta) {
		_dataRichiesta = dataRichiesta;
	}

	@JSON
	@Override
	public long getIdPeriodicita() {
		return _idPeriodicita;
	}

	@Override
	public void setIdPeriodicita(long idPeriodicita) {
		_idPeriodicita = idPeriodicita;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@JSON
	@Override
	public String getRiferimentoStanza() {
		if (_riferimentoStanza == null) {
			return StringPool.BLANK;
		}
		else {
			return _riferimentoStanza;
		}
	}

	@Override
	public void setRiferimentoStanza(String riferimentoStanza) {
		_riferimentoStanza = riferimentoStanza;
	}

	@JSON
	@Override
	public String getIspettorato() {
		if (_ispettorato == null) {
			return StringPool.BLANK;
		}
		else {
			return _ispettorato;
		}
	}

	@Override
	public void setIspettorato(String ispettorato) {
		_ispettorato = ispettorato;
	}

	@JSON
	@Override
	public String getNoteRichiedente() {
		if (_noteRichiedente == null) {
			return StringPool.BLANK;
		}
		else {
			return _noteRichiedente;
		}
	}

	@Override
	public void setNoteRichiedente(String noteRichiedente) {
		_noteRichiedente = noteRichiedente;
	}

	@JSON
	@Override
	public String getUfficio() {
		if (_ufficio == null) {
			return StringPool.BLANK;
		}
		else {
			return _ufficio;
		}
	}

	@Override
	public void setUfficio(String ufficio) {
		_ufficio = ufficio;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public long getUidIns() {
		return _uidIns;
	}

	@Override
	public void setUidIns(long uidIns) {
		_uidIns = uidIns;
	}

	@JSON
	@Override
	public Date getDataIns() {
		return _dataIns;
	}

	@Override
	public void setDataIns(Date dataIns) {
		_dataIns = dataIns;
	}

	@JSON
	@Override
	public long getUidUpd() {
		return _uidUpd;
	}

	@Override
	public void setUidUpd(long uidUpd) {
		_uidUpd = uidUpd;
	}

	@JSON
	@Override
	public Date getDataUpd() {
		return _dataUpd;
	}

	@Override
	public void setDataUpd(Date dataUpd) {
		_dataUpd = dataUpd;
	}

	@JSON
	@Override
	public String getOggetto() {
		if (_oggetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _oggetto;
		}
	}

	@Override
	public void setOggetto(String oggetto) {
		_oggetto = oggetto;
	}

	@JSON
	@Override
	public String getIdSede() {
		if (_idSede == null) {
			return StringPool.BLANK;
		}
		else {
			return _idSede;
		}
	}

	@Override
	public void setIdSede(String idSede) {
		_idSede = idSede;
	}

	@JSON
	@Override
	public String getStrutIsp() {
		if (_strutIsp == null) {
			return StringPool.BLANK;
		}
		else {
			return _strutIsp;
		}
	}

	@Override
	public void setStrutIsp(String strutIsp) {
		_strutIsp = strutIsp;
	}

	@JSON
	@Override
	public String getStrutUff() {
		if (_strutUff == null) {
			return StringPool.BLANK;
		}
		else {
			return _strutUff;
		}
	}

	@Override
	public void setStrutUff(String strutUff) {
		_strutUff = strutUff;
	}

	@JSON
	@Override
	public String getStrutIsp2() {
		if (_strutIsp2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _strutIsp2;
		}
	}

	@Override
	public void setStrutIsp2(String strutIsp2) {
		_strutIsp2 = strutIsp2;
	}

	@JSON
	@Override
	public String getTelRichiedente() {
		if (_telRichiedente == null) {
			return StringPool.BLANK;
		}
		else {
			return _telRichiedente;
		}
	}

	@Override
	public void setTelRichiedente(String telRichiedente) {
		_telRichiedente = telRichiedente;
	}

	@JSON
	@Override
	public float getCostoReale() {
		return _costoReale;
	}

	@Override
	public void setCostoReale(float costoReale) {
		_costoReale = costoReale;
	}

	@JSON
	@Override
	public int getPreventivo() {
		return _preventivo;
	}

	@Override
	public void setPreventivo(int preventivo) {
		_preventivo = preventivo;
	}

	@JSON
	@Override
	public int getFlagInvio() {
		return _flagInvio;
	}

	@Override
	public void setFlagInvio(int flagInvio) {
		_flagInvio = flagInvio;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Richieste.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Richieste toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Richieste)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RichiesteImpl richiesteImpl = new RichiesteImpl();

		richiesteImpl.setIdStatoAttuale(getIdStatoAttuale());
		richiesteImpl.setId(getId());
		richiesteImpl.setDataRichiesta(getDataRichiesta());
		richiesteImpl.setIdPeriodicita(getIdPeriodicita());
		richiesteImpl.setEmail(getEmail());
		richiesteImpl.setRiferimentoStanza(getRiferimentoStanza());
		richiesteImpl.setIspettorato(getIspettorato());
		richiesteImpl.setNoteRichiedente(getNoteRichiedente());
		richiesteImpl.setUfficio(getUfficio());
		richiesteImpl.setNote(getNote());
		richiesteImpl.setUidIns(getUidIns());
		richiesteImpl.setDataIns(getDataIns());
		richiesteImpl.setUidUpd(getUidUpd());
		richiesteImpl.setDataUpd(getDataUpd());
		richiesteImpl.setOggetto(getOggetto());
		richiesteImpl.setIdSede(getIdSede());
		richiesteImpl.setStrutIsp(getStrutIsp());
		richiesteImpl.setStrutUff(getStrutUff());
		richiesteImpl.setStrutIsp2(getStrutIsp2());
		richiesteImpl.setTelRichiedente(getTelRichiedente());
		richiesteImpl.setCostoReale(getCostoReale());
		richiesteImpl.setPreventivo(getPreventivo());
		richiesteImpl.setFlagInvio(getFlagInvio());

		richiesteImpl.resetOriginalValues();

		return richiesteImpl;
	}

	@Override
	public int compareTo(Richieste richieste) {
		long primaryKey = richieste.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Richieste)) {
			return false;
		}

		Richieste richieste = (Richieste)obj;

		long primaryKey = richieste.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RichiesteModelImpl richiesteModelImpl = this;

		richiesteModelImpl._originalEmail = richiesteModelImpl._email;

		richiesteModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Richieste> toCacheModel() {
		RichiesteCacheModel richiesteCacheModel = new RichiesteCacheModel();

		richiesteCacheModel.idStatoAttuale = getIdStatoAttuale();

		richiesteCacheModel.id = getId();

		Date dataRichiesta = getDataRichiesta();

		if (dataRichiesta != null) {
			richiesteCacheModel.dataRichiesta = dataRichiesta.getTime();
		}
		else {
			richiesteCacheModel.dataRichiesta = Long.MIN_VALUE;
		}

		richiesteCacheModel.idPeriodicita = getIdPeriodicita();

		richiesteCacheModel.email = getEmail();

		String email = richiesteCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			richiesteCacheModel.email = null;
		}

		richiesteCacheModel.riferimentoStanza = getRiferimentoStanza();

		String riferimentoStanza = richiesteCacheModel.riferimentoStanza;

		if ((riferimentoStanza != null) && (riferimentoStanza.length() == 0)) {
			richiesteCacheModel.riferimentoStanza = null;
		}

		richiesteCacheModel.ispettorato = getIspettorato();

		String ispettorato = richiesteCacheModel.ispettorato;

		if ((ispettorato != null) && (ispettorato.length() == 0)) {
			richiesteCacheModel.ispettorato = null;
		}

		richiesteCacheModel.noteRichiedente = getNoteRichiedente();

		String noteRichiedente = richiesteCacheModel.noteRichiedente;

		if ((noteRichiedente != null) && (noteRichiedente.length() == 0)) {
			richiesteCacheModel.noteRichiedente = null;
		}

		richiesteCacheModel.ufficio = getUfficio();

		String ufficio = richiesteCacheModel.ufficio;

		if ((ufficio != null) && (ufficio.length() == 0)) {
			richiesteCacheModel.ufficio = null;
		}

		richiesteCacheModel.note = getNote();

		String note = richiesteCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			richiesteCacheModel.note = null;
		}

		richiesteCacheModel.uidIns = getUidIns();

		Date dataIns = getDataIns();

		if (dataIns != null) {
			richiesteCacheModel.dataIns = dataIns.getTime();
		}
		else {
			richiesteCacheModel.dataIns = Long.MIN_VALUE;
		}

		richiesteCacheModel.uidUpd = getUidUpd();

		Date dataUpd = getDataUpd();

		if (dataUpd != null) {
			richiesteCacheModel.dataUpd = dataUpd.getTime();
		}
		else {
			richiesteCacheModel.dataUpd = Long.MIN_VALUE;
		}

		richiesteCacheModel.oggetto = getOggetto();

		String oggetto = richiesteCacheModel.oggetto;

		if ((oggetto != null) && (oggetto.length() == 0)) {
			richiesteCacheModel.oggetto = null;
		}

		richiesteCacheModel.idSede = getIdSede();

		String idSede = richiesteCacheModel.idSede;

		if ((idSede != null) && (idSede.length() == 0)) {
			richiesteCacheModel.idSede = null;
		}

		richiesteCacheModel.strutIsp = getStrutIsp();

		String strutIsp = richiesteCacheModel.strutIsp;

		if ((strutIsp != null) && (strutIsp.length() == 0)) {
			richiesteCacheModel.strutIsp = null;
		}

		richiesteCacheModel.strutUff = getStrutUff();

		String strutUff = richiesteCacheModel.strutUff;

		if ((strutUff != null) && (strutUff.length() == 0)) {
			richiesteCacheModel.strutUff = null;
		}

		richiesteCacheModel.strutIsp2 = getStrutIsp2();

		String strutIsp2 = richiesteCacheModel.strutIsp2;

		if ((strutIsp2 != null) && (strutIsp2.length() == 0)) {
			richiesteCacheModel.strutIsp2 = null;
		}

		richiesteCacheModel.telRichiedente = getTelRichiedente();

		String telRichiedente = richiesteCacheModel.telRichiedente;

		if ((telRichiedente != null) && (telRichiedente.length() == 0)) {
			richiesteCacheModel.telRichiedente = null;
		}

		richiesteCacheModel.costoReale = getCostoReale();

		richiesteCacheModel.preventivo = getPreventivo();

		richiesteCacheModel.flagInvio = getFlagInvio();

		return richiesteCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{idStatoAttuale=");
		sb.append(getIdStatoAttuale());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", dataRichiesta=");
		sb.append(getDataRichiesta());
		sb.append(", idPeriodicita=");
		sb.append(getIdPeriodicita());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", riferimentoStanza=");
		sb.append(getRiferimentoStanza());
		sb.append(", ispettorato=");
		sb.append(getIspettorato());
		sb.append(", noteRichiedente=");
		sb.append(getNoteRichiedente());
		sb.append(", ufficio=");
		sb.append(getUfficio());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", uidIns=");
		sb.append(getUidIns());
		sb.append(", dataIns=");
		sb.append(getDataIns());
		sb.append(", uidUpd=");
		sb.append(getUidUpd());
		sb.append(", dataUpd=");
		sb.append(getDataUpd());
		sb.append(", oggetto=");
		sb.append(getOggetto());
		sb.append(", idSede=");
		sb.append(getIdSede());
		sb.append(", strutIsp=");
		sb.append(getStrutIsp());
		sb.append(", strutUff=");
		sb.append(getStrutUff());
		sb.append(", strutIsp2=");
		sb.append(getStrutIsp2());
		sb.append(", telRichiedente=");
		sb.append(getTelRichiedente());
		sb.append(", costoReale=");
		sb.append(getCostoReale());
		sb.append(", preventivo=");
		sb.append(getPreventivo());
		sb.append(", flagInvio=");
		sb.append(getFlagInvio());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("external.bfc.intranet.mef.model.Richieste");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idStatoAttuale</column-name><column-value><![CDATA[");
		sb.append(getIdStatoAttuale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataRichiesta</column-name><column-value><![CDATA[");
		sb.append(getDataRichiesta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idPeriodicita</column-name><column-value><![CDATA[");
		sb.append(getIdPeriodicita());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>riferimentoStanza</column-name><column-value><![CDATA[");
		sb.append(getRiferimentoStanza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ispettorato</column-name><column-value><![CDATA[");
		sb.append(getIspettorato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noteRichiedente</column-name><column-value><![CDATA[");
		sb.append(getNoteRichiedente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ufficio</column-name><column-value><![CDATA[");
		sb.append(getUfficio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uidIns</column-name><column-value><![CDATA[");
		sb.append(getUidIns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataIns</column-name><column-value><![CDATA[");
		sb.append(getDataIns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uidUpd</column-name><column-value><![CDATA[");
		sb.append(getUidUpd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataUpd</column-name><column-value><![CDATA[");
		sb.append(getDataUpd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oggetto</column-name><column-value><![CDATA[");
		sb.append(getOggetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idSede</column-name><column-value><![CDATA[");
		sb.append(getIdSede());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strutIsp</column-name><column-value><![CDATA[");
		sb.append(getStrutIsp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strutUff</column-name><column-value><![CDATA[");
		sb.append(getStrutUff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strutIsp2</column-name><column-value><![CDATA[");
		sb.append(getStrutIsp2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telRichiedente</column-name><column-value><![CDATA[");
		sb.append(getTelRichiedente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costoReale</column-name><column-value><![CDATA[");
		sb.append(getCostoReale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preventivo</column-name><column-value><![CDATA[");
		sb.append(getPreventivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flagInvio</column-name><column-value><![CDATA[");
		sb.append(getFlagInvio());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Richieste.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Richieste.class
		};
	private long _idStatoAttuale;
	private long _id;
	private Date _dataRichiesta;
	private long _idPeriodicita;
	private String _email;
	private String _originalEmail;
	private String _riferimentoStanza;
	private String _ispettorato;
	private String _noteRichiedente;
	private String _ufficio;
	private String _note;
	private long _uidIns;
	private Date _dataIns;
	private long _uidUpd;
	private Date _dataUpd;
	private String _oggetto;
	private String _idSede;
	private String _strutIsp;
	private String _strutUff;
	private String _strutIsp2;
	private String _telRichiedente;
	private float _costoReale;
	private int _preventivo;
	private int _flagInvio;
	private long _columnBitmask;
	private Richieste _escapedModel;
}