/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.accenture.lavoro.agile.istanza.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich;
import com.accenture.lavoro.agile.istanza.mef.model.OpzioneRichModel;
import com.accenture.lavoro.agile.istanza.mef.model.OpzioneRichSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the OpzioneRich service. Represents a row in the &quot;MEFISTAGILE_OpzioneRich&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link OpzioneRichModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OpzioneRichImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OpzioneRichImpl
 * @see OpzioneRich
 * @see OpzioneRichModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class OpzioneRichModelImpl extends BaseModelImpl<OpzioneRich>
	implements OpzioneRichModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a opzione rich model instance should use the {@link OpzioneRich} interface instead.
	 */
	public static final String TABLE_NAME = "MEFISTAGILE_OpzioneRich";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_opt", Types.BIGINT },
			{ "label_opt", Types.VARCHAR },
			{ "testo_opt", Types.VARCHAR },
			{ "peso_opt", Types.INTEGER },
			{ "data_in", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_opt", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("label_opt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("testo_opt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("peso_opt", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("data_in", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table MEFISTAGILE_OpzioneRich (id_opt LONG not null primary key,label_opt VARCHAR(100) null,testo_opt VARCHAR(2000) null,peso_opt INTEGER,data_in DATE null)";
	public static final String TABLE_SQL_DROP = "drop table MEFISTAGILE_OpzioneRich";
	public static final String ORDER_BY_JPQL = " ORDER BY opzioneRich.data_in DESC";
	public static final String ORDER_BY_SQL = " ORDER BY MEFISTAGILE_OpzioneRich.data_in DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.accenture.lavoro.agile.istanza.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.accenture.lavoro.agile.istanza.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.accenture.lavoro.agile.istanza.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich"),
			true);
	public static final long LABEL_OPT_COLUMN_BITMASK = 1L;
	public static final long DATA_IN_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static OpzioneRich toModel(OpzioneRichSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		OpzioneRich model = new OpzioneRichImpl();

		model.setId_opt(soapModel.getId_opt());
		model.setLabel_opt(soapModel.getLabel_opt());
		model.setTesto_opt(soapModel.getTesto_opt());
		model.setPeso_opt(soapModel.getPeso_opt());
		model.setData_in(soapModel.getData_in());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<OpzioneRich> toModels(OpzioneRichSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<OpzioneRich> models = new ArrayList<OpzioneRich>(soapModels.length);

		for (OpzioneRichSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.accenture.lavoro.agile.istanza.mef.service.util.PropsUtil.get(
				"lock.expiration.time.com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich"));

	public OpzioneRichModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_opt;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_opt(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_opt;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OpzioneRich.class;
	}

	@Override
	public String getModelClassName() {
		return OpzioneRich.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_opt", getId_opt());
		attributes.put("label_opt", getLabel_opt());
		attributes.put("testo_opt", getTesto_opt());
		attributes.put("peso_opt", getPeso_opt());
		attributes.put("data_in", getData_in());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_opt = (Long)attributes.get("id_opt");

		if (id_opt != null) {
			setId_opt(id_opt);
		}

		String label_opt = (String)attributes.get("label_opt");

		if (label_opt != null) {
			setLabel_opt(label_opt);
		}

		String testo_opt = (String)attributes.get("testo_opt");

		if (testo_opt != null) {
			setTesto_opt(testo_opt);
		}

		Integer peso_opt = (Integer)attributes.get("peso_opt");

		if (peso_opt != null) {
			setPeso_opt(peso_opt);
		}

		Date data_in = (Date)attributes.get("data_in");

		if (data_in != null) {
			setData_in(data_in);
		}
	}

	@JSON
	@Override
	public long getId_opt() {
		return _id_opt;
	}

	@Override
	public void setId_opt(long id_opt) {
		_id_opt = id_opt;
	}

	@JSON
	@Override
	public String getLabel_opt() {
		if (_label_opt == null) {
			return "";
		}
		else {
			return _label_opt;
		}
	}

	@Override
	public void setLabel_opt(String label_opt) {
		_columnBitmask |= LABEL_OPT_COLUMN_BITMASK;

		if (_originalLabel_opt == null) {
			_originalLabel_opt = _label_opt;
		}

		_label_opt = label_opt;
	}

	public String getOriginalLabel_opt() {
		return GetterUtil.getString(_originalLabel_opt);
	}

	@JSON
	@Override
	public String getTesto_opt() {
		if (_testo_opt == null) {
			return "";
		}
		else {
			return _testo_opt;
		}
	}

	@Override
	public void setTesto_opt(String testo_opt) {
		_testo_opt = testo_opt;
	}

	@JSON
	@Override
	public int getPeso_opt() {
		return _peso_opt;
	}

	@Override
	public void setPeso_opt(int peso_opt) {
		_peso_opt = peso_opt;
	}

	@JSON
	@Override
	public Date getData_in() {
		return _data_in;
	}

	@Override
	public void setData_in(Date data_in) {
		_columnBitmask = -1L;

		_data_in = data_in;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			OpzioneRich.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OpzioneRich toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OpzioneRich)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OpzioneRichImpl opzioneRichImpl = new OpzioneRichImpl();

		opzioneRichImpl.setId_opt(getId_opt());
		opzioneRichImpl.setLabel_opt(getLabel_opt());
		opzioneRichImpl.setTesto_opt(getTesto_opt());
		opzioneRichImpl.setPeso_opt(getPeso_opt());
		opzioneRichImpl.setData_in(getData_in());

		opzioneRichImpl.resetOriginalValues();

		return opzioneRichImpl;
	}

	@Override
	public int compareTo(OpzioneRich opzioneRich) {
		int value = 0;

		value = DateUtil.compareTo(getData_in(), opzioneRich.getData_in());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OpzioneRich)) {
			return false;
		}

		OpzioneRich opzioneRich = (OpzioneRich)obj;

		long primaryKey = opzioneRich.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		OpzioneRichModelImpl opzioneRichModelImpl = this;

		opzioneRichModelImpl._originalLabel_opt = opzioneRichModelImpl._label_opt;

		opzioneRichModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OpzioneRich> toCacheModel() {
		OpzioneRichCacheModel opzioneRichCacheModel = new OpzioneRichCacheModel();

		opzioneRichCacheModel.id_opt = getId_opt();

		opzioneRichCacheModel.label_opt = getLabel_opt();

		String label_opt = opzioneRichCacheModel.label_opt;

		if ((label_opt != null) && (label_opt.length() == 0)) {
			opzioneRichCacheModel.label_opt = null;
		}

		opzioneRichCacheModel.testo_opt = getTesto_opt();

		String testo_opt = opzioneRichCacheModel.testo_opt;

		if ((testo_opt != null) && (testo_opt.length() == 0)) {
			opzioneRichCacheModel.testo_opt = null;
		}

		opzioneRichCacheModel.peso_opt = getPeso_opt();

		Date data_in = getData_in();

		if (data_in != null) {
			opzioneRichCacheModel.data_in = data_in.getTime();
		}
		else {
			opzioneRichCacheModel.data_in = Long.MIN_VALUE;
		}

		return opzioneRichCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id_opt=");
		sb.append(getId_opt());
		sb.append(", label_opt=");
		sb.append(getLabel_opt());
		sb.append(", testo_opt=");
		sb.append(getTesto_opt());
		sb.append(", peso_opt=");
		sb.append(getPeso_opt());
		sb.append(", data_in=");
		sb.append(getData_in());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.accenture.lavoro.agile.istanza.mef.model.OpzioneRich");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_opt</column-name><column-value><![CDATA[");
		sb.append(getId_opt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>label_opt</column-name><column-value><![CDATA[");
		sb.append(getLabel_opt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>testo_opt</column-name><column-value><![CDATA[");
		sb.append(getTesto_opt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>peso_opt</column-name><column-value><![CDATA[");
		sb.append(getPeso_opt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_in</column-name><column-value><![CDATA[");
		sb.append(getData_in());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = OpzioneRich.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			OpzioneRich.class, ModelWrapper.class
		};
	private long _id_opt;
	private String _label_opt;
	private String _originalLabel_opt;
	private String _testo_opt;
	private int _peso_opt;
	private Date _data_in;
	private long _columnBitmask;
	private OpzioneRich _escapedModel;
}