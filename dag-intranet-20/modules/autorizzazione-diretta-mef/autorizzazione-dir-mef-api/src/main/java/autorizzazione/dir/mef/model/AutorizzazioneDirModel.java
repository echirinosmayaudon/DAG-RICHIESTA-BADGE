/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package autorizzazione.dir.mef.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the AutorizzazioneDir service. Represents a row in the &quot;MEFSERV_AutorizzazioneDir&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link autorizzazione.dir.mef.model.impl.AutorizzazioneDirModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link autorizzazione.dir.mef.model.impl.AutorizzazioneDirImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AutorizzazioneDir
 * @see autorizzazione.dir.mef.model.impl.AutorizzazioneDirImpl
 * @see autorizzazione.dir.mef.model.impl.AutorizzazioneDirModelImpl
 * @generated
 */
@ProviderType
public interface AutorizzazioneDirModel extends BaseModel<AutorizzazioneDir> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a autorizzazione dir model instance should use the {@link AutorizzazioneDir} interface instead.
	 */

	/**
	 * Returns the primary key of this autorizzazione dir.
	 *
	 * @return the primary key of this autorizzazione dir
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this autorizzazione dir.
	 *
	 * @param primaryKey the primary key of this autorizzazione dir
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the id_autorizzazione of this autorizzazione dir.
	 *
	 * @return the id_autorizzazione of this autorizzazione dir
	 */
	public long getId_autorizzazione();

	/**
	 * Sets the id_autorizzazione of this autorizzazione dir.
	 *
	 * @param id_autorizzazione the id_autorizzazione of this autorizzazione dir
	 */
	public void setId_autorizzazione(long id_autorizzazione);

	/**
	 * Returns the id_applicazione of this autorizzazione dir.
	 *
	 * @return the id_applicazione of this autorizzazione dir
	 */
	public long getId_applicazione();

	/**
	 * Sets the id_applicazione of this autorizzazione dir.
	 *
	 * @param id_applicazione the id_applicazione of this autorizzazione dir
	 */
	public void setId_applicazione(long id_applicazione);

	/**
	 * Returns the mef of this autorizzazione dir.
	 *
	 * @return the mef of this autorizzazione dir
	 */
	public long getMef();

	/**
	 * Sets the mef of this autorizzazione dir.
	 *
	 * @param mef the mef of this autorizzazione dir
	 */
	public void setMef(long mef);

	/**
	 * Returns the dipartimento of this autorizzazione dir.
	 *
	 * @return the dipartimento of this autorizzazione dir
	 */
	public long getDipartimento();

	/**
	 * Sets the dipartimento of this autorizzazione dir.
	 *
	 * @param dipartimento the dipartimento of this autorizzazione dir
	 */
	public void setDipartimento(long dipartimento);

	/**
	 * Returns the direzione of this autorizzazione dir.
	 *
	 * @return the direzione of this autorizzazione dir
	 */
	public long getDirezione();

	/**
	 * Sets the direzione of this autorizzazione dir.
	 *
	 * @param direzione the direzione of this autorizzazione dir
	 */
	public void setDirezione(long direzione);

	/**
	 * Returns the ufficio of this autorizzazione dir.
	 *
	 * @return the ufficio of this autorizzazione dir
	 */
	public long getUfficio();

	/**
	 * Sets the ufficio of this autorizzazione dir.
	 *
	 * @param ufficio the ufficio of this autorizzazione dir
	 */
	public void setUfficio(long ufficio);

	/**
	 * Returns the codice_fiscale of this autorizzazione dir.
	 *
	 * @return the codice_fiscale of this autorizzazione dir
	 */
	@AutoEscape
	public String getCodice_fiscale();

	/**
	 * Sets the codice_fiscale of this autorizzazione dir.
	 *
	 * @param codice_fiscale the codice_fiscale of this autorizzazione dir
	 */
	public void setCodice_fiscale(String codice_fiscale);

	/**
	 * Returns the nega of this autorizzazione dir.
	 *
	 * @return the nega of this autorizzazione dir
	 */
	public boolean getNega();

	/**
	 * Returns <code>true</code> if this autorizzazione dir is nega.
	 *
	 * @return <code>true</code> if this autorizzazione dir is nega; <code>false</code> otherwise
	 */
	public boolean isNega();

	/**
	 * Sets whether this autorizzazione dir is nega.
	 *
	 * @param nega the nega of this autorizzazione dir
	 */
	public void setNega(boolean nega);

	/**
	 * Returns the tag of this autorizzazione dir.
	 *
	 * @return the tag of this autorizzazione dir
	 */
	@AutoEscape
	public String getTag();

	/**
	 * Sets the tag of this autorizzazione dir.
	 *
	 * @param tag the tag of this autorizzazione dir
	 */
	public void setTag(String tag);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		autorizzazione.dir.mef.model.AutorizzazioneDir autorizzazioneDir);

	@Override
	public int hashCode();

	@Override
	public CacheModel<autorizzazione.dir.mef.model.AutorizzazioneDir> toCacheModel();

	@Override
	public autorizzazione.dir.mef.model.AutorizzazioneDir toEscapedModel();

	@Override
	public autorizzazione.dir.mef.model.AutorizzazioneDir toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}