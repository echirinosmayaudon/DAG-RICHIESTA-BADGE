/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package autorizzazione.dir.mef.model;

import aQute.bnd.annotation.ProviderType;

import autorizzazione.dir.mef.service.persistence.UtilizzoApplicazioniPK;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UtilizzoApplicazioni service. Represents a row in the &quot;MEFSERV_UtilizzoApplicazioni&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link autorizzazione.dir.mef.model.impl.UtilizzoApplicazioniModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link autorizzazione.dir.mef.model.impl.UtilizzoApplicazioniImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UtilizzoApplicazioni
 * @see autorizzazione.dir.mef.model.impl.UtilizzoApplicazioniImpl
 * @see autorizzazione.dir.mef.model.impl.UtilizzoApplicazioniModelImpl
 * @generated
 */
@ProviderType
public interface UtilizzoApplicazioniModel extends BaseModel<UtilizzoApplicazioni> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a utilizzo applicazioni model instance should use the {@link UtilizzoApplicazioni} interface instead.
	 */

	/**
	 * Returns the primary key of this utilizzo applicazioni.
	 *
	 * @return the primary key of this utilizzo applicazioni
	 */
	public UtilizzoApplicazioniPK getPrimaryKey();

	/**
	 * Sets the primary key of this utilizzo applicazioni.
	 *
	 * @param primaryKey the primary key of this utilizzo applicazioni
	 */
	public void setPrimaryKey(UtilizzoApplicazioniPK primaryKey);

	/**
	 * Returns the row ID of this utilizzo applicazioni.
	 *
	 * @return the row ID of this utilizzo applicazioni
	 */
	public long getRowId();

	/**
	 * Sets the row ID of this utilizzo applicazioni.
	 *
	 * @param rowId the row ID of this utilizzo applicazioni
	 */
	public void setRowId(long rowId);

	/**
	 * Returns the create date of this utilizzo applicazioni.
	 *
	 * @return the create date of this utilizzo applicazioni
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this utilizzo applicazioni.
	 *
	 * @param createDate the create date of this utilizzo applicazioni
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the user ID of this utilizzo applicazioni.
	 *
	 * @return the user ID of this utilizzo applicazioni
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this utilizzo applicazioni.
	 *
	 * @param userId the user ID of this utilizzo applicazioni
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this utilizzo applicazioni.
	 *
	 * @return the user uuid of this utilizzo applicazioni
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this utilizzo applicazioni.
	 *
	 * @param userUuid the user uuid of this utilizzo applicazioni
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the application ID of this utilizzo applicazioni.
	 *
	 * @return the application ID of this utilizzo applicazioni
	 */
	public long getApplicationId();

	/**
	 * Sets the application ID of this utilizzo applicazioni.
	 *
	 * @param applicationId the application ID of this utilizzo applicazioni
	 */
	public void setApplicationId(long applicationId);

	/**
	 * Returns the last use date of this utilizzo applicazioni.
	 *
	 * @return the last use date of this utilizzo applicazioni
	 */
	public Date getLastUseDate();

	/**
	 * Sets the last use date of this utilizzo applicazioni.
	 *
	 * @param lastUseDate the last use date of this utilizzo applicazioni
	 */
	public void setLastUseDate(Date lastUseDate);

	/**
	 * Returns the hits count of this utilizzo applicazioni.
	 *
	 * @return the hits count of this utilizzo applicazioni
	 */
	public int getHitsCount();

	/**
	 * Sets the hits count of this utilizzo applicazioni.
	 *
	 * @param hitsCount the hits count of this utilizzo applicazioni
	 */
	public void setHitsCount(int hitsCount);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		autorizzazione.dir.mef.model.UtilizzoApplicazioni utilizzoApplicazioni);

	@Override
	public int hashCode();

	@Override
	public CacheModel<autorizzazione.dir.mef.model.UtilizzoApplicazioni> toCacheModel();

	@Override
	public autorizzazione.dir.mef.model.UtilizzoApplicazioni toEscapedModel();

	@Override
	public autorizzazione.dir.mef.model.UtilizzoApplicazioni toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}