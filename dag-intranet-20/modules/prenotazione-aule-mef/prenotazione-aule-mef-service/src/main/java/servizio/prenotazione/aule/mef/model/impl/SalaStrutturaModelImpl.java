/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.prenotazione.aule.mef.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import servizio.prenotazione.aule.mef.model.SalaStruttura;
import servizio.prenotazione.aule.mef.model.SalaStrutturaModel;
import servizio.prenotazione.aule.mef.model.SalaStrutturaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SalaStruttura service. Represents a row in the &quot;MEFAULE_SalaStruttura&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SalaStrutturaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SalaStrutturaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SalaStrutturaImpl
 * @see SalaStruttura
 * @see SalaStrutturaModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SalaStrutturaModelImpl extends BaseModelImpl<SalaStruttura>
	implements SalaStrutturaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sala struttura model instance should use the {@link SalaStruttura} interface instead.
	 */
	public static final String TABLE_NAME = "MEFAULE_SalaStruttura";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "id_sala", Types.BIGINT },
			{ "id_struttura", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_sala", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("id_struttura", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table MEFAULE_SalaStruttura (id_ LONG not null primary key,id_sala LONG,id_struttura LONG)";
	public static final String TABLE_SQL_DROP = "drop table MEFAULE_SalaStruttura";
	public static final String ORDER_BY_JPQL = " ORDER BY salaStruttura.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MEFAULE_SalaStruttura.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(servizio.prenotazione.aule.mef.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.servizio.prenotazione.aule.mef.model.SalaStruttura"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(servizio.prenotazione.aule.mef.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.servizio.prenotazione.aule.mef.model.SalaStruttura"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(servizio.prenotazione.aule.mef.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.servizio.prenotazione.aule.mef.model.SalaStruttura"),
			true);
	public static final long ID_STRUTTURA_COLUMN_BITMASK = 1L;
	public static final long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SalaStruttura toModel(SalaStrutturaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SalaStruttura model = new SalaStrutturaImpl();

		model.setId(soapModel.getId());
		model.setId_sala(soapModel.getId_sala());
		model.setId_struttura(soapModel.getId_struttura());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SalaStruttura> toModels(SalaStrutturaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SalaStruttura> models = new ArrayList<SalaStruttura>(soapModels.length);

		for (SalaStrutturaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(servizio.prenotazione.aule.mef.service.util.PropsUtil.get(
				"lock.expiration.time.servizio.prenotazione.aule.mef.model.SalaStruttura"));

	public SalaStrutturaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SalaStruttura.class;
	}

	@Override
	public String getModelClassName() {
		return SalaStruttura.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("id_sala", getId_sala());
		attributes.put("id_struttura", getId_struttura());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long id_sala = (Long)attributes.get("id_sala");

		if (id_sala != null) {
			setId_sala(id_sala);
		}

		Long id_struttura = (Long)attributes.get("id_struttura");

		if (id_struttura != null) {
			setId_struttura(id_struttura);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getId_sala() {
		return _id_sala;
	}

	@Override
	public void setId_sala(long id_sala) {
		_id_sala = id_sala;
	}

	@JSON
	@Override
	public long getId_struttura() {
		return _id_struttura;
	}

	@Override
	public void setId_struttura(long id_struttura) {
		_columnBitmask |= ID_STRUTTURA_COLUMN_BITMASK;

		if (!_setOriginalId_struttura) {
			_setOriginalId_struttura = true;

			_originalId_struttura = _id_struttura;
		}

		_id_struttura = id_struttura;
	}

	public long getOriginalId_struttura() {
		return _originalId_struttura;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SalaStruttura.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SalaStruttura toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SalaStruttura)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SalaStrutturaImpl salaStrutturaImpl = new SalaStrutturaImpl();

		salaStrutturaImpl.setId(getId());
		salaStrutturaImpl.setId_sala(getId_sala());
		salaStrutturaImpl.setId_struttura(getId_struttura());

		salaStrutturaImpl.resetOriginalValues();

		return salaStrutturaImpl;
	}

	@Override
	public int compareTo(SalaStruttura salaStruttura) {
		long primaryKey = salaStruttura.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SalaStruttura)) {
			return false;
		}

		SalaStruttura salaStruttura = (SalaStruttura)obj;

		long primaryKey = salaStruttura.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SalaStrutturaModelImpl salaStrutturaModelImpl = this;

		salaStrutturaModelImpl._originalId_struttura = salaStrutturaModelImpl._id_struttura;

		salaStrutturaModelImpl._setOriginalId_struttura = false;

		salaStrutturaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SalaStruttura> toCacheModel() {
		SalaStrutturaCacheModel salaStrutturaCacheModel = new SalaStrutturaCacheModel();

		salaStrutturaCacheModel.id = getId();

		salaStrutturaCacheModel.id_sala = getId_sala();

		salaStrutturaCacheModel.id_struttura = getId_struttura();

		return salaStrutturaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", id_sala=");
		sb.append(getId_sala());
		sb.append(", id_struttura=");
		sb.append(getId_struttura());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("servizio.prenotazione.aule.mef.model.SalaStruttura");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_sala</column-name><column-value><![CDATA[");
		sb.append(getId_sala());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_struttura</column-name><column-value><![CDATA[");
		sb.append(getId_struttura());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SalaStruttura.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SalaStruttura.class
		};
	private long _id;
	private long _id_sala;
	private long _id_struttura;
	private long _originalId_struttura;
	private boolean _setOriginalId_struttura;
	private long _columnBitmask;
	private SalaStruttura _escapedModel;
}