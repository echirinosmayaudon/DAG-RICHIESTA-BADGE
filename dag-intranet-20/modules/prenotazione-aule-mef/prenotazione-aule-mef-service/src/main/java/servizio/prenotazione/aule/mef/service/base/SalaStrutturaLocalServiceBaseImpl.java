/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.prenotazione.aule.mef.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import servizio.prenotazione.aule.mef.model.SalaStruttura;
import servizio.prenotazione.aule.mef.service.SalaStrutturaLocalService;
import servizio.prenotazione.aule.mef.service.persistence.ApprovatorePersistence;
import servizio.prenotazione.aule.mef.service.persistence.OrarioFinder;
import servizio.prenotazione.aule.mef.service.persistence.OrarioPersistence;
import servizio.prenotazione.aule.mef.service.persistence.PrenotazioneFinder;
import servizio.prenotazione.aule.mef.service.persistence.PrenotazionePersistence;
import servizio.prenotazione.aule.mef.service.persistence.SalaPersistence;
import servizio.prenotazione.aule.mef.service.persistence.SalaStrutturaPersistence;
import servizio.prenotazione.aule.mef.service.persistence.ServizioLogPersistence;
import servizio.prenotazione.aule.mef.service.persistence.StatoAulaPersistence;
import servizio.prenotazione.aule.mef.service.persistence.StrumentoEventoPersistence;
import servizio.prenotazione.aule.mef.service.persistence.StrumentoTecPersistence;
import servizio.prenotazione.aule.mef.service.persistence.TipoEventoPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the sala struttura local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link servizio.prenotazione.aule.mef.service.impl.SalaStrutturaLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see servizio.prenotazione.aule.mef.service.impl.SalaStrutturaLocalServiceImpl
 * @see servizio.prenotazione.aule.mef.service.SalaStrutturaLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class SalaStrutturaLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements SalaStrutturaLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link servizio.prenotazione.aule.mef.service.SalaStrutturaLocalServiceUtil} to access the sala struttura local service.
	 */

	/**
	 * Adds the sala struttura to the database. Also notifies the appropriate model listeners.
	 *
	 * @param salaStruttura the sala struttura
	 * @return the sala struttura that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SalaStruttura addSalaStruttura(SalaStruttura salaStruttura) {
		salaStruttura.setNew(true);

		return salaStrutturaPersistence.update(salaStruttura);
	}

	/**
	 * Creates a new sala struttura with the primary key. Does not add the sala struttura to the database.
	 *
	 * @param id the primary key for the new sala struttura
	 * @return the new sala struttura
	 */
	@Override
	public SalaStruttura createSalaStruttura(long id) {
		return salaStrutturaPersistence.create(id);
	}

	/**
	 * Deletes the sala struttura with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the sala struttura
	 * @return the sala struttura that was removed
	 * @throws PortalException if a sala struttura with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SalaStruttura deleteSalaStruttura(long id) throws PortalException {
		return salaStrutturaPersistence.remove(id);
	}

	/**
	 * Deletes the sala struttura from the database. Also notifies the appropriate model listeners.
	 *
	 * @param salaStruttura the sala struttura
	 * @return the sala struttura that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SalaStruttura deleteSalaStruttura(SalaStruttura salaStruttura) {
		return salaStrutturaPersistence.remove(salaStruttura);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(SalaStruttura.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return salaStrutturaPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link servizio.prenotazione.aule.mef.model.impl.SalaStrutturaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return salaStrutturaPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link servizio.prenotazione.aule.mef.model.impl.SalaStrutturaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return salaStrutturaPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return salaStrutturaPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return salaStrutturaPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public SalaStruttura fetchSalaStruttura(long id) {
		return salaStrutturaPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the sala struttura with the primary key.
	 *
	 * @param id the primary key of the sala struttura
	 * @return the sala struttura
	 * @throws PortalException if a sala struttura with the primary key could not be found
	 */
	@Override
	public SalaStruttura getSalaStruttura(long id) throws PortalException {
		return salaStrutturaPersistence.findByPrimaryKey(id);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(salaStrutturaLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(SalaStruttura.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(salaStrutturaLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(SalaStruttura.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("id");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(salaStrutturaLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(SalaStruttura.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return salaStrutturaLocalService.deleteSalaStruttura((SalaStruttura)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return salaStrutturaPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the sala strutturas.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link servizio.prenotazione.aule.mef.model.impl.SalaStrutturaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of sala strutturas
	 * @param end the upper bound of the range of sala strutturas (not inclusive)
	 * @return the range of sala strutturas
	 */
	@Override
	public List<SalaStruttura> getSalaStrutturas(int start, int end) {
		return salaStrutturaPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of sala strutturas.
	 *
	 * @return the number of sala strutturas
	 */
	@Override
	public int getSalaStrutturasCount() {
		return salaStrutturaPersistence.countAll();
	}

	/**
	 * Updates the sala struttura in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param salaStruttura the sala struttura
	 * @return the sala struttura that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SalaStruttura updateSalaStruttura(SalaStruttura salaStruttura) {
		return salaStrutturaPersistence.update(salaStruttura);
	}

	/**
	 * Returns the approvatore local service.
	 *
	 * @return the approvatore local service
	 */
	public servizio.prenotazione.aule.mef.service.ApprovatoreLocalService getApprovatoreLocalService() {
		return approvatoreLocalService;
	}

	/**
	 * Sets the approvatore local service.
	 *
	 * @param approvatoreLocalService the approvatore local service
	 */
	public void setApprovatoreLocalService(
		servizio.prenotazione.aule.mef.service.ApprovatoreLocalService approvatoreLocalService) {
		this.approvatoreLocalService = approvatoreLocalService;
	}

	/**
	 * Returns the approvatore persistence.
	 *
	 * @return the approvatore persistence
	 */
	public ApprovatorePersistence getApprovatorePersistence() {
		return approvatorePersistence;
	}

	/**
	 * Sets the approvatore persistence.
	 *
	 * @param approvatorePersistence the approvatore persistence
	 */
	public void setApprovatorePersistence(
		ApprovatorePersistence approvatorePersistence) {
		this.approvatorePersistence = approvatorePersistence;
	}

	/**
	 * Returns the orario local service.
	 *
	 * @return the orario local service
	 */
	public servizio.prenotazione.aule.mef.service.OrarioLocalService getOrarioLocalService() {
		return orarioLocalService;
	}

	/**
	 * Sets the orario local service.
	 *
	 * @param orarioLocalService the orario local service
	 */
	public void setOrarioLocalService(
		servizio.prenotazione.aule.mef.service.OrarioLocalService orarioLocalService) {
		this.orarioLocalService = orarioLocalService;
	}

	/**
	 * Returns the orario persistence.
	 *
	 * @return the orario persistence
	 */
	public OrarioPersistence getOrarioPersistence() {
		return orarioPersistence;
	}

	/**
	 * Sets the orario persistence.
	 *
	 * @param orarioPersistence the orario persistence
	 */
	public void setOrarioPersistence(OrarioPersistence orarioPersistence) {
		this.orarioPersistence = orarioPersistence;
	}

	/**
	 * Returns the orario finder.
	 *
	 * @return the orario finder
	 */
	public OrarioFinder getOrarioFinder() {
		return orarioFinder;
	}

	/**
	 * Sets the orario finder.
	 *
	 * @param orarioFinder the orario finder
	 */
	public void setOrarioFinder(OrarioFinder orarioFinder) {
		this.orarioFinder = orarioFinder;
	}

	/**
	 * Returns the prenotazione local service.
	 *
	 * @return the prenotazione local service
	 */
	public servizio.prenotazione.aule.mef.service.PrenotazioneLocalService getPrenotazioneLocalService() {
		return prenotazioneLocalService;
	}

	/**
	 * Sets the prenotazione local service.
	 *
	 * @param prenotazioneLocalService the prenotazione local service
	 */
	public void setPrenotazioneLocalService(
		servizio.prenotazione.aule.mef.service.PrenotazioneLocalService prenotazioneLocalService) {
		this.prenotazioneLocalService = prenotazioneLocalService;
	}

	/**
	 * Returns the prenotazione persistence.
	 *
	 * @return the prenotazione persistence
	 */
	public PrenotazionePersistence getPrenotazionePersistence() {
		return prenotazionePersistence;
	}

	/**
	 * Sets the prenotazione persistence.
	 *
	 * @param prenotazionePersistence the prenotazione persistence
	 */
	public void setPrenotazionePersistence(
		PrenotazionePersistence prenotazionePersistence) {
		this.prenotazionePersistence = prenotazionePersistence;
	}

	/**
	 * Returns the prenotazione finder.
	 *
	 * @return the prenotazione finder
	 */
	public PrenotazioneFinder getPrenotazioneFinder() {
		return prenotazioneFinder;
	}

	/**
	 * Sets the prenotazione finder.
	 *
	 * @param prenotazioneFinder the prenotazione finder
	 */
	public void setPrenotazioneFinder(PrenotazioneFinder prenotazioneFinder) {
		this.prenotazioneFinder = prenotazioneFinder;
	}

	/**
	 * Returns the sala local service.
	 *
	 * @return the sala local service
	 */
	public servizio.prenotazione.aule.mef.service.SalaLocalService getSalaLocalService() {
		return salaLocalService;
	}

	/**
	 * Sets the sala local service.
	 *
	 * @param salaLocalService the sala local service
	 */
	public void setSalaLocalService(
		servizio.prenotazione.aule.mef.service.SalaLocalService salaLocalService) {
		this.salaLocalService = salaLocalService;
	}

	/**
	 * Returns the sala persistence.
	 *
	 * @return the sala persistence
	 */
	public SalaPersistence getSalaPersistence() {
		return salaPersistence;
	}

	/**
	 * Sets the sala persistence.
	 *
	 * @param salaPersistence the sala persistence
	 */
	public void setSalaPersistence(SalaPersistence salaPersistence) {
		this.salaPersistence = salaPersistence;
	}

	/**
	 * Returns the sala struttura local service.
	 *
	 * @return the sala struttura local service
	 */
	public SalaStrutturaLocalService getSalaStrutturaLocalService() {
		return salaStrutturaLocalService;
	}

	/**
	 * Sets the sala struttura local service.
	 *
	 * @param salaStrutturaLocalService the sala struttura local service
	 */
	public void setSalaStrutturaLocalService(
		SalaStrutturaLocalService salaStrutturaLocalService) {
		this.salaStrutturaLocalService = salaStrutturaLocalService;
	}

	/**
	 * Returns the sala struttura persistence.
	 *
	 * @return the sala struttura persistence
	 */
	public SalaStrutturaPersistence getSalaStrutturaPersistence() {
		return salaStrutturaPersistence;
	}

	/**
	 * Sets the sala struttura persistence.
	 *
	 * @param salaStrutturaPersistence the sala struttura persistence
	 */
	public void setSalaStrutturaPersistence(
		SalaStrutturaPersistence salaStrutturaPersistence) {
		this.salaStrutturaPersistence = salaStrutturaPersistence;
	}

	/**
	 * Returns the servizio log local service.
	 *
	 * @return the servizio log local service
	 */
	public servizio.prenotazione.aule.mef.service.ServizioLogLocalService getServizioLogLocalService() {
		return servizioLogLocalService;
	}

	/**
	 * Sets the servizio log local service.
	 *
	 * @param servizioLogLocalService the servizio log local service
	 */
	public void setServizioLogLocalService(
		servizio.prenotazione.aule.mef.service.ServizioLogLocalService servizioLogLocalService) {
		this.servizioLogLocalService = servizioLogLocalService;
	}

	/**
	 * Returns the servizio log persistence.
	 *
	 * @return the servizio log persistence
	 */
	public ServizioLogPersistence getServizioLogPersistence() {
		return servizioLogPersistence;
	}

	/**
	 * Sets the servizio log persistence.
	 *
	 * @param servizioLogPersistence the servizio log persistence
	 */
	public void setServizioLogPersistence(
		ServizioLogPersistence servizioLogPersistence) {
		this.servizioLogPersistence = servizioLogPersistence;
	}

	/**
	 * Returns the stato aula local service.
	 *
	 * @return the stato aula local service
	 */
	public servizio.prenotazione.aule.mef.service.StatoAulaLocalService getStatoAulaLocalService() {
		return statoAulaLocalService;
	}

	/**
	 * Sets the stato aula local service.
	 *
	 * @param statoAulaLocalService the stato aula local service
	 */
	public void setStatoAulaLocalService(
		servizio.prenotazione.aule.mef.service.StatoAulaLocalService statoAulaLocalService) {
		this.statoAulaLocalService = statoAulaLocalService;
	}

	/**
	 * Returns the stato aula persistence.
	 *
	 * @return the stato aula persistence
	 */
	public StatoAulaPersistence getStatoAulaPersistence() {
		return statoAulaPersistence;
	}

	/**
	 * Sets the stato aula persistence.
	 *
	 * @param statoAulaPersistence the stato aula persistence
	 */
	public void setStatoAulaPersistence(
		StatoAulaPersistence statoAulaPersistence) {
		this.statoAulaPersistence = statoAulaPersistence;
	}

	/**
	 * Returns the strumento evento local service.
	 *
	 * @return the strumento evento local service
	 */
	public servizio.prenotazione.aule.mef.service.StrumentoEventoLocalService getStrumentoEventoLocalService() {
		return strumentoEventoLocalService;
	}

	/**
	 * Sets the strumento evento local service.
	 *
	 * @param strumentoEventoLocalService the strumento evento local service
	 */
	public void setStrumentoEventoLocalService(
		servizio.prenotazione.aule.mef.service.StrumentoEventoLocalService strumentoEventoLocalService) {
		this.strumentoEventoLocalService = strumentoEventoLocalService;
	}

	/**
	 * Returns the strumento evento persistence.
	 *
	 * @return the strumento evento persistence
	 */
	public StrumentoEventoPersistence getStrumentoEventoPersistence() {
		return strumentoEventoPersistence;
	}

	/**
	 * Sets the strumento evento persistence.
	 *
	 * @param strumentoEventoPersistence the strumento evento persistence
	 */
	public void setStrumentoEventoPersistence(
		StrumentoEventoPersistence strumentoEventoPersistence) {
		this.strumentoEventoPersistence = strumentoEventoPersistence;
	}

	/**
	 * Returns the strumento tec local service.
	 *
	 * @return the strumento tec local service
	 */
	public servizio.prenotazione.aule.mef.service.StrumentoTecLocalService getStrumentoTecLocalService() {
		return strumentoTecLocalService;
	}

	/**
	 * Sets the strumento tec local service.
	 *
	 * @param strumentoTecLocalService the strumento tec local service
	 */
	public void setStrumentoTecLocalService(
		servizio.prenotazione.aule.mef.service.StrumentoTecLocalService strumentoTecLocalService) {
		this.strumentoTecLocalService = strumentoTecLocalService;
	}

	/**
	 * Returns the strumento tec persistence.
	 *
	 * @return the strumento tec persistence
	 */
	public StrumentoTecPersistence getStrumentoTecPersistence() {
		return strumentoTecPersistence;
	}

	/**
	 * Sets the strumento tec persistence.
	 *
	 * @param strumentoTecPersistence the strumento tec persistence
	 */
	public void setStrumentoTecPersistence(
		StrumentoTecPersistence strumentoTecPersistence) {
		this.strumentoTecPersistence = strumentoTecPersistence;
	}

	/**
	 * Returns the tipo evento local service.
	 *
	 * @return the tipo evento local service
	 */
	public servizio.prenotazione.aule.mef.service.TipoEventoLocalService getTipoEventoLocalService() {
		return tipoEventoLocalService;
	}

	/**
	 * Sets the tipo evento local service.
	 *
	 * @param tipoEventoLocalService the tipo evento local service
	 */
	public void setTipoEventoLocalService(
		servizio.prenotazione.aule.mef.service.TipoEventoLocalService tipoEventoLocalService) {
		this.tipoEventoLocalService = tipoEventoLocalService;
	}

	/**
	 * Returns the tipo evento persistence.
	 *
	 * @return the tipo evento persistence
	 */
	public TipoEventoPersistence getTipoEventoPersistence() {
		return tipoEventoPersistence;
	}

	/**
	 * Sets the tipo evento persistence.
	 *
	 * @param tipoEventoPersistence the tipo evento persistence
	 */
	public void setTipoEventoPersistence(
		TipoEventoPersistence tipoEventoPersistence) {
		this.tipoEventoPersistence = tipoEventoPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("servizio.prenotazione.aule.mef.model.SalaStruttura",
			salaStrutturaLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"servizio.prenotazione.aule.mef.model.SalaStruttura");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return SalaStrutturaLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return SalaStruttura.class;
	}

	protected String getModelClassName() {
		return SalaStruttura.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = salaStrutturaPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = servizio.prenotazione.aule.mef.service.ApprovatoreLocalService.class)
	protected servizio.prenotazione.aule.mef.service.ApprovatoreLocalService approvatoreLocalService;
	@BeanReference(type = ApprovatorePersistence.class)
	protected ApprovatorePersistence approvatorePersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.OrarioLocalService.class)
	protected servizio.prenotazione.aule.mef.service.OrarioLocalService orarioLocalService;
	@BeanReference(type = OrarioPersistence.class)
	protected OrarioPersistence orarioPersistence;
	@BeanReference(type = OrarioFinder.class)
	protected OrarioFinder orarioFinder;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.PrenotazioneLocalService.class)
	protected servizio.prenotazione.aule.mef.service.PrenotazioneLocalService prenotazioneLocalService;
	@BeanReference(type = PrenotazionePersistence.class)
	protected PrenotazionePersistence prenotazionePersistence;
	@BeanReference(type = PrenotazioneFinder.class)
	protected PrenotazioneFinder prenotazioneFinder;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.SalaLocalService.class)
	protected servizio.prenotazione.aule.mef.service.SalaLocalService salaLocalService;
	@BeanReference(type = SalaPersistence.class)
	protected SalaPersistence salaPersistence;
	@BeanReference(type = SalaStrutturaLocalService.class)
	protected SalaStrutturaLocalService salaStrutturaLocalService;
	@BeanReference(type = SalaStrutturaPersistence.class)
	protected SalaStrutturaPersistence salaStrutturaPersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.ServizioLogLocalService.class)
	protected servizio.prenotazione.aule.mef.service.ServizioLogLocalService servizioLogLocalService;
	@BeanReference(type = ServizioLogPersistence.class)
	protected ServizioLogPersistence servizioLogPersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.StatoAulaLocalService.class)
	protected servizio.prenotazione.aule.mef.service.StatoAulaLocalService statoAulaLocalService;
	@BeanReference(type = StatoAulaPersistence.class)
	protected StatoAulaPersistence statoAulaPersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.StrumentoEventoLocalService.class)
	protected servizio.prenotazione.aule.mef.service.StrumentoEventoLocalService strumentoEventoLocalService;
	@BeanReference(type = StrumentoEventoPersistence.class)
	protected StrumentoEventoPersistence strumentoEventoPersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.StrumentoTecLocalService.class)
	protected servizio.prenotazione.aule.mef.service.StrumentoTecLocalService strumentoTecLocalService;
	@BeanReference(type = StrumentoTecPersistence.class)
	protected StrumentoTecPersistence strumentoTecPersistence;
	@BeanReference(type = servizio.prenotazione.aule.mef.service.TipoEventoLocalService.class)
	protected servizio.prenotazione.aule.mef.service.TipoEventoLocalService tipoEventoLocalService;
	@BeanReference(type = TipoEventoPersistence.class)
	protected TipoEventoPersistence tipoEventoPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}