/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servizio.beni.facile.consumo.richieste.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the RigheRichBFCNew service. Represents a row in the &quot;MEFRICHBFC_RigheRichBFCNew&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link servizio.beni.facile.consumo.richieste.model.impl.RigheRichBFCNewModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link servizio.beni.facile.consumo.richieste.model.impl.RigheRichBFCNewImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RigheRichBFCNew
 * @see servizio.beni.facile.consumo.richieste.model.impl.RigheRichBFCNewImpl
 * @see servizio.beni.facile.consumo.richieste.model.impl.RigheRichBFCNewModelImpl
 * @generated
 */
@ProviderType
public interface RigheRichBFCNewModel extends BaseModel<RigheRichBFCNew> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a righe rich b f c new model instance should use the {@link RigheRichBFCNew} interface instead.
	 */

	/**
	 * Returns the primary key of this righe rich b f c new.
	 *
	 * @return the primary key of this righe rich b f c new
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this righe rich b f c new.
	 *
	 * @param primaryKey the primary key of this righe rich b f c new
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this righe rich b f c new.
	 *
	 * @return the ID of this righe rich b f c new
	 */
	public long getId();

	/**
	 * Sets the ID of this righe rich b f c new.
	 *
	 * @param id the ID of this righe rich b f c new
	 */
	public void setId(long id);

	/**
	 * Returns the id_rich of this righe rich b f c new.
	 *
	 * @return the id_rich of this righe rich b f c new
	 */
	public long getId_rich();

	/**
	 * Sets the id_rich of this righe rich b f c new.
	 *
	 * @param id_rich the id_rich of this righe rich b f c new
	 */
	public void setId_rich(long id_rich);

	/**
	 * Returns the dipartimento of this righe rich b f c new.
	 *
	 * @return the dipartimento of this righe rich b f c new
	 */
	@AutoEscape
	public String getDipartimento();

	/**
	 * Sets the dipartimento of this righe rich b f c new.
	 *
	 * @param dipartimento the dipartimento of this righe rich b f c new
	 */
	public void setDipartimento(String dipartimento);

	/**
	 * Returns the dati1 of this righe rich b f c new.
	 *
	 * @return the dati1 of this righe rich b f c new
	 */
	@AutoEscape
	public String getDati1();

	/**
	 * Sets the dati1 of this righe rich b f c new.
	 *
	 * @param dati1 the dati1 of this righe rich b f c new
	 */
	public void setDati1(String dati1);

	/**
	 * Returns the dati2 of this righe rich b f c new.
	 *
	 * @return the dati2 of this righe rich b f c new
	 */
	@AutoEscape
	public String getDati2();

	/**
	 * Sets the dati2 of this righe rich b f c new.
	 *
	 * @param dati2 the dati2 of this righe rich b f c new
	 */
	public void setDati2(String dati2);

	/**
	 * Returns the dati3 of this righe rich b f c new.
	 *
	 * @return the dati3 of this righe rich b f c new
	 */
	@AutoEscape
	public String getDati3();

	/**
	 * Sets the dati3 of this righe rich b f c new.
	 *
	 * @param dati3 the dati3 of this righe rich b f c new
	 */
	public void setDati3(String dati3);

	/**
	 * Returns the dati4 of this righe rich b f c new.
	 *
	 * @return the dati4 of this righe rich b f c new
	 */
	@AutoEscape
	public String getDati4();

	/**
	 * Sets the dati4 of this righe rich b f c new.
	 *
	 * @param dati4 the dati4 of this righe rich b f c new
	 */
	public void setDati4(String dati4);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		servizio.beni.facile.consumo.richieste.model.RigheRichBFCNew righeRichBFCNew);

	@Override
	public int hashCode();

	@Override
	public CacheModel<servizio.beni.facile.consumo.richieste.model.RigheRichBFCNew> toCacheModel();

	@Override
	public servizio.beni.facile.consumo.richieste.model.RigheRichBFCNew toEscapedModel();

	@Override
	public servizio.beni.facile.consumo.richieste.model.RigheRichBFCNew toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}